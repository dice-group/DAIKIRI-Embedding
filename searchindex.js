Search.setIndex({"docnames": ["autoapi/dicee/abstracts/index", "autoapi/dicee/analyse_experiments/index", "autoapi/dicee/callbacks/index", "autoapi/dicee/config/index", "autoapi/dicee/dataset_classes/index", "autoapi/dicee/eval_static_funcs/index", "autoapi/dicee/evaluator/index", "autoapi/dicee/executer/index", "autoapi/dicee/index", "autoapi/dicee/knowledge_graph/index", "autoapi/dicee/knowledge_graph_embeddings/index", "autoapi/dicee/models/base_model/index", "autoapi/dicee/models/clifford/index", "autoapi/dicee/models/complex/index", "autoapi/dicee/models/function_space/index", "autoapi/dicee/models/index", "autoapi/dicee/models/octonion/index", "autoapi/dicee/models/pykeen_models/index", "autoapi/dicee/models/quaternion/index", "autoapi/dicee/models/real/index", "autoapi/dicee/models/static_funcs/index", "autoapi/dicee/models/transformers/index", "autoapi/dicee/query_generator/index", "autoapi/dicee/read_preprocess_save_load_kg/index", "autoapi/dicee/read_preprocess_save_load_kg/preprocess/index", "autoapi/dicee/read_preprocess_save_load_kg/read_from_disk/index", "autoapi/dicee/read_preprocess_save_load_kg/save_load_disk/index", "autoapi/dicee/read_preprocess_save_load_kg/util/index", "autoapi/dicee/sanity_checkers/index", "autoapi/dicee/scripts/index", "autoapi/dicee/scripts/index/index", "autoapi/dicee/scripts/run/index", "autoapi/dicee/scripts/serve/index", "autoapi/dicee/static_funcs/index", "autoapi/dicee/static_funcs_training/index", "autoapi/dicee/static_preprocess_funcs/index", "autoapi/dicee/trainer/dice_trainer/index", "autoapi/dicee/trainer/index", "autoapi/dicee/trainer/torch_trainer/index", "autoapi/dicee/trainer/torch_trainer_ddp/index", "index"], "filenames": ["autoapi/dicee/abstracts/index.rst", "autoapi/dicee/analyse_experiments/index.rst", "autoapi/dicee/callbacks/index.rst", "autoapi/dicee/config/index.rst", "autoapi/dicee/dataset_classes/index.rst", "autoapi/dicee/eval_static_funcs/index.rst", "autoapi/dicee/evaluator/index.rst", "autoapi/dicee/executer/index.rst", "autoapi/dicee/index.rst", "autoapi/dicee/knowledge_graph/index.rst", "autoapi/dicee/knowledge_graph_embeddings/index.rst", "autoapi/dicee/models/base_model/index.rst", "autoapi/dicee/models/clifford/index.rst", "autoapi/dicee/models/complex/index.rst", "autoapi/dicee/models/function_space/index.rst", "autoapi/dicee/models/index.rst", "autoapi/dicee/models/octonion/index.rst", "autoapi/dicee/models/pykeen_models/index.rst", "autoapi/dicee/models/quaternion/index.rst", "autoapi/dicee/models/real/index.rst", "autoapi/dicee/models/static_funcs/index.rst", "autoapi/dicee/models/transformers/index.rst", "autoapi/dicee/query_generator/index.rst", "autoapi/dicee/read_preprocess_save_load_kg/index.rst", "autoapi/dicee/read_preprocess_save_load_kg/preprocess/index.rst", "autoapi/dicee/read_preprocess_save_load_kg/read_from_disk/index.rst", "autoapi/dicee/read_preprocess_save_load_kg/save_load_disk/index.rst", "autoapi/dicee/read_preprocess_save_load_kg/util/index.rst", "autoapi/dicee/sanity_checkers/index.rst", "autoapi/dicee/scripts/index.rst", "autoapi/dicee/scripts/index/index.rst", "autoapi/dicee/scripts/run/index.rst", "autoapi/dicee/scripts/serve/index.rst", "autoapi/dicee/static_funcs/index.rst", "autoapi/dicee/static_funcs_training/index.rst", "autoapi/dicee/static_preprocess_funcs/index.rst", "autoapi/dicee/trainer/dice_trainer/index.rst", "autoapi/dicee/trainer/index.rst", "autoapi/dicee/trainer/torch_trainer/index.rst", "autoapi/dicee/trainer/torch_trainer_ddp/index.rst", "index.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.abstracts</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.analyse_experiments</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.callbacks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.dataset_classes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.eval_static_funcs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.evaluator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.executer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.knowledge_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.knowledge_graph_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.models.base_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.models.clifford</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.models.complex</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.models.function_space</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.models.octonion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.models.pykeen_models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.models.quaternion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.models.real</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.models.static_funcs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.models.transformers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.query_generator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.read_preprocess_save_load_kg</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.read_preprocess_save_load_kg.preprocess</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.read_preprocess_save_load_kg.read_from_disk</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.read_preprocess_save_load_kg.save_load_disk</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.read_preprocess_save_load_kg.util</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.sanity_checkers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.scripts</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.scripts.index</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.scripts.run</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.scripts.serve</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.static_funcs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.static_funcs_training</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.static_preprocess_funcs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.trainer.dice_trainer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.trainer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.trainer.torch_trainer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.trainer.torch_trainer_ddp</span></code>", "Welcome to DICE Embeddings documentation!"], "terms": {"abstracttrain": [0, 38, 39], "arg": [0, 1, 2, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 32, 33, 35, 36, 37, 38, 39], "callback": [0, 3, 8, 11, 15, 36, 37, 38, 39], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39], "trainer": [0, 2, 3, 4, 7, 8, 11, 15, 31, 33], "knowledg": [0, 2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 28], "graph": [0, 2, 3, 4, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 28], "embed": [0, 2, 3, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 33], "model": [0, 2, 3, 4, 5, 6, 7, 8, 10, 33, 34, 36, 37, 39], "str": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 22, 27, 28, 32, 33, 36, 37], "list": [0, 4, 5, 6, 8, 9, 10, 11, 12, 15, 22, 34, 36, 37, 38, 39], "on_fit_start": [0, 2], "kwarg": [0, 2, 3, 4, 8, 11, 15, 21, 38, 39], "A": [0, 2, 3, 4, 6, 7, 8, 10, 11, 12, 15, 17, 19, 21, 33, 39], "function": [0, 6, 10, 11, 12, 13, 14, 21], "call": [0, 2, 4, 8, 11, 12, 13, 15, 16, 17, 18, 21], "befor": [0, 4, 8, 11, 12, 13, 15, 16, 18, 21], "train": [0, 2, 3, 4, 7, 8, 10, 11, 12, 13, 15, 16, 18, 21, 22, 23, 24, 36, 37, 38, 39], "start": [0, 7, 8, 23, 24, 25, 34, 36, 37, 38], "none": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 17, 19, 21, 22, 23, 24, 25, 27, 28, 31, 33, 36, 37, 38], "on_fit_end": [0, 2], "ned": 0, "on_train_epoch_end": [0, 2, 11, 15], "end": [0, 2, 7, 8, 11, 15], "an": [0, 2, 3, 4, 7, 8, 10, 11, 12, 13, 15, 16, 18, 21, 33, 39], "epoch": [0, 2, 8, 10, 11, 15], "on_train_batch_end": [0, 2], "each": [0, 2, 4, 8, 10, 12, 14, 15, 21, 22, 34, 36, 37], "mini": [0, 2, 3, 4, 8, 38], "batch": [0, 2, 3, 4, 8, 11, 12, 14, 15, 16, 18, 21, 38], "dure": [0, 2, 3], "static": [0, 2, 8, 10, 11, 13, 15, 16, 18, 22], "save_checkpoint": 0, "full_path": 0, "save": [0, 4, 7, 8, 22, 23, 26, 33], "disk": [0, 4, 7, 8, 22, 23, 25, 33], "baseinteractivekg": [0, 8, 10], "path": [0, 2, 3, 4, 8, 10, 22, 33], "url": [0, 8, 10, 33], "construct_ensembl": [0, 8, 10], "bool": [0, 3, 8, 9, 10, 11, 12, 13, 15, 16, 18, 21, 22, 27, 33, 36, 37], "fals": [0, 3, 4, 6, 7, 8, 9, 10, 11, 15, 21, 22, 33, 35], "model_nam": [0, 8, 10, 33], "apply_semantic_constraint": [0, 8, 10], "base": [0, 2, 3, 4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 27, 35, 38, 39], "us": [0, 3, 4, 8, 11, 14, 15, 17, 21, 27, 38, 39], "interact": [0, 8, 10, 12, 15, 17], "path_of_pretrained_model_dir": 0, "boolean": [0, 8, 11, 12, 13, 15, 16, 18, 21], "properti": [0, 9], "name": [0, 3, 8, 11, 15, 33], "get_eval_report": 0, "dict": [0, 4, 5, 7, 8, 11, 15, 16, 17, 21, 22, 27, 33, 34, 35, 36, 37], "get_bpe_token_represent": 0, "str_entity_or_rel": 0, "int": [0, 2, 3, 4, 8, 9, 10, 12, 15, 21, 22, 27, 33, 39], "correspond": [0, 3, 8, 10, 11, 13, 15], "string": [0, 3, 4, 8, 10, 23, 24, 33], "token": [0, 4, 8, 21], "via": [0, 4, 8, 10, 27, 36, 37], "bpe": 0, "shape": [0, 8, 11, 12, 15, 16, 18, 21], "integ": [0, 4, 8, 11, 12, 14, 15, 23, 24, 27], "": [0, 2, 4, 8, 11, 15, 31], "contain": [0, 3, 4, 7, 8, 11, 12, 13, 15, 16, 18, 21, 33], "get_padded_bpe_triple_represent": 0, "tripl": [0, 2, 3, 4, 5, 6, 8, 9, 10, 12, 14, 15, 16, 17, 18, 22, 23, 24, 27, 33, 34, 35], "get_domain_of_rel": 0, "rel": 0, "get_range_of_rel": 0, "set_model_train_mod": 0, "set": [0, 4, 8, 10, 11, 15, 22], "mode": [0, 7, 8, 11, 12, 13, 15, 16, 18, 21, 22], "set_model_eval_mod": 0, "eval": [0, 2, 6, 7, 8, 21, 34], "sample_ent": 0, "n": [0, 4, 8, 10, 12, 15], "sample_rel": 0, "is_seen": 0, "entiti": [0, 2, 3, 4, 8, 10, 12, 14, 15, 16, 17, 18, 19, 27, 32, 34, 35], "relat": [0, 2, 3, 4, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 27, 33, 35], "get_entity_index": 0, "x": [0, 1, 2, 4, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27, 33], "get_relation_index": 0, "index_tripl": 0, "head_ent": [0, 8, 10], "tail_ent": [0, 8, 10], "torch": [0, 2, 4, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 33, 36, 37, 38, 39], "longtensor": [0, 2, 4, 8, 10, 11, 12, 13, 15, 17, 19, 21], "index": [0, 3, 4, 7, 8, 11, 15, 21, 23, 24, 27, 29, 33, 40], "represent": [0, 3, 4, 8, 10, 15, 18, 33], "select": [0, 8, 10, 12, 15, 36, 37, 38], "pytorch": [0, 4, 8, 10, 11, 13, 15, 21, 33, 36, 37], "tensor": [0, 2, 4, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 38], "score": [0, 3, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 33, 36, 37], "add_new_entity_embed": 0, "entity_nam": 0, "floattensor": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 33], "get_entity_embed": 0, "item": [0, 8, 10], "given": [0, 4, 8, 10, 15, 16, 17, 18, 33], "its": [0, 2, 4, 8, 11, 12, 15], "get_relation_embed": 0, "construct_input_and_output": 0, "label": [0, 4, 8, 10], "construct": [0, 4, 8, 12, 14, 15, 22, 23, 24, 33, 38], "data": [0, 3, 4, 7, 8, 11, 15, 19, 21, 22, 23, 24, 25, 27, 33, 35, 36, 37, 39], "point": [0, 4, 8, 14, 15], "param": [0, 3, 6, 8, 10, 11, 13, 15, 20, 21, 27, 33, 34, 35], "abstractcallback": [0, 2], "abc": 0, "lightn": [0, 4, 8, 11, 15, 36, 37], "on_init_start": 0, "on_init_end": 0, "begin": [0, 2, 4, 8], "abstractppecallback": 0, "num_epoch": [0, 2, 3, 39], "epoch_to_start": 0, "last_percent_to_consid": [0, 3], "store_ensembl": 0, "param_ensembl": 0, "thi": [1, 4, 8, 11, 12, 13, 14, 15, 16, 17, 18, 21, 33], "script": [1, 8], "should": [1, 4, 8, 10, 11, 12, 13, 15, 16, 18, 21], "move": [1, 4, 8], "get_default_argu": [1, 30, 31, 32], "experi": [1, 3, 8, 33], "save_experi": 1, "to_df": 1, "analys": 1, "accumulateepochlosscallback": 2, "abstract": [2, 4, 8, 10, 15, 17, 22, 38, 39], "store": [2, 3, 4, 7, 8, 23, 24, 27, 33, 35, 39], "loss": [2, 8, 11, 15, 21, 38], "printcallback": 2, "pl_modul": 2, "kgesavecallback": 2, "every_x_epoch": 2, "max_epoch": 2, "on_epoch_end": 2, "pseudolabellingcallback": 2, "data_modul": 2, "kg": [2, 4, 6, 7, 8, 9, 10, 23, 24, 25, 26, 36, 37], "batch_siz": [2, 3, 4, 5, 8, 10, 12, 14, 15], "create_random_data": 2, "estimate_q": 2, "ep": 2, "estim": [2, 21], "rate": [2, 3, 11, 15], "converg": 2, "q": [2, 3, 8, 12, 15, 32], "from": [2, 4, 7, 8, 14, 15, 17, 22, 23, 25, 27, 33, 35, 36, 37, 38], "sequenc": [2, 8, 11, 15, 21], "esp": 2, "compute_converg": 2, "seq": 2, "i": [2, 3, 4, 8, 10, 11, 12, 13, 14, 15, 16, 18, 21, 23, 24, 27, 34], "aswa": 2, "adapt": [2, 3], "stochast": [2, 3], "weight": [2, 3, 8, 14, 15, 17, 21, 33, 39], "averag": [2, 3, 8, 36, 37], "asw": 2, "keep": 2, "track": 2, "valid": [2, 3, 4, 7, 8, 11, 15, 22, 23, 24, 28, 36, 37], "perform": [2, 8, 12, 14, 15, 20, 36, 37], "updat": [2, 7, 8, 11, 15, 38], "ensembl": [2, 8, 33], "accordingli": 2, "compute_mrr": 2, "float": [2, 3, 4, 8, 9, 10, 21, 27, 33, 38], "get_aswa_state_dict": 2, "decid": 2, "running_model_state_dict": 2, "ensemble_state_dict": 2, "val_running_model": 2, "mrr_updated_ensemble_model": 2, "hard": [2, 39], "softwar": 2, "reject": 2, "epoch_ratio": 2, "krone": 2, "batch_kronecker_product": 2, "b": [2, 8, 11, 12, 14, 15, 18, 21], "kroneck": 2, "product": [2, 8, 12, 14, 15], "matric": 2, "lead": [2, 8, 33], "dimens": [2, 8, 12, 15], "ar": [2, 3, 4, 6, 8, 11, 12, 15, 21, 27, 35], "broadcast": 2, "The": [2, 3, 4, 8, 10, 11, 15, 18, 21], "number": [2, 3, 8, 10, 11, 12, 14, 15, 21, 27], "them": [2, 4, 8, 11, 12, 13, 15, 16, 18, 21], "mush": 2, "type": [2, 4, 8, 10, 33], "rtype": 2, "get_kronecker_triple_represent": 2, "indexed_tripl": [2, 8, 11, 15, 18], "get": [2, 8, 21, 22, 32], "perturb": 2, "level": 2, "input": [2, 3, 4, 7, 8, 10, 12, 14, 15, 21, 23, 24, 35, 36, 37, 38], "ratio": [2, 3, 4, 8], "0": [2, 3, 4, 8, 10, 12, 14, 15, 16, 17, 18, 21, 33, 39], "method": [2, 4, 8, 11, 15, 22], "scaler": 2, "frequenc": [2, 11, 15], "three": [2, 8, 14, 15], "randomli": [2, 8, 33], "replac": 2, "element": [2, 8, 14, 15], "In": [2, 4, 8, 11, 15, 21], "context": 2, "can": [2, 4, 8, 11, 12, 13, 15, 16, 17, 18, 21], "denot": [2, 4, 8, 10], "tupl": [2, 4, 5, 11, 12, 13, 15, 19, 20, 22, 27, 33, 34, 35, 36, 37, 38], "two": [2, 4, 8, 11, 12, 13, 14, 15], "mean": [2, 8, 11, 15, 21, 34, 36, 37], "compon": [2, 8, 12, 15], "output": [2, 8, 10, 11, 12, 14, 15, 21, 38], "on_train_batch_start": 2, "batch_idx": [2, 8, 11, 15, 21], "when": [2, 4, 8, 11, 12, 13, 15, 16, 18, 21], "namespac": [3, 8, 33], "argpars": 3, "simpl": 3, "object": [3, 6, 7, 8, 27, 33], "attribut": [3, 6, 11, 12, 13, 15, 16, 18, 21, 23, 25], "implement": [3, 4, 8, 11, 12, 14, 15, 17, 36, 37], "equal": 3, "valu": [3, 8, 11, 12, 13, 15, 18], "provid": [3, 4, 8, 36, 37], "dataset_dir": [3, 9], "folder": 3, "txt": 3, "test": [3, 4, 6, 7, 8, 11, 15, 23, 24, 36, 37], "save_embeddings_as_csv": [3, 8, 33], "csv": [3, 8, 33], "file": [3, 4, 7, 8, 15, 19, 33], "facilit": 3, "easi": [3, 8, 33], "usag": [3, 8, 10], "storage_path": [3, 8, 33, 36, 37], "directori": [3, 8, 33], "time": [3, 8, 21], "execut": [3, 4, 8], "under": [3, 8, 33], "about": [3, 4, 7, 8, 11, 15], "path_to_store_single_run": 3, "singl": [3, 4, 8, 11, 15, 22, 23, 24, 38], "creat": [3, 4, 7, 8, 22, 35], "path_single_kg": [3, 9], "sparql_endpoint": [3, 9, 28], "endpoint": [3, 27], "keci": [3, 8, 12, 15], "kge": [3, 5, 6, 8, 10, 33], "optim": [3, 8, 10, 11, 15, 21, 39], "adam": 3, "embedding_dim": [3, 8, 15, 17], "64": 3, "size": [3, 4, 8, 11, 12, 14, 15, 16, 18], "continu": [3, 7], "vector": [3, 4, 8, 12, 14, 15, 18], "150": 3, "pass": [3, 4, 8, 11, 15, 21, 22], "over": [3, 8, 10, 14, 15], "1024": [3, 21], "automat": [3, 8, 11, 15, 21], "finder": 3, "techniqu": [3, 8, 14, 15], "appli": [3, 8, 15, 17, 18], "lr": [3, 8, 10, 11, 15], "1": [3, 4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 36, 37, 39], "learn": [3, 8, 11, 12, 14, 15, 19], "add_noise_r": [3, 8, 9, 33], "ad": [3, 6], "random": 3, "dataset": [3, 4, 6, 8, 10, 11, 15, 23, 24, 36, 37, 39], "gpu": [3, 4, 8, 11, 15, 21, 36, 37, 38], "e": [3, 4, 8, 10, 11, 12, 14, 15, 16, 18, 21, 23, 24, 27], "g": [3, 4, 8, 10, 11, 12, 15, 21, 23, 24], "ppe": 3, "10": [3, 8, 10], "backend": [3, 9, 27], "panda": [3, 8, 23, 24, 27, 33], "read": [3, 7, 8, 23, 24, 25, 27], "process": [3, 4, 8, 11, 15], "polar": [3, 27], "rdflib": 3, "avail": [3, 11, 15, 23, 25], "torchcputrain": 3, "scoring_techniqu": [3, 4, 8], "kvsall": [3, 4, 8, 12, 15], "neg_ratio": [3, 4, 8], "neg": [3, 4, 8, 10, 12, 15], "true": [3, 4, 8, 10, 11, 15, 21, 22, 33], "negsampl": 3, "training_techniqu": [3, 9], "weight_decai": [3, 21], "decai": 3, "all": [3, 4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "trainabl": 3, "normal": [3, 8, 11, 15, 17, 18, 21, 33], "layernorm": [3, 21], "batchnorm1d": 3, "init_param": 3, "xavier_norm": 3, "gradient_accumulation_step": 3, "Not": 3, "num_folds_for_cv": 3, "fold": [3, 8, 36, 37], "cv": 3, "eval_model": [3, 9, 27], "train_val_test": 3, "evalu": [3, 7, 8, 11, 12, 13, 14, 15, 16, 18, 21, 33, 34, 36, 37], "choic": 3, "train_val": 3, "save_model_at_every_epoch": 3, "num_cor": [3, 27], "cpu": [3, 4, 7, 8, 36, 37, 38], "load": [3, 4, 7, 8, 22, 23, 26, 27, 33, 36, 37], "random_se": 3, "seed": [3, 4, 8, 22], "sample_triples_ratio": [3, 9, 27], "some": [3, 8, 11, 15, 21], "uniformli": 3, "sampl": [3, 4, 8, 10, 11, 15], "being": 3, "between": [3, 8, 11, 12, 14, 15], "read_only_few": [3, 9, 27], "onli": [3, 4, 8, 11, 15, 21], "first": [3, 4, 8, 11, 14, 15], "few": 3, "pykeen_model_kwarg": 3, "addit": [3, 8, 11, 13, 15, 16, 18, 21], "keyword": [3, 11, 15], "argument": [3, 4, 8, 31, 33, 35, 36, 37, 38, 39], "pykeen": [3, 8, 15, 17], "kernel_s": 3, "3": [3, 4, 7, 8, 11, 12, 15, 17, 33, 36, 37], "squar": 3, "kernel": 3, "convolut": [3, 8, 13, 15, 16, 18], "oper": [3, 8, 10, 21], "num_of_output_channel": 3, "32": [3, 8, 10], "slice": 3, "gener": [3, 4, 8, 10, 14, 15, 17, 21, 22, 36, 37], "featur": 3, "map": [3, 4, 8, 27, 35, 39], "p": [3, 8, 12, 15, 33], "paramet": [3, 27, 33, 38], "clifford": [3, 8, 15], "input_dropout_r": 3, "dropout": [3, 8, 15, 17, 21], "hidden_dropout_r": 3, "hidden": 3, "feature_map_dropout_r": 3, "byte_pair_encod": [3, 4, 8, 9], "wip": 3, "byte": [3, 8, 11, 15, 21], "pair": [3, 8, 11, 15], "encod": [3, 8, 11, 15, 21], "adaptive_swa": 3, "swa": 3, "block_siz": [3, 4, 8, 21], "block": [3, 21], "llm": 3, "__iter__": 3, "reload_dataset": [4, 8], "form_of_label": [4, 6, 7, 8, 36, 37], "label_smoothing_r": [4, 8, 39], "reload": [4, 8, 11, 15], "construct_dataset": [4, 8], "train_set": [4, 6, 8, 23, 25, 27, 33], "numpi": [4, 6, 8, 10, 11, 15, 19, 27, 33, 35], "ndarrai": [4, 6, 8, 10, 11, 15, 19, 27, 33, 35], "valid_set": [4, 6, 8, 23, 25], "test_set": [4, 6, 8, 23, 25], "ordered_bpe_ent": [4, 6, 8, 11, 15], "train_target_indic": [4, 8], "target_dim": [4, 8], "entity_to_idx": [4, 8, 9, 27, 33], "relation_to_idx": [4, 8, 9, 27], "util": [4, 8, 11, 15, 21, 23, 36, 37, 39], "bpe_negativesamplingdataset": [4, 8], "ordered_shaped_bpe_ent": [4, 8], "repres": [4, 8, 11, 12, 13, 14, 15, 16, 18, 21], "kei": [4, 8, 11, 15, 21], "subclass": [4, 7, 8, 11, 12, 13, 15, 16, 18, 21], "overwrit": [4, 8], "__getitem__": [4, 8], "support": [4, 8, 11, 15, 21], "fetch": [4, 8], "could": [4, 8, 11, 15], "also": [4, 8, 11, 12, 13, 14, 15, 16, 18, 21], "option": [4, 8, 11, 15, 21], "__len__": [4, 8], "which": [4, 8, 11, 15, 21], "expect": [4, 8], "mani": [4, 8, 11, 15], "sampler": [4, 8, 11, 15], "default": [4, 8, 11, 15, 21], "dataload": [4, 8, 11, 15, 21, 36, 37, 39], "__getitems__": [4, 8], "speedup": [4, 8], "accept": [4, 8], "indic": [4, 8, 10, 21], "yield": [4, 8], "integr": [4, 8], "To": [4, 8, 11, 15, 21], "make": [4, 8, 21], "work": [4, 8, 11, 15], "style": [4, 8], "non": [4, 8, 12, 15, 21], "custom": [4, 8, 11, 15], "must": [4, 8, 11, 12, 13, 15, 16, 18, 21], "idx": [4, 8, 21], "collate_fn": [4, 8], "batch_shaped_bpe_tripl": [4, 8], "multilabeldataset": [4, 8], "train_indices_target": [4, 8], "torch_ordered_shaped_bpe_ent": [4, 8], "multiclassclassificationdataset": [4, 8], "subword_unit": [4, 8], "8": [4, 8, 15, 16, 18], "1vsall": [4, 8], "strategi": [4, 8, 36, 37], "train_set_idx": [4, 8, 35], "entity_idx": [4, 8, 39], "relation_idx": [4, 8, 39], "form": [4, 8, 39], "num_work": [4, 8, 10], "http": [4, 8, 15, 19, 36, 37], "org": [4, 8, 15, 19, 36, 37], "doc": [4, 8, 36, 37], "stabl": [4, 8, 36, 37], "html": [4, 8, 36, 37], "onevsalldataset": [4, 8], "inherit": [4, 8], "let": [4, 8, 12, 15], "d": [4, 8, 10, 11, 12, 14, 15, 18, 21], "defin": [4, 8], "y": [4, 8, 11, 12, 15, 21], "_i": [4, 8], "where": [4, 8, 10, 12, 15, 23, 24, 33], "h": [4, 8, 10, 12, 14, 15, 16, 17, 18, 19], "r": [4, 8, 10, 12, 14, 15, 16, 17, 18, 19], "uniqu": [4, 8], "ha": [4, 8, 11, 15, 18, 21], "been": [4, 8, 15, 18], "multi": [4, 8, 11, 15, 19, 21, 33, 36, 37, 38], "binari": [4, 8], "oral": [4, 8, 10], "y_i": [4, 8, 12, 15], "t": [4, 8, 10, 11, 12, 14, 15, 17, 18, 19, 21], "e_i": [4, 8, 12, 15], "todo": [4, 8, 10, 22, 33], "arrai": [4, 8], "dictonari": [4, 8], "id": [4, 8], "self": [4, 8, 10, 11, 12, 13, 15, 16, 17, 18, 21, 27, 36, 37], "2": [4, 7, 8, 10, 11, 12, 14, 15, 17, 18, 27, 35, 36, 37], "4": [4, 7, 8, 12, 15, 17], "5": [4, 8, 11, 12, 13, 15, 16, 18, 21], "6": [4, 8, 11, 15], "7": [4, 8], "9": [4, 8], "allvsal": [4, 8], "possibl": [4, 8, 15, 16, 18], "henc": [4, 8, 12, 15], "extend": [4, 8, 31], "exist": [4, 8], "add": [4, 8, 11, 15, 23, 24, 27, 33], "without": [4, 8, 11, 12, 14, 15], "kvssampledataset": [4, 8], "num_ent": [4, 8, 15, 17, 27, 34], "num_rel": [4, 8, 27], "neg_sample_ratio": [4, 8, 10], "kvssampl": [4, 8], "At": [4, 8], "we": [4, 8, 12, 14, 15, 16, 17, 18, 21], "subsampl": [4, 8], "new_i": [4, 8], "sum": [4, 8, 12, 14, 15], "neg_sampl": [4, 8], "negsampledataset": [4, 8], "triplepredictiondataset": [4, 8], "collact_fn": [4, 8], "collect_fn": [4, 8], "obtain": [4, 8, 36, 37], "m": [4, 8, 14, 15], "float16": [4, 8], "inttensor": [4, 8], "cvdatamodul": [4, 8], "pytorch_lightn": [4, 8, 31], "lightningdatamodul": [4, 8], "cross": [4, 8, 36, 37], "train_dataload": [4, 8, 11, 15, 38], "iter": [4, 8, 10, 11, 15, 21], "collect": [4, 8, 11, 15, 22], "specifi": [4, 8, 11, 15], "For": [4, 8, 11, 12, 15, 21, 36, 37], "more": [4, 8, 11, 15], "inform": [4, 7, 8, 11, 15], "multipl": [4, 8, 11, 12, 14, 15, 20, 21], "see": [4, 8, 11, 15, 33], "section": [4, 8, 11, 15], "you": [4, 8, 11, 12, 13, 15, 16, 18, 21], "unless": [4, 8, 11, 15], "paramref": [4, 8, 11, 15], "reload_dataloaders_every_n_epoch": [4, 8, 11, 15], "posit": [4, 8, 11, 15, 21], "follow": [4, 8, 11, 15], "pattern": [4, 8, 11, 15], "download": [4, 8, 11, 15], "prepare_data": [4, 8, 11, 15], "split": [4, 8, 11, 12, 15, 36, 37], "setup": [4, 8, 11, 15], "howev": [4, 8, 11, 15], "abov": [4, 8, 11, 12, 13, 15, 16, 18, 21], "necessari": [4, 7, 8, 11, 15], "distribut": [4, 8, 11, 15], "do": [4, 8, 11, 15, 21], "assign": [4, 8, 11, 12, 13, 15, 16, 18, 21], "state": [4, 8, 11, 15], "fit": [4, 8, 11, 15, 36, 37, 38, 39], "note": [4, 8, 11, 15, 17, 21], "tri": [4, 8, 11, 15], "correct": [4, 8, 11, 15], "arbitrari": [4, 8, 11, 15], "hardwar": [4, 8, 11, 15], "There": [4, 8, 11, 15], "need": [4, 8, 10, 11, 15], "yourself": [4, 8, 11, 15], "predict": [4, 6, 8, 10, 11, 15, 19, 21, 34], "good": [4, 8], "hook": [4, 8, 11, 15], "build": [4, 8], "dynam": [4, 8], "adjust": [4, 8], "someth": [4, 8, 11, 15, 21], "everi": [4, 8, 11, 14, 15], "ddp": [4, 8, 39], "stage": [4, 8], "either": [4, 8, 10], "exampl": [4, 8, 11, 12, 13, 15, 16, 18, 21], "litmodel": [4, 8], "def": [4, 8, 11, 12, 13, 15, 16, 18, 21], "__init__": [4, 8, 11, 12, 13, 15, 16, 18, 21], "l1": [4, 8], "download_data": [4, 8], "don": [4, 8, 11, 15], "els": [4, 8, 15, 17], "load_data": [4, 8], "nn": [4, 8, 11, 12, 13, 14, 15, 16, 18, 21, 36, 37, 39], "linear": [4, 8, 14, 15], "28": [4, 8], "num_class": [4, 8], "transfer_batch_to_devic": [4, 8], "overrid": [4, 8, 11, 15], "your": [4, 8, 11, 12, 13, 15, 16, 18, 21], "wrap": [4, 8], "structur": [4, 8, 11, 12, 13, 15, 16, 18, 21], "below": [4, 8, 11, 15], "ani": [4, 8, 11, 15, 21], "nest": [4, 8, 10, 11, 12, 13, 15, 16, 18, 21, 22], "out": [4, 8, 11, 15, 21], "box": [4, 8], "anyth": [4, 8], "how": [4, 8, 11, 15], "target": [4, 8, 21, 39], "devic": [4, 8, 38, 39], "tpu": [4, 8, 11, 15, 21], "transfer": [4, 8], "modifi": [4, 8], "nor": [4, 8], "other": [4, 8, 11, 12, 13, 15, 16, 18, 21], "than": [4, 8], "one": [4, 8, 11, 15], "know": [4, 8, 11, 15], "what": [4, 8, 11, 15], "check": [4, 8, 35], "current": [4, 8], "so": [4, 8, 21], "differ": [4, 8, 12, 14, 15, 33], "logic": [4, 8, 22], "per": [4, 8, 11, 12, 13, 15, 16, 18, 21], "requir": [4, 7, 8, 11, 15, 21], "new": [4, 8], "dataloader_idx": [4, 8, 11, 15, 21], "belong": [4, 8], "refer": [4, 8], "isinst": [4, 8], "custombatch": [4, 8], "elif": [4, 8], "skip": [4, 8, 11, 15, 21], "wish": [4, 8], "super": [4, 8, 11, 12, 13, 15, 16, 18, 21], "rais": [4, 8], "misconfigurationexcept": [4, 8], "If": [4, 8, 10, 11, 15], "ipu": [4, 8], "acceler": [4, 8], "move_data_to_devic": [4, 8], "apply_to_collect": [4, 8], "prepar": [4, 8, 11, 15], "result": [4, 8, 12, 15], "corrupt": [4, 8], "ensur": [4, 8], "within": [4, 8, 10], "safe": [4, 8], "NOT": [4, 8], "instead": [4, 8, 12, 15], "sinc": [4, 8], "etc": [4, 8, 11, 12, 13, 15, 16, 18, 21], "bad": [4, 8], "data_split": [4, 8], "some_st": [4, 8], "some_other_st": [4, 8], "environ": [4, 8], "wai": [4, 8, 11, 12, 13, 15, 16, 18, 21], "prepare_data_per_nod": [4, 8], "onc": [4, 8], "node": [4, 8, 38], "local_rank": [4, 8], "total": [4, 8], "global_rank": [4, 8], "litdatamodul": [4, 8], "great": [4, 8], "share": [4, 8, 10, 21], "system": [4, 8], "request": [4, 8], "initialize_distribut": [4, 8], "val_dataload": [4, 8, 11, 15], "test_dataload": [4, 8, 11, 15], "predict_dataload": [4, 8, 11, 15], "evaluate_link_prediction_perform": 5, "knowledge_graph_embed": [5, 8], "er_vocab": [5, 34], "re_vocab": [5, 34], "evaluate_link_prediction_performance_with_reciproc": 5, "evaluate_link_prediction_performance_with_bpe_reciproc": 5, "within_ent": 5, "evaluate_link_prediction_performance_with_bp": 5, "evaluate_lp_bpe_k_vs_al": [5, 6], "func_triple_to_bpe_represent": [5, 9], "callabl": 5, "str_to_bpe_entity_to_idx": 5, "is_continual_train": [6, 8, 33, 36, 37], "variou": 6, "downstream": 6, "task": [6, 34], "vocab_prepar": 6, "wait": 6, "futur": 6, "executor": [6, 8, 33], "knowledge_graph": [6, 8, 36, 37], "trained_model": [6, 8, 33], "during_train": 6, "eval_rank_of_head_and_tail_ent": 6, "eval_rank_of_head_and_tail_byte_pair_encoded_ent": 6, "eval_with_byt": 6, "raw_train_set": 6, "raw_valid_set": 6, "raw_test_set": 6, "after": [6, 8, 10, 11, 15], "reciproc": [6, 8, 27, 36, 37], "eval_with_bpe_vs_al": 6, "eval_with_vs_al": 6, "evaluate_lp_k_vs_al": 6, "triple_idx": [6, 34], "info": [6, 7, 8, 27, 34], "filter": [6, 8, 10, 34], "link": [6, 8, 11, 15, 34], "evaluate_lp_with_byt": 6, "evaluate_lp": [6, 34], "dummy_ev": 6, "eval_with_data": 6, "continuous_train": [7, 8], "retrain": [7, 8, 10], "preprocess": [7, 8, 23, 27], "serial": [7, 8, 23, 24], "read_or_load_kg": [7, 8, 33], "read_preprocess_index_serialize_data": [7, 8], "memori": [7, 8, 11, 15, 22, 23, 24, 25, 33], "statist": [7, 8], "load_indexed_data": [7, 8], "save_trained_model": [7, 8], "send": [7, 8], "footprint": [7, 8], "stat": [7, 8], "again": [7, 8], "report": [7, 8, 36, 37], "runtim": [7, 8], "write_report": [7, 8], "json": [7, 8], "continuousexecut": 7, "continual_start": [7, 8, 36, 37], "initi": [7, 8, 33, 36, 37], "base_model": [8, 12, 13, 14, 15, 16, 17, 18, 19, 21, 33, 36, 37], "complex": [8, 12, 14, 15], "function_spac": [8, 15], "octonion": [8, 15], "pykeen_model": [8, 15], "quaternion": [8, 12, 15, 20], "real": [8, 12, 15], "static_func": [8, 15], "transform": [8, 15], "read_preprocess_save_load_kg": 8, "read_from_disk": [8, 23, 27], "save_load_disk": [8, 23], "run": [8, 11, 15, 29], "serv": [8, 29], "dice_train": [8, 37], "torch_train": [8, 37], "torch_trainer_ddp": [8, 37], "analyse_experi": 8, "config": [8, 21], "dataset_class": 8, "eval_static_func": 8, "query_gener": 8, "sanity_check": 8, "static_funcs_train": 8, "static_preprocess_func": 8, "cmult": [8, 12, 15], "basekg": [8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 33, 36, 37], "cl_": [8, 12, 15], "multivector": [8, 12, 15], "mathbf": [8, 12, 15], "a_0": [8, 12, 15], "a_1": [8, 12, 15], "e_1": [8, 12, 15], "b_0": [8, 12, 15], "b_1": [8, 12, 15], "isomorph": [8, 12, 15], "im": [8, 10, 12, 15], "a_0b_1": [8, 12, 15], "e1": [8, 12, 15], "a_2": [8, 12, 15], "e_2": [8, 12, 15], "a_": [8, 12, 15], "12": [8, 12, 15, 21], "b_2": [8, 12, 15], "b_": [8, 12, 15], "a_0b_0": [8, 12, 15], "a_0b_2e_2": [8, 12, 15], "b_12": [8, 12, 15], "a_1b_1": [8, 12, 15], "e_1_e1": [8, 12, 15], "clifford_mul": [8, 12, 15], "mathbb": [8, 12, 15], "ei": [8, 12, 15], "ej": [8, 12, 15], "j": [8, 12, 14, 15], "eje1": [8, 12, 15], "eq": [8, 12, 15], "head_ent_emb": [8, 12, 13, 15, 16, 18, 19], "rel_ent_emb": [8, 12, 13, 15, 16, 18, 19], "tail_ent_emb": [8, 12, 13, 15, 16, 18, 19], "forward_tripl": [8, 11, 12, 13, 14, 15, 16, 17, 18, 19], "comput": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 34, 36, 37, 38], "forward_k_vs_al": [8, 11, 12, 13, 15, 16, 17, 18, 19], "pyke": [8, 15, 19], "physic": [8, 15, 19], "distmult": [8, 15, 19], "infer": [8, 15, 19], "arxiv": [8, 15, 19], "ab": [8, 15, 19], "1412": [8, 15, 19], "6575": [8, 15, 19], "k_vs_all_scor": [8, 12, 13, 15, 16, 18, 19], "emb_h": [8, 13, 15, 19], "emb_r": [8, 13, 15, 19], "emb_": [8, 13, 15, 19], "forward_k_vs_sampl": [8, 11, 12, 13, 15, 17, 18, 19], "target_entity_idx": [8, 12, 13, 15, 17, 18, 19], "kecibas": [8, 12, 15], "scale": [8, 12, 15], "neural": [8, 11, 12, 13, 14, 15, 16, 18, 19, 21], "network": [8, 11, 12, 13, 14, 15, 16, 18, 21], "modul": [8, 15, 40], "allow": [8, 11, 12, 13, 14, 15, 16, 18, 21, 33], "tree": [8, 11, 12, 13, 15, 16, 18, 21], "regular": [8, 11, 12, 13, 15, 16, 18, 21], "import": [8, 11, 12, 13, 15, 16, 18, 21], "f": [8, 10, 11, 12, 13, 14, 15, 16, 18, 21], "conv1": [8, 11, 12, 13, 15, 16, 18, 21], "conv2d": [8, 11, 12, 13, 15, 16, 18, 21], "20": [8, 11, 12, 13, 15, 16, 18, 21], "conv2": [8, 11, 12, 13, 15, 16, 18, 21], "forward": [8, 11, 12, 13, 15, 16, 18, 21, 38], "relu": [8, 11, 12, 13, 15, 16, 18, 21], "regist": [8, 11, 12, 13, 15, 16, 18, 21], "have": [8, 11, 12, 13, 15, 16, 18, 21], "convert": [8, 11, 12, 13, 15, 16, 18, 21, 22], "too": [8, 11, 12, 13, 15, 16, 18, 21], "As": [8, 11, 12, 13, 15, 16, 18, 21], "parent": [8, 11, 12, 13, 15, 16, 18, 21, 33], "made": [8, 11, 12, 13, 15, 16, 18, 21], "child": [8, 11, 12, 13, 15, 16, 18, 21], "variabl": [8, 10, 11, 12, 13, 15, 16, 18, 21], "whether": [8, 11, 12, 13, 15, 16, 18, 21], "compute_sigma_pp": [8, 12, 15], "hp": [8, 12, 15], "rp": [8, 12, 15], "sigma_": [8, 12, 15], "pp": [8, 12, 15], "sum_": [8, 12, 14, 15, 18], "k": [8, 10, 12, 14, 15, 36, 37], "h_i": [8, 12, 15], "r_k": [8, 12, 15], "h_k": [8, 12, 15], "r_i": [8, 12, 15], "e_k": [8, 12, 15], "captur": [8, 12, 15], "along": [8, 12, 15], "instanc": [8, 11, 12, 15, 23, 24, 33, 38], "e_3": [8, 12, 15], "loop": [8, 11, 12, 14, 15, 39], "rang": [8, 12, 14, 15, 27, 35], "append": [8, 11, 12, 15], "sigma_pp": [8, 12, 15], "stack": [8, 11, 12, 15], "dim": [8, 12, 15, 18], "assert": [8, 12, 15], "yet": [8, 12, 15, 18], "would": [8, 12, 15, 21], "quit": [8, 12, 15], "ineffici": [8, 12, 15], "e1e1": [8, 12, 15], "e1e2": [8, 12, 15], "e1e3": [8, 12, 15], "e2e1": [8, 12, 15], "e2e2": [8, 12, 15], "e2e3": [8, 12, 15], "e3e1": [8, 12, 15], "e3e2": [8, 12, 15], "e3e3": [8, 12, 15], "Then": [8, 12, 15], "triangular": [8, 12, 15], "matrix": [8, 12, 14, 15], "diagon": [8, 12, 15], "compute_sigma_qq": [8, 12, 15], "hq": [8, 12, 15], "rq": [8, 12, 15], "qq": [8, 12, 15], "h_j": [8, 12, 15], "r_j": [8, 12, 15], "e_j": [8, 12, 15], "sigma_qq": [8, 12, 15], "compute_sigma_pq": [8, 12, 15], "sigma_pq": [8, 12, 15], "zero": [8, 12, 15], "print": [8, 12, 15], "apply_coeffici": [8, 12, 15], "h0": [8, 12, 15], "r0": [8, 12, 15], "multipli": [8, 12, 14, 15], "scalar": [8, 12, 15], "coeffici": [8, 12, 14, 15], "clifford_multipl": [8, 12, 15], "our": [8, 12, 15, 31], "cl": [8, 12, 15, 33], "h_0": [8, 12, 15], "r_0": [8, 12, 15], "sigma_0": [8, 12, 15], "sigma_p": [8, 12, 15], "sigma_q": [8, 12, 15], "pq": [8, 12, 15], "construct_cl_multivector": [8, 12, 15], "a0": [8, 12, 15], "ap": [8, 12, 15], "aq": [8, 12, 15], "forward_k_vs_with_explicit": [8, 12, 15], "bpe_head_ent_emb": [8, 12, 15, 16, 18], "bpe_rel_ent_emb": [8, 12, 15, 16, 18], "retriev": [8, 12, 15, 17], "head": [8, 10, 12, 15, 16, 17, 18, 34], "accord": [8, 12, 15], "inner": [8, 12, 15], "funciton": [8, 12, 15], "ident": [8, 12, 15], "trans": [8, 15, 19], "translat": [8, 15, 19], "proceed": [8, 15, 19], "neurip": [8, 15, 19], "cc": [8, 15, 19], "paper": [8, 14, 15, 19], "2013": [8, 15, 19], "1cecc7a77928ca8133fa24680a88d2f9": [8, 15, 19], "pdf": [8, 15, 19], "decal": [8, 12, 15], "cl_pqr": [8, 12, 15], "emb_dim": [8, 12, 15], "take": [8, 12, 14, 15, 21, 34], "divisor": [8, 12, 15], "compute_sigmas_singl": [8, 12, 15], "list_h_emb": [8, 12, 15], "list_r_emb": [8, 12, 15], "list_t_emb": [8, 12, 15], "here": [8, 11, 12, 15, 21], "taken": [8, 12, 15], "s0": [8, 12, 15], "h_0r_0t_0": [8, 12, 15], "s1": [8, 12, 15], "h_ir_it_0": [8, 12, 15], "s2": [8, 12, 15], "h_jr_jt_0": [8, 12, 15], "s3": [8, 12, 15], "h_0r_it_i": [8, 12, 15], "h_ir_0t_i": [8, 12, 15], "s4": [8, 12, 15], "s5": [8, 12, 15], "sigma_0t": [8, 12, 15], "cdot": [8, 12, 15], "t_0": [8, 12, 15], "compute_sigmas_multivect": [8, 12, 15], "same": [8, 12, 15], "h_ir_": [8, 12, 15], "h_": [8, 12, 15], "h_jr_": [8, 12, 15], "sigma_rr": [8, 12, 15], "h_kr_": [8, 12, 15], "h_ir_j": [8, 12, 15], "h_jr_i": [8, 12, 15], "interactionsn": [8, 12, 15], "sigma_pr": [8, 12, 15], "h_ir_k": [8, 12, 15], "h_kr_i": [8, 12, 15], "sigma_qr": [8, 12, 15], "h_jr_k": [8, 12, 15], "h_kr_j": [8, 12, 15], "hk": [8, 12, 15], "rk": [8, 12, 15], "re": [8, 12, 15, 18], "x_iy_": [8, 12, 15], "x_": [8, 12, 15], "x_jy_": [8, 12, 15], "y_j": [8, 12, 15], "16": [8, 11, 12, 15], "compute_sigma_rr": [8, 12, 15], "x_ky_": [8, 12, 15], "y_k": [8, 12, 15], "compute_sigma_pr": [8, 12, 15], "compute_sigma_qr": [8, 12, 15], "aconex": [8, 13, 15], "residual_convolut": [8, 13, 15, 16, 18], "c_1": [8, 13, 15], "c_2": [8, 13, 15], "residu": [8, 13, 15], "aconvo": [8, 15, 16], "octonion_norm": [8, 15, 16], "emb_rel_e0": [8, 15, 16], "emb_rel_e1": [8, 15, 16], "emb_rel_e2": [8, 15, 16], "emb_rel_e3": [8, 15, 16], "emb_rel_e4": [8, 15, 16], "emb_rel_e5": [8, 15, 16], "emb_rel_e6": [8, 15, 16], "emb_rel_e7": [8, 15, 16], "o_1": [8, 15, 16], "o_2": [8, 15, 16], "aconvq": [8, 15, 18], "q_1": [8, 15, 18, 20], "q_2": [8, 15, 18, 20], "convq": [8, 15, 18], "convo": [8, 15, 16], "conex": [8, 13, 15], "qmult": [8, 15, 18], "quaternion_multiplication_followed_by_inner_product": [8, 15, 18], "batch_dim": [8, 15, 18], "tail": [8, 10, 15, 17, 18, 34], "quaternion_norm": [8, 15, 18], "length": [8, 15, 18], "constraint": [8, 15, 18, 27, 35], "absolut": [8, 15, 18], "bi": [8, 15, 18], "cj": [8, 15, 18], "dk": [8, 15, 18], "sqrt": [8, 15, 18], "c": [8, 14, 15, 17, 18], "l2": [8, 15, 18], "norm": [8, 10, 15, 18], "x_i": [8, 15, 18], "im_1": [8, 15, 18], "im_2": [8, 15, 18], "im_3": [8, 15, 18], "complet": [8, 15, 16, 18, 21], "omult": [8, 15, 16], "shallom": [8, 15, 19], "shallow": [8, 15, 19], "2101": [8, 15, 19], "09090": [8, 15, 19], "get_embed": [8, 11, 15, 19], "lfmult": [8, 14, 15], "polynomi": [8, 14, 15], "space": [8, 14, 15], "a_k": [8, 14, 15], "consid": [8, 14, 15], "combin": [8, 14, 15], "idx_tripl": [8, 14, 15], "construct_multi_coeff": [8, 14, 15], "poly_nn": [8, 14, 15], "coefh": [8, 14, 15], "coefr": [8, 14, 15], "coeft": [8, 14, 15], "layer": [8, 14, 15, 21], "sigma": [8, 14, 15], "wh": [8, 14, 15], "bh": [8, 14, 15], "wr": [8, 14, 15], "br": [8, 14, 15], "wt": [8, 14, 15], "bt": [8, 14, 15], "w": [8, 14, 15], "scalar_batch_nn": [8, 14, 15], "wise": [8, 14, 15], "tri_scor": [8, 14, 15], "coeff_h": [8, 14, 15], "coeff_r": [8, 14, 15], "coeff_t": [8, 14, 15], "part": [8, 14, 15], "trilinear": [8, 14, 15], "int_": [8, 14, 15], "dx": [8, 14, 15], "dfrac": [8, 14, 15], "a_i": [8, 14, 15], "b_j": [8, 14, 15], "c_k": [8, 14, 15], "parallel": [8, 14, 15, 36, 37, 39], "vtp_score": [8, 14, 15], "c_j": [8, 14, 15], "b_k": [8, 14, 15], "b_i": [8, 14, 15], "second": [8, 11, 14, 15], "term": [8, 14, 15], "denomin": [8, 14, 15], "comp_func": [8, 14, 15], "composit": [8, 14, 15], "hor": [8, 14, 15], "coeff": [8, 14, 15], "degre": [8, 14, 15], "pop": [8, 14, 15], "u": [8, 14, 15], "polynom": [8, 14, 15], "pykeenkg": [8, 15, 17], "pykeen_distmult": [8, 15, 17], "pykeen_complex": [8, 15, 17], "pykeen_qu": [8, 15, 17], "pykeen_mur": [8, 15, 17], "pykeen_cp": [8, 15, 17], "pykeen_hol": [8, 15, 17], "explicit": [8, 15, 17], "version": [8, 15, 17], "bn": [8, 15, 17], "get_head_relation_represent": [8, 11, 15, 17], "reshap": [8, 15, 17], "last_dim": [8, 15, 17], "len": [8, 15, 17], "entity_embed": [8, 15, 17], "score_t": [8, 15, 17], "all_ent": [8, 15, 17], "slice_s": [8, 15, 17], "get_triple_represent": [8, 11, 15, 17], "slice_dim": [8, 15, 17], "loss_funct": [8, 11, 15, 21], "yhat_batch": [8, 11, 15, 21], "y_batch": [8, 11, 15, 21, 38], "max_new_token": [8, 21], "temperatur": [8, 21], "top_k": [8, 10, 21, 33], "condit": [8, 11, 15, 21, 23, 24], "feed": [8, 21], "back": [8, 21], "most": [8, 21, 33], "like": [8, 11, 15, 21], "ll": [8, 21], "want": [8, 21], "sure": [8, 21], "training_step": [8, 11, 15, 21], "metric": [8, 11, 15, 21], "progress": [8, 11, 15, 21], "bar": [8, 11, 15, 21], "logger": [8, 11, 15, 21], "produc": [8, 11, 15, 21, 39], "dictionari": [8, 11, 15, 21, 38], "includ": [8, 10, 11, 15, 21], "case": [8, 11, 15, 21], "next": [8, 11, 15, 21], "deepspe": [8, 11, 15, 21], "manual": [8, 11, 15, 21], "special": [8, 11, 15, 21], "step": [8, 11, 15, 21], "calcul": [8, 11, 15, 21], "fancier": [8, 11, 15, 21], "thing": [8, 11, 15, 21], "specif": [8, 11, 15, 21], "z": [8, 11, 15, 21, 39], "switch": [8, 11, 15, 21], "control": [8, 11, 15, 21], "automatic_optim": [8, 11, 15, 21], "gan": [8, 11, 15, 21], "opt1": [8, 11, 15, 21], "opt2": [8, 11, 15, 21], "decod": [8, 11, 15, 21], "accumulate_grad_batch": [8, 11, 15, 21], "intern": [8, 11, 15, 21], "basekgelightn": [8, 11, 15], "forward_byte_pair_encoded_k_vs_al": [8, 11, 15], "forward_byte_pair_encoded_tripl": [8, 11, 15], "predictor": [8, 11, 15], "init_params_with_sanity_check": [8, 11, 15], "y_idx": [8, 11, 15], "idx_hrt": [8, 11, 15], "get_sentence_represent": [8, 11, 15], "get_bpe_head_and_relation_represent": [8, 11, 15], "create_recipriocal_tripl": [8, 27, 33], "invers": [8, 27, 33], "dask": [8, 27, 33], "datafram": [8, 23, 24, 27, 33], "get_er_vocab": [8, 27, 33, 35], "file_path": [8, 27, 33], "get_re_vocab": [8, 27, 33, 35], "get_ee_vocab": [8, 27, 33, 35], "timeit": [8, 27, 33, 35], "func": [8, 27, 33, 35], "save_pickl": [8, 27, 33], "load_pickl": [8, 27, 33], "select_model": [8, 33], "load_model": [8, 33], "path_of_experiment_fold": [8, 33], "pt": [8, 33], "verbos": [8, 33], "load_model_ensembl": [8, 33], "Of": [8, 33], "detect": [8, 33], "accumul": [8, 33], "insert": [8, 33], "save_numpy_ndarrai": [8, 27, 33], "numpy_data_type_chang": [8, 33], "num": [8, 33], "effici": [8, 33], "save_checkpoint_model": [8, 33], "full_storage_path": [8, 33], "core": [8, 27, 33], "access": [8, 11, 15, 33], "add_noisy_tripl": [8, 33], "intialize_model": [8, 33], "load_json": [8, 33], "save_embed": [8, 33], "random_predict": [8, 33], "pre_trained_kg": [8, 33], "deploy_triple_predict": [8, 33], "str_subject": [8, 33], "str_predic": [8, 33], "str_object": [8, 33], "deploy_tail_entity_predict": [8, 33], "deploy_head_entity_predict": [8, 33], "deploy_relation_predict": [8, 33], "vocab_to_parquet": [8, 33], "vocab_to_idx": [8, 33], "path_for_seri": [8, 9, 33], "print_into": [8, 33], "create_experiment_fold": [8, 33], "folder_nam": [8, 33], "continual_training_setup_executor": [8, 33], "subdirectori": [8, 33], "exponential_funct": [8, 33], "lam": [8, 33], "ascending_ord": [8, 33], "load_numpi": [8, 33], "easy_answ": [8, 33], "hard_answ": [8, 33], "cd": [8, 33], "renam": [8, 33], "hop": [8, 10, 33], "queri": [8, 10, 22, 33], "answer": [8, 10, 22, 33], "download_fil": [8, 33], "destination_fold": [8, 33], "download_files_from_url": [8, 33], "base_url": [8, 33], "download_pretrained_model": [8, 33], "readthedoc": [8, 36, 37], "io": [8, 36, 37], "en": [8, 36, 37], "common": [8, 36, 37], "distributeddataparallel": [8, 36, 37, 39], "initialize_train": [8, 36, 37], "initialize_or_load_model": [8, 36, 37], "initialize_dataload": [8, 36, 37], "initialize_dataset": [8, 36, 37], "k_fold_cross_valid": [8, 36, 37], "configur": [8, 11, 15, 36, 37], "rank": [8, 10, 34, 36, 37], "mrr": [8, 36, 37], "respect": [8, 36, 37], "pre": [8, 10], "get_transductive_entity_embed": [8, 10], "as_pytorch": [8, 10], "as_numpi": [8, 10], "as_list": [8, 10], "create_vector_databas": [8, 10], "collection_nam": [8, 10], "distanc": [8, 10], "locat": [8, 10], "localhost": [8, 10], "port": [8, 10], "6333": [8, 10], "__str__": [8, 10], "eval_lp_perform": [8, 10], "predict_missing_head_ent": [8, 10], "top": [8, 10], "argmax_": [8, 10], "union": [8, 10], "highest": [8, 10], "predict_missing_rel": [8, 10], "predict_missing_tail_ent": [8, 10], "logit": [8, 10], "predict_topk": [8, 10], "topk": [8, 10], "miss": [8, 10, 34], "triple_scor": [8, 10], "unnorm": [8, 10], "t_norm": [8, 10], "tens_1": [8, 10], "tens_2": [8, 10], "tnorm": [8, 10], "min": [8, 10], "tensor_t_norm": [8, 10], "subquery_scor": [8, 10], "t_conorm": [8, 10], "tconorm": [8, 10], "negnorm": [8, 10], "lambda_": [8, 10], "neg_norm": [8, 10], "standard": [8, 10, 34], "return_multi_hop_query_result": [8, 10], "aggregated_query_for_all_ent": [8, 10], "only_scor": [8, 10], "single_hop_query_answ": [8, 10], "answer_multi_hop_queri": [8, 10], "query_typ": [8, 10, 22], "ellipsi": [8, 10], "prod": [8, 10], "refactor": [8, 10], "done": [8, 10], "find": [8, 10], "epfo": [8, 10], "negat": [8, 10], "disjunct": [8, 10], "2p": [8, 10], "itself": [8, 10], "lambda": [8, 10], "sugeno": [8, 10], "yager": [8, 10], "substitut": [8, 10], "intermedi": [8, 10], "sort": [8, 10], "descen": [8, 10], "order": [8, 10], "find_missing_tripl": [8, 10], "confid": [8, 10], "at_most": [8, 10], "sy": [8, 10], "maxsiz": [8, 10], "otin": [8, 10], "threshold": [8, 10], "sigmoid": [8, 10], "stop": [8, 10, 11, 15], "land": [8, 10], "deploi": [8, 10], "train_tripl": [8, 10], "train_k_vs_al": [8, 10], "001": [8, 10], "v": [8, 10], "pretrain": [8, 10], "mapping_from_first_two_cols_to_third": [8, 35], "querygener": [8, 22], "train_path": [8, 22], "val_path": [8, 22], "test_path": [8, 22], "ent2id": [8, 22], "rel2id": [8, 22], "gen_valid": [8, 22], "gen_test": [8, 22], "list2tupl": [8, 22], "list_data": [8, 22], "tuple2list": [8, 22], "set_global_se": [8, 22], "construct_graph": [8, 22], "incom": [8, 22], "outgo": [8, 22], "edg": [8, 22], "fill_queri": [8, 22], "query_structur": [8, 22], "ent_in": [8, 22], "ent_out": [8, 22], "privat": [8, 22], "achieve_answ": [8, 22], "document": [8, 22], "code": [8, 22], "write_link": [8, 22], "small_ent_out": [8, 22], "ground_queri": [8, 22], "small_ent_in": [8, 22], "gen_num": [8, 22], "query_nam": [8, 22], "achiev": [8, 22], "unmap": [8, 22], "tp_answer": [8, 22], "fp_answer": [8, 22], "fn_answer": [8, 22], "unmap_queri": [8, 22], "id2ent": [8, 22], "id2rel": [8, 22], "generate_queri": [8, 22], "query_struct": [8, 22], "ground": [8, 22], "depend": [8, 22], "text": [8, 22], "struct": [8, 22], "save_queri": [8, 22], "save_path": [8, 22], "load_queri": [8, 22], "get_queri": [8, 22], "save_queries_and_answ": [8, 22], "defaultdict": [8, 22], "load_queries_and_answ": [8, 22], "__version__": 8, "pad": 9, "path_for_deseri": 9, "add_recipr": [9, 27], "entities_str": 9, "relations_str": 9, "lightningmodul": [11, 15], "submodul": [11, 12, 13, 16, 18, 21, 40], "mem_of_model": [11, 15], "mb": [11, 15], "veri": [11, 15], "cach": [11, 15], "mylightningmodul": [11, 15], "l": [11, 15], "training_step_output": [11, 15], "epoch_mean": [11, 15], "log": [11, 15], "training_epoch_mean": [11, 15], "free": [11, 15], "up": [11, 15], "clear": [11, 15], "test_epoch_end": [11, 15], "test_step": [11, 15], "It": [11, 15], "recommend": [11, 15], "happen": [11, 15], "validation_step": [11, 15], "configure_optim": [11, 15, 21], "choos": [11, 15], "schedul": [11, 15], "But": [11, 15], "similar": [11, 15], "might": [11, 15], "lr_scheduler_config": [11, 15], "lr_schedul": [11, 15], "whose": [11, 15], "associ": [11, 15], "shown": [11, 15], "unit": [11, 15, 21], "wherea": [11, 15], "interv": [11, 15], "monitor": [11, 15], "reducelronplateau": [11, 15], "val_loss": [11, 15], "enforc": [11, 15], "thu": [11, 15], "found": [11, 15], "warn": [11, 15], "strict": [11, 15], "learningratemonitor": [11, 15], "simpli": [11, 15, 21], "metric_to_track": [11, 15], "metric_v": [11, 15], "backward": [11, 15, 38], "bit": [11, 15], "precis": [11, 15], "handl": [11, 15], "lbfg": [11, 15], "closur": [11, 15], "often": [11, 15], "optimizer_step": [11, 15], "identityclass": [11, 15], "fmult": [14, 15], "compute_func": [14, 15], "chain_func": [14, 15], "gfmult": [14, 15], "fmult2": [14, 15], "build_func": [14, 15], "vec": [14, 15], "build_chain_func": [14, 15], "list_vec": [14, 15], "list_w": [14, 15], "list_b": [14, 15], "trapezoid": [14, 15], "lfmult1": [14, 15], "trigonometr": [14, 15], "wk": [14, 15], "kix": [14, 15], "quaternion_mul": [15, 20], "quaternion_mul_with_unit_norm": [15, 18], "octonion_mul": [15, 16], "octonion_mul_norm": [15, 16], "return": [17, 20, 22, 27, 33, 34, 35], "ndim": 21, "bia": 21, "doesn": 21, "causalselfattent": 21, "mlp": 21, "gptconfig": 21, "vocab_s": 21, "50304": 21, "n_layer": 21, "n_head": 21, "n_embd": 21, "768": 21, "gpt": 21, "get_num_param": 21, "non_embed": 21, "count": 21, "subtract": 21, "except": 21, "due": 21, "actual": 21, "final": 21, "crop_block_s": 21, "classmethod": 21, "from_pretrain": 21, "model_typ": 21, "override_arg": 21, "learning_r": 21, "beta": 21, "device_typ": 21, "estimate_mfu": 21, "fwdbwd_per_it": 21, "dt": 21, "flop": 21, "mfu": 21, "a100": 21, "bfloat16": 21, "peak": 21, "preprocesskg": [23, 24], "preprocess_with_byte_pair_encod": [23, 24], "preprocess_with_byte_pair_encoding_with_pad": [23, 24], "preprocess_with_panda": [23, 24], "reciprioc": [23, 24], "noisi": [23, 24, 27], "vocabulari": [23, 24], "preprocess_with_polar": [23, 24], "sequential_vocabulary_construct": [23, 24], "remov": [23, 24], "column": [23, 24], "uri": [23, 24], "remove_triples_from_train_with_condit": [23, 24], "loadsavetodisk": [23, 26], "readfromdisk": [23, 25], "add_noisy_triples_into_train": [23, 25], "apply_reciprical_or_nois": 27, "df": 27, "read_with_polar": 27, "data_path": 27, "read_with_panda": 27, "read_from_triple_stor": 27, "create_constraint": [27, 35], "extract": [27, 35], "domain": [27, 35], "outsid": [27, 35], "crete": 27, "load_with_panda": 27, "deseri": 27, "load_numpy_ndarrai": 27, "index_triples_with_panda": 27, "frame": 27, "dataset_sanity_check": 27, "is_sparql_endpoint_al": 28, "validate_knowledge_graph": 28, "sanity_checking_with_argu": 28, "main": [30, 31, 32], "descript": 31, "app": 32, "neural_search": 32, "async": 32, "root": 32, "search_embed": 32, "retrieve_embed": 32, "neuralsearch": 32, "search": [32, 40], "class": 33, "evaluate_bpe_lp": 34, "all_bpe_shaped_ent": 34, "efficient_zero_grad": 34, "enable_log": 35, "preprocesses_input_arg": 35, "saniti": 35, "get_callback": 36, "torchtrain": 38, "empti": 38, "forward_backward_upd": 38, "x_batch": 38, "extract_input_outputs_set_devic": 38, "put": 38, "print_peak_memori": 39, "prefix": 39, "torchddptrain": 39, "drive": 39, "infin": 39, "outlier": 39, "enorm": 39, "gradient": 39, "nodetrain": 39, "train_dataset_load": 39, "extract_input_output": 39, "ddptrainer": 39, "gpu_id": 39, "subpackag": 40, "packag": 40, "page": 40}, "objects": {"": [[8, 0, 0, "-", "dicee"]], "dicee": [[8, 1, 1, "", "AConEx"], [8, 1, 1, "", "AConvO"], [8, 1, 1, "", "AConvQ"], [8, 1, 1, "", "AllvsAll"], [8, 1, 1, "", "BPE_NegativeSamplingDataset"], [8, 1, 1, "", "BaseKGE"], [8, 1, 1, "", "BytE"], [8, 1, 1, "", "CMult"], [8, 1, 1, "", "CVDataModule"], [8, 1, 1, "", "ComplEx"], [8, 1, 1, "", "ConEx"], [8, 1, 1, "", "ConvO"], [8, 1, 1, "", "ConvQ"], [8, 1, 1, "", "DICE_Trainer"], [8, 1, 1, "", "DeCaL"], [8, 1, 1, "", "DistMult"], [8, 1, 1, "", "Execute"], [8, 1, 1, "", "KGE"], [8, 1, 1, "", "Keci"], [8, 1, 1, "", "KeciBase"], [8, 1, 1, "", "KvsAll"], [8, 1, 1, "", "KvsSampleDataset"], [8, 1, 1, "", "LFMult"], [8, 1, 1, "", "MultiClassClassificationDataset"], [8, 1, 1, "", "MultiLabelDataset"], [8, 1, 1, "", "NegSampleDataset"], [8, 1, 1, "", "OMult"], [8, 1, 1, "", "OnevsAllDataset"], [8, 1, 1, "", "Pyke"], [8, 1, 1, "", "PykeenKGE"], [8, 1, 1, "", "QMult"], [8, 1, 1, "", "QueryGenerator"], [8, 1, 1, "", "Shallom"], [8, 1, 1, "", "TransE"], [8, 1, 1, "", "TriplePredictionDataset"], [8, 3, 1, "", "__version__"], [0, 0, 0, "-", "abstracts"], [8, 5, 1, "", "add_noisy_triples"], [1, 0, 0, "-", "analyse_experiments"], [2, 0, 0, "-", "callbacks"], [3, 0, 0, "-", "config"], [8, 5, 1, "", "construct_dataset"], [8, 5, 1, "", "continual_training_setup_executor"], [8, 5, 1, "", "create_experiment_folder"], [8, 5, 1, "", "create_recipriocal_triples"], [4, 0, 0, "-", "dataset_classes"], [8, 5, 1, "", "deploy_head_entity_prediction"], [8, 5, 1, "", "deploy_relation_prediction"], [8, 5, 1, "", "deploy_tail_entity_prediction"], [8, 5, 1, "", "deploy_triple_prediction"], [8, 5, 1, "", "download_file"], [8, 5, 1, "", "download_files_from_url"], [8, 5, 1, "", "download_pretrained_model"], [5, 0, 0, "-", "eval_static_funcs"], [8, 5, 1, "", "evaluate"], [6, 0, 0, "-", "evaluator"], [7, 0, 0, "-", "executer"], [8, 5, 1, "", "exponential_function"], [8, 5, 1, "", "get_ee_vocab"], [8, 5, 1, "", "get_er_vocab"], [8, 5, 1, "", "get_re_vocab"], [8, 5, 1, "", "intialize_model"], [9, 0, 0, "-", "knowledge_graph"], [10, 0, 0, "-", "knowledge_graph_embeddings"], [8, 5, 1, "", "load_json"], [8, 5, 1, "", "load_model"], [8, 5, 1, "", "load_model_ensemble"], [8, 5, 1, "", "load_numpy"], [8, 5, 1, "id81", "load_pickle"], [8, 5, 1, "", "mapping_from_first_two_cols_to_third"], [15, 0, 0, "-", "models"], [8, 5, 1, "", "numpy_data_type_changer"], [22, 0, 0, "-", "query_generator"], [8, 5, 1, "", "random_prediction"], [8, 5, 1, "", "read_or_load_kg"], [23, 0, 0, "-", "read_preprocess_save_load_kg"], [8, 5, 1, "", "reload_dataset"], [28, 0, 0, "-", "sanity_checkers"], [8, 5, 1, "", "save_checkpoint_model"], [8, 5, 1, "", "save_embeddings"], [8, 5, 1, "", "save_numpy_ndarray"], [8, 5, 1, "", "save_pickle"], [29, 0, 0, "-", "scripts"], [8, 5, 1, "", "select_model"], [33, 0, 0, "-", "static_funcs"], [34, 0, 0, "-", "static_funcs_training"], [35, 0, 0, "-", "static_preprocess_funcs"], [8, 5, 1, "", "store"], [8, 5, 1, "id0", "timeit"], [37, 0, 0, "-", "trainer"], [8, 5, 1, "", "vocab_to_parquet"]], "dicee.AConEx": [[8, 2, 1, "", "forward_k_vs_all"], [8, 2, 1, "", "forward_k_vs_sample"], [8, 2, 1, "", "forward_triples"], [8, 2, 1, "", "residual_convolution"]], "dicee.AConvO": [[8, 2, 1, "", "forward_k_vs_all"], [8, 2, 1, "", "forward_triples"], [8, 2, 1, "", "octonion_normalizer"], [8, 2, 1, "", "residual_convolution"]], "dicee.AConvQ": [[8, 2, 1, "", "forward_k_vs_all"], [8, 2, 1, "", "forward_triples"], [8, 2, 1, "", "residual_convolution"]], "dicee.AllvsAll": [[8, 2, 1, "", "__getitem__"], [8, 2, 1, "", "__len__"]], "dicee.BPE_NegativeSamplingDataset": [[8, 2, 1, "", "__getitem__"], [8, 2, 1, "", "__len__"], [8, 2, 1, "", "collate_fn"]], "dicee.BaseKGE": [[8, 2, 1, "", "forward"], [8, 2, 1, "", "forward_byte_pair_encoded_k_vs_all"], [8, 2, 1, "", "forward_byte_pair_encoded_triple"], [8, 2, 1, "", "forward_k_vs_all"], [8, 2, 1, "", "forward_k_vs_sample"], [8, 2, 1, "", "forward_triples"], [8, 2, 1, "", "get_bpe_head_and_relation_representation"], [8, 2, 1, "", "get_embeddings"], [8, 2, 1, "", "get_head_relation_representation"], [8, 2, 1, "", "get_sentence_representation"], [8, 2, 1, "", "get_triple_representation"], [8, 2, 1, "", "init_params_with_sanity_checking"]], "dicee.BytE": [[8, 2, 1, "", "forward"], [8, 2, 1, "", "generate"], [8, 2, 1, "", "loss_function"], [8, 2, 1, "", "training_step"]], "dicee.CMult": [[8, 2, 1, "", "clifford_mul"], [8, 2, 1, "", "forward_k_vs_all"], [8, 2, 1, "", "forward_triples"], [8, 2, 1, "", "score"]], "dicee.CVDataModule": [[8, 2, 1, "", "prepare_data"], [8, 2, 1, "", "setup"], [8, 2, 1, "", "train_dataloader"], [8, 2, 1, "", "transfer_batch_to_device"]], "dicee.ComplEx": [[8, 2, 1, "", "forward_k_vs_all"], [8, 2, 1, "", "k_vs_all_score"], [8, 2, 1, "", "score"]], "dicee.ConEx": [[8, 2, 1, "", "forward_k_vs_all"], [8, 2, 1, "", "forward_k_vs_sample"], [8, 2, 1, "", "forward_triples"], [8, 2, 1, "", "residual_convolution"]], "dicee.ConvO": [[8, 2, 1, "", "forward_k_vs_all"], [8, 2, 1, "", "forward_triples"], [8, 2, 1, "", "octonion_normalizer"], [8, 2, 1, "", "residual_convolution"]], "dicee.ConvQ": [[8, 2, 1, "", "forward_k_vs_all"], [8, 2, 1, "", "forward_triples"], [8, 2, 1, "", "residual_convolution"]], "dicee.DICE_Trainer": [[8, 2, 1, "", "continual_start"], [8, 2, 1, "", "initialize_dataloader"], [8, 2, 1, "", "initialize_dataset"], [8, 2, 1, "", "initialize_or_load_model"], [8, 2, 1, "", "initialize_trainer"], [8, 2, 1, "", "k_fold_cross_validation"], [8, 2, 1, "", "start"]], "dicee.DeCaL": [[8, 2, 1, "", "apply_coefficients"], [8, 2, 1, "", "cl_pqr"], [8, 2, 1, "", "compute_sigma_pp"], [8, 2, 1, "", "compute_sigma_pq"], [8, 2, 1, "", "compute_sigma_pr"], [8, 2, 1, "", "compute_sigma_qq"], [8, 2, 1, "", "compute_sigma_qr"], [8, 2, 1, "", "compute_sigma_rr"], [8, 2, 1, "", "compute_sigmas_multivect"], [8, 2, 1, "", "compute_sigmas_single"], [8, 2, 1, "", "construct_cl_multivector"], [8, 2, 1, "", "forward_k_vs_all"], [8, 2, 1, "", "forward_triples"]], "dicee.DistMult": [[8, 2, 1, "", "forward_k_vs_all"], [8, 2, 1, "", "forward_k_vs_sample"], [8, 2, 1, "", "k_vs_all_score"], [8, 2, 1, "", "score"]], "dicee.Execute": [[8, 2, 1, "", "end"], [8, 2, 1, "", "load_indexed_data"], [8, 2, 1, "", "read_or_load_kg"], [8, 2, 1, "", "read_preprocess_index_serialize_data"], [8, 2, 1, "", "save_trained_model"], [8, 2, 1, "", "start"], [8, 2, 1, "", "write_report"]], "dicee.KGE": [[8, 2, 1, "", "__str__"], [8, 2, 1, "", "answer_multi_hop_query"], [8, 2, 1, "", "create_vector_database"], [8, 2, 1, "", "deploy"], [8, 2, 1, "", "eval_lp_performance"], [8, 2, 1, "", "find_missing_triples"], [8, 2, 1, "", "generate"], [8, 2, 1, "", "get_transductive_entity_embeddings"], [8, 2, 1, "", "negnorm"], [8, 2, 1, "", "predict"], [8, 2, 1, "", "predict_missing_head_entity"], [8, 2, 1, "", "predict_missing_relations"], [8, 2, 1, "", "predict_missing_tail_entity"], [8, 2, 1, "", "predict_topk"], [8, 2, 1, "", "return_multi_hop_query_results"], [8, 2, 1, "", "single_hop_query_answering"], [8, 2, 1, "", "t_conorm"], [8, 2, 1, "", "t_norm"], [8, 2, 1, "", "tensor_t_norm"], [8, 2, 1, "", "train"], [8, 2, 1, "", "train_k_vs_all"], [8, 2, 1, "", "train_triples"], [8, 2, 1, "", "triple_score"]], "dicee.Keci": [[8, 2, 1, "", "apply_coefficients"], [8, 2, 1, "", "clifford_multiplication"], [8, 2, 1, "", "compute_sigma_pp"], [8, 2, 1, "", "compute_sigma_pq"], [8, 2, 1, "", "compute_sigma_qq"], [8, 2, 1, "", "construct_cl_multivector"], [8, 2, 1, "", "forward_k_vs_all"], [8, 2, 1, "", "forward_k_vs_sample"], [8, 2, 1, "", "forward_k_vs_with_explicit"], [8, 2, 1, "", "forward_triples"], [8, 2, 1, "", "k_vs_all_score"], [8, 2, 1, "", "score"]], "dicee.KvsAll": [[8, 2, 1, "", "__getitem__"], [8, 2, 1, "", "__len__"]], "dicee.KvsSampleDataset": [[8, 2, 1, "", "__getitem__"], [8, 2, 1, "", "__len__"]], "dicee.LFMult": [[8, 2, 1, "", "comp_func"], [8, 2, 1, "", "construct_multi_coeff"], [8, 2, 1, "", "forward_triples"], [8, 2, 1, "", "linear"], [8, 2, 1, "", "poly_NN"], [8, 2, 1, "", "polynomial"], [8, 2, 1, "", "pop"], [8, 2, 1, "", "scalar_batch_NN"], [8, 2, 1, "", "tri_score"], [8, 2, 1, "", "vtp_score"]], "dicee.MultiClassClassificationDataset": [[8, 2, 1, "", "__getitem__"], [8, 2, 1, "", "__len__"]], "dicee.MultiLabelDataset": [[8, 2, 1, "", "__getitem__"], [8, 2, 1, "", "__len__"]], "dicee.NegSampleDataset": [[8, 2, 1, "", "__getitem__"], [8, 2, 1, "", "__len__"]], "dicee.OMult": [[8, 2, 1, "", "forward_k_vs_all"], [8, 2, 1, "", "k_vs_all_score"], [8, 2, 1, "", "octonion_normalizer"], [8, 2, 1, "", "score"]], "dicee.OnevsAllDataset": [[8, 2, 1, "", "__getitem__"], [8, 2, 1, "", "__len__"]], "dicee.Pyke": [[8, 2, 1, "", "forward_triples"]], "dicee.PykeenKGE": [[8, 2, 1, "", "forward_k_vs_all"], [8, 2, 1, "", "forward_k_vs_sample"], [8, 2, 1, "", "forward_triples"]], "dicee.QMult": [[8, 2, 1, "", "forward_k_vs_all"], [8, 2, 1, "", "forward_k_vs_sample"], [8, 2, 1, "", "k_vs_all_score"], [8, 2, 1, "", "quaternion_multiplication_followed_by_inner_product"], [8, 2, 1, "", "quaternion_normalizer"], [8, 2, 1, "", "score"]], "dicee.QueryGenerator": [[8, 2, 1, "", "achieve_answer"], [8, 2, 1, "", "construct_graph"], [8, 2, 1, "", "fill_query"], [8, 2, 1, "", "generate_queries"], [8, 2, 1, "", "get_queries"], [8, 2, 1, "", "ground_queries"], [8, 2, 1, "", "list2tuple"], [8, 2, 1, "", "load_queries"], [8, 2, 1, "", "load_queries_and_answers"], [8, 2, 1, "", "save_queries"], [8, 2, 1, "", "save_queries_and_answers"], [8, 2, 1, "", "set_global_seed"], [8, 2, 1, "", "tuple2list"], [8, 2, 1, "", "unmap"], [8, 2, 1, "", "unmap_query"], [8, 2, 1, "", "write_links"]], "dicee.Shallom": [[8, 2, 1, "", "forward_k_vs_all"], [8, 2, 1, "", "forward_triples"], [8, 2, 1, "", "get_embeddings"]], "dicee.TransE": [[8, 2, 1, "", "forward_k_vs_all"], [8, 2, 1, "", "score"]], "dicee.TriplePredictionDataset": [[8, 2, 1, "", "__getitem__"], [8, 2, 1, "", "__len__"], [8, 2, 1, "", "collate_fn"]], "dicee.abstracts": [[0, 1, 1, "", "AbstractCallback"], [0, 1, 1, "", "AbstractPPECallback"], [0, 1, 1, "", "AbstractTrainer"], [0, 1, 1, "", "BaseInteractiveKGE"]], "dicee.abstracts.AbstractCallback": [[0, 2, 1, "", "on_fit_end"], [0, 2, 1, "", "on_fit_start"], [0, 2, 1, "", "on_init_end"], [0, 2, 1, "", "on_init_start"], [0, 2, 1, "", "on_train_batch_end"], [0, 2, 1, "", "on_train_epoch_end"]], "dicee.abstracts.AbstractPPECallback": [[0, 2, 1, "", "on_fit_end"], [0, 2, 1, "", "on_fit_start"], [0, 2, 1, "", "store_ensemble"]], "dicee.abstracts.AbstractTrainer": [[0, 2, 1, "", "on_fit_end"], [0, 2, 1, "", "on_fit_start"], [0, 2, 1, "", "on_train_batch_end"], [0, 2, 1, "", "on_train_epoch_end"], [0, 2, 1, "", "save_checkpoint"]], "dicee.abstracts.BaseInteractiveKGE": [[0, 2, 1, "", "add_new_entity_embeddings"], [0, 2, 1, "", "construct_input_and_output"], [0, 2, 1, "", "get_bpe_token_representation"], [0, 2, 1, "", "get_domain_of_relation"], [0, 2, 1, "", "get_entity_embeddings"], [0, 2, 1, "", "get_entity_index"], [0, 2, 1, "", "get_eval_report"], [0, 2, 1, "", "get_padded_bpe_triple_representation"], [0, 2, 1, "", "get_range_of_relation"], [0, 2, 1, "", "get_relation_embeddings"], [0, 2, 1, "", "get_relation_index"], [0, 2, 1, "", "index_triple"], [0, 2, 1, "", "is_seen"], [0, 4, 1, "", "name"], [0, 2, 1, "", "parameters"], [0, 2, 1, "", "sample_entity"], [0, 2, 1, "", "sample_relation"], [0, 2, 1, "", "save"], [0, 2, 1, "", "set_model_eval_mode"], [0, 2, 1, "", "set_model_train_mode"]], "dicee.analyse_experiments": [[1, 1, 1, "", "Experiment"], [1, 5, 1, "", "analyse"], [1, 5, 1, "", "get_default_arguments"]], "dicee.analyse_experiments.Experiment": [[1, 2, 1, "", "save_experiment"], [1, 2, 1, "", "to_df"]], "dicee.callbacks": [[2, 1, 1, "", "ASWA"], [2, 1, 1, "", "AccumulateEpochLossCallback"], [2, 1, 1, "", "Eval"], [2, 1, 1, "", "KGESaveCallback"], [2, 1, 1, "", "KronE"], [2, 1, 1, "", "Perturb"], [2, 1, 1, "", "PrintCallback"], [2, 1, 1, "", "PseudoLabellingCallback"], [2, 5, 1, "", "compute_convergence"], [2, 5, 1, "", "estimate_q"]], "dicee.callbacks.ASWA": [[2, 2, 1, "", "compute_mrr"], [2, 2, 1, "", "decide"], [2, 2, 1, "", "get_aswa_state_dict"], [2, 2, 1, "", "on_fit_end"], [2, 2, 1, "", "on_train_epoch_end"]], "dicee.callbacks.AccumulateEpochLossCallback": [[2, 2, 1, "", "on_fit_end"]], "dicee.callbacks.Eval": [[2, 2, 1, "", "on_fit_end"], [2, 2, 1, "", "on_fit_start"], [2, 2, 1, "", "on_train_batch_end"], [2, 2, 1, "", "on_train_epoch_end"]], "dicee.callbacks.KGESaveCallback": [[2, 2, 1, "", "on_epoch_end"], [2, 2, 1, "", "on_fit_end"], [2, 2, 1, "", "on_fit_start"], [2, 2, 1, "", "on_train_batch_end"], [2, 2, 1, "", "on_train_epoch_end"]], "dicee.callbacks.KronE": [[2, 2, 1, "", "batch_kronecker_product"], [2, 2, 1, "", "get_kronecker_triple_representation"], [2, 2, 1, "", "on_fit_start"]], "dicee.callbacks.Perturb": [[2, 2, 1, "", "on_train_batch_start"]], "dicee.callbacks.PrintCallback": [[2, 2, 1, "", "on_fit_end"], [2, 2, 1, "", "on_fit_start"], [2, 2, 1, "", "on_train_batch_end"], [2, 2, 1, "", "on_train_epoch_end"]], "dicee.callbacks.PseudoLabellingCallback": [[2, 2, 1, "", "create_random_data"], [2, 2, 1, "", "on_epoch_end"]], "dicee.config": [[3, 1, 1, "", "Namespace"]], "dicee.config.Namespace": [[3, 2, 1, "", "__iter__"], [3, 6, 1, "", "adaptive_swa"], [3, 6, 1, "", "add_noise_rate"], [3, 6, 1, "", "backend"], [3, 6, 1, "", "batch_size"], [3, 6, 1, "", "block_size"], [3, 6, 1, "", "byte_pair_encoding"], [3, 6, 1, "", "callbacks"], [3, 6, 1, "", "dataset_dir"], [3, 6, 1, "", "embedding_dim"], [3, 6, 1, "", "eval_model"], [3, 6, 1, "", "feature_map_dropout_rate"], [3, 6, 1, "", "gpus"], [3, 6, 1, "", "gradient_accumulation_steps"], [3, 6, 1, "", "hidden_dropout_rate"], [3, 6, 1, "", "init_param"], [3, 6, 1, "", "input_dropout_rate"], [3, 6, 1, "", "kernel_size"], [3, 6, 1, "", "lr"], [3, 6, 1, "", "model"], [3, 6, 1, "", "neg_ratio"], [3, 6, 1, "", "normalization"], [3, 6, 1, "", "num_core"], [3, 6, 1, "", "num_epochs"], [3, 6, 1, "", "num_folds_for_cv"], [3, 6, 1, "", "num_of_output_channels"], [3, 6, 1, "", "optim"], [3, 6, 1, "", "p"], [3, 6, 1, "", "path_single_kg"], [3, 6, 1, "", "path_to_store_single_run"], [3, 6, 1, "", "pykeen_model_kwargs"], [3, 6, 1, "", "q"], [3, 6, 1, "", "random_seed"], [3, 6, 1, "", "read_only_few"], [3, 6, 1, "", "sample_triples_ratio"], [3, 6, 1, "", "save_embeddings_as_csv"], [3, 6, 1, "", "save_model_at_every_epoch"], [3, 6, 1, "", "scoring_technique"], [3, 6, 1, "", "sparql_endpoint"], [3, 6, 1, "", "storage_path"], [3, 6, 1, "", "swa"], [3, 6, 1, "", "trainer"], [3, 6, 1, "", "weight_decay"]], "dicee.dataset_classes": [[4, 1, 1, "", "AllvsAll"], [4, 1, 1, "", "BPE_NegativeSamplingDataset"], [4, 1, 1, "", "CVDataModule"], [4, 1, 1, "", "KvsAll"], [4, 1, 1, "", "KvsSampleDataset"], [4, 1, 1, "", "MultiClassClassificationDataset"], [4, 1, 1, "", "MultiLabelDataset"], [4, 1, 1, "", "NegSampleDataset"], [4, 1, 1, "", "OnevsAllDataset"], [4, 1, 1, "", "TriplePredictionDataset"], [4, 5, 1, "", "construct_dataset"], [4, 5, 1, "", "reload_dataset"]], "dicee.dataset_classes.AllvsAll": [[4, 2, 1, "", "__getitem__"], [4, 2, 1, "", "__len__"]], "dicee.dataset_classes.BPE_NegativeSamplingDataset": [[4, 2, 1, "", "__getitem__"], [4, 2, 1, "", "__len__"], [4, 2, 1, "", "collate_fn"]], "dicee.dataset_classes.CVDataModule": [[4, 2, 1, "", "prepare_data"], [4, 2, 1, "", "setup"], [4, 2, 1, "", "train_dataloader"], [4, 2, 1, "", "transfer_batch_to_device"]], "dicee.dataset_classes.KvsAll": [[4, 2, 1, "", "__getitem__"], [4, 2, 1, "", "__len__"]], "dicee.dataset_classes.KvsSampleDataset": [[4, 2, 1, "", "__getitem__"], [4, 2, 1, "", "__len__"]], "dicee.dataset_classes.MultiClassClassificationDataset": [[4, 2, 1, "", "__getitem__"], [4, 2, 1, "", "__len__"]], "dicee.dataset_classes.MultiLabelDataset": [[4, 2, 1, "", "__getitem__"], [4, 2, 1, "", "__len__"]], "dicee.dataset_classes.NegSampleDataset": [[4, 2, 1, "", "__getitem__"], [4, 2, 1, "", "__len__"]], "dicee.dataset_classes.OnevsAllDataset": [[4, 2, 1, "", "__getitem__"], [4, 2, 1, "", "__len__"]], "dicee.dataset_classes.TriplePredictionDataset": [[4, 2, 1, "", "__getitem__"], [4, 2, 1, "", "__len__"], [4, 2, 1, "", "collate_fn"]], "dicee.eval_static_funcs": [[5, 5, 1, "", "evaluate_link_prediction_performance"], [5, 5, 1, "", "evaluate_link_prediction_performance_with_bpe"], [5, 5, 1, "", "evaluate_link_prediction_performance_with_bpe_reciprocals"], [5, 5, 1, "", "evaluate_link_prediction_performance_with_reciprocals"], [5, 5, 1, "", "evaluate_lp_bpe_k_vs_all"]], "dicee.evaluator": [[6, 1, 1, "", "Evaluator"]], "dicee.evaluator.Evaluator": [[6, 2, 1, "", "dummy_eval"], [6, 2, 1, "", "eval"], [6, 2, 1, "", "eval_rank_of_head_and_tail_byte_pair_encoded_entity"], [6, 2, 1, "", "eval_rank_of_head_and_tail_entity"], [6, 2, 1, "", "eval_with_bpe_vs_all"], [6, 2, 1, "", "eval_with_byte"], [6, 2, 1, "", "eval_with_data"], [6, 2, 1, "", "eval_with_vs_all"], [6, 2, 1, "", "evaluate_lp"], [6, 2, 1, "", "evaluate_lp_bpe_k_vs_all"], [6, 2, 1, "", "evaluate_lp_k_vs_all"], [6, 2, 1, "", "evaluate_lp_with_byte"], [6, 2, 1, "", "vocab_preparation"]], "dicee.executer": [[7, 1, 1, "", "ContinuousExecute"], [7, 1, 1, "", "Execute"]], "dicee.executer.ContinuousExecute": [[7, 2, 1, "", "continual_start"]], "dicee.executer.Execute": [[7, 2, 1, "", "end"], [7, 2, 1, "", "load_indexed_data"], [7, 2, 1, "", "read_or_load_kg"], [7, 2, 1, "", "read_preprocess_index_serialize_data"], [7, 2, 1, "", "save_trained_model"], [7, 2, 1, "", "start"], [7, 2, 1, "", "write_report"]], "dicee.knowledge_graph": [[9, 1, 1, "", "KG"]], "dicee.knowledge_graph.KG": [[9, 4, 1, "", "entities_str"], [9, 2, 1, "", "func_triple_to_bpe_representation"], [9, 4, 1, "", "relations_str"]], "dicee.knowledge_graph_embeddings": [[10, 1, 1, "", "KGE"]], "dicee.knowledge_graph_embeddings.KGE": [[10, 2, 1, "", "__str__"], [10, 2, 1, "", "answer_multi_hop_query"], [10, 2, 1, "", "create_vector_database"], [10, 2, 1, "", "deploy"], [10, 2, 1, "", "eval_lp_performance"], [10, 2, 1, "", "find_missing_triples"], [10, 2, 1, "", "generate"], [10, 2, 1, "", "get_transductive_entity_embeddings"], [10, 2, 1, "", "negnorm"], [10, 2, 1, "", "predict"], [10, 2, 1, "", "predict_missing_head_entity"], [10, 2, 1, "", "predict_missing_relations"], [10, 2, 1, "", "predict_missing_tail_entity"], [10, 2, 1, "", "predict_topk"], [10, 2, 1, "", "return_multi_hop_query_results"], [10, 2, 1, "", "single_hop_query_answering"], [10, 2, 1, "", "t_conorm"], [10, 2, 1, "", "t_norm"], [10, 2, 1, "", "tensor_t_norm"], [10, 2, 1, "", "train"], [10, 2, 1, "", "train_k_vs_all"], [10, 2, 1, "", "train_triples"], [10, 2, 1, "", "triple_score"]], "dicee.models": [[15, 1, 1, "", "AConEx"], [15, 1, 1, "", "AConvO"], [15, 1, 1, "", "AConvQ"], [15, 1, 1, "id185", "BaseKGE"], [15, 1, 1, "", "BaseKGELightning"], [15, 1, 1, "", "CMult"], [15, 1, 1, "", "ComplEx"], [15, 1, 1, "", "ConEx"], [15, 1, 1, "", "ConvO"], [15, 1, 1, "", "ConvQ"], [15, 1, 1, "", "DeCaL"], [15, 1, 1, "", "DistMult"], [15, 1, 1, "", "FMult"], [15, 1, 1, "", "FMult2"], [15, 1, 1, "", "GFMult"], [15, 1, 1, "id137", "IdentityClass"], [15, 1, 1, "", "Keci"], [15, 1, 1, "", "KeciBase"], [15, 1, 1, "", "LFMult"], [15, 1, 1, "", "LFMult1"], [15, 1, 1, "", "OMult"], [15, 1, 1, "", "Pyke"], [15, 1, 1, "", "PykeenKGE"], [15, 1, 1, "", "QMult"], [15, 1, 1, "", "Shallom"], [15, 1, 1, "", "TransE"], [11, 0, 0, "-", "base_model"], [12, 0, 0, "-", "clifford"], [13, 0, 0, "-", "complex"], [14, 0, 0, "-", "function_space"], [16, 0, 0, "-", "octonion"], [15, 5, 1, "", "octonion_mul"], [15, 5, 1, "", "octonion_mul_norm"], [17, 0, 0, "-", "pykeen_models"], [18, 0, 0, "-", "quaternion"], [15, 5, 1, "", "quaternion_mul"], [15, 5, 1, "", "quaternion_mul_with_unit_norm"], [19, 0, 0, "-", "real"], [20, 0, 0, "-", "static_funcs"], [21, 0, 0, "-", "transformers"]], "dicee.models.AConEx": [[15, 2, 1, "", "forward_k_vs_all"], [15, 2, 1, "", "forward_k_vs_sample"], [15, 2, 1, "", "forward_triples"], [15, 2, 1, "", "residual_convolution"]], "dicee.models.AConvO": [[15, 2, 1, "", "forward_k_vs_all"], [15, 2, 1, "", "forward_triples"], [15, 2, 1, "", "octonion_normalizer"], [15, 2, 1, "", "residual_convolution"]], "dicee.models.AConvQ": [[15, 2, 1, "", "forward_k_vs_all"], [15, 2, 1, "", "forward_triples"], [15, 2, 1, "", "residual_convolution"]], "dicee.models.BaseKGE": [[15, 2, 1, "id192", "forward"], [15, 2, 1, "id186", "forward_byte_pair_encoded_k_vs_all"], [15, 2, 1, "id189", "forward_byte_pair_encoded_triple"], [15, 2, 1, "id198", "forward_k_vs_all"], [15, 2, 1, "id199", "forward_k_vs_sample"], [15, 2, 1, "id195", "forward_triples"], [15, 2, 1, "id205", "get_bpe_head_and_relation_representation"], [15, 2, 1, "id208", "get_embeddings"], [15, 2, 1, "id201", "get_head_relation_representation"], [15, 2, 1, "id202", "get_sentence_representation"], [15, 2, 1, "id200", "get_triple_representation"], [15, 2, 1, "id191", "init_params_with_sanity_checking"]], "dicee.models.BaseKGELightning": [[15, 2, 1, "", "configure_optimizers"], [15, 2, 1, "", "loss_function"], [15, 2, 1, "", "mem_of_model"], [15, 2, 1, "", "on_train_epoch_end"], [15, 2, 1, "", "predict_dataloader"], [15, 2, 1, "", "test_dataloader"], [15, 2, 1, "", "test_epoch_end"], [15, 2, 1, "", "train_dataloader"], [15, 2, 1, "", "training_step"], [15, 2, 1, "", "val_dataloader"]], "dicee.models.CMult": [[15, 2, 1, "", "clifford_mul"], [15, 2, 1, "", "forward_k_vs_all"], [15, 2, 1, "", "forward_triples"], [15, 2, 1, "", "score"]], "dicee.models.ComplEx": [[15, 2, 1, "", "forward_k_vs_all"], [15, 2, 1, "", "k_vs_all_score"], [15, 2, 1, "", "score"]], "dicee.models.ConEx": [[15, 2, 1, "", "forward_k_vs_all"], [15, 2, 1, "", "forward_k_vs_sample"], [15, 2, 1, "", "forward_triples"], [15, 2, 1, "", "residual_convolution"]], "dicee.models.ConvO": [[15, 2, 1, "", "forward_k_vs_all"], [15, 2, 1, "", "forward_triples"], [15, 2, 1, "", "octonion_normalizer"], [15, 2, 1, "", "residual_convolution"]], "dicee.models.ConvQ": [[15, 2, 1, "", "forward_k_vs_all"], [15, 2, 1, "", "forward_triples"], [15, 2, 1, "", "residual_convolution"]], "dicee.models.DeCaL": [[15, 2, 1, "", "apply_coefficients"], [15, 2, 1, "", "cl_pqr"], [15, 2, 1, "", "compute_sigma_pp"], [15, 2, 1, "", "compute_sigma_pq"], [15, 2, 1, "", "compute_sigma_pr"], [15, 2, 1, "", "compute_sigma_qq"], [15, 2, 1, "", "compute_sigma_qr"], [15, 2, 1, "", "compute_sigma_rr"], [15, 2, 1, "", "compute_sigmas_multivect"], [15, 2, 1, "", "compute_sigmas_single"], [15, 2, 1, "", "construct_cl_multivector"], [15, 2, 1, "", "forward_k_vs_all"], [15, 2, 1, "", "forward_triples"]], "dicee.models.DistMult": [[15, 2, 1, "", "forward_k_vs_all"], [15, 2, 1, "", "forward_k_vs_sample"], [15, 2, 1, "", "k_vs_all_score"], [15, 2, 1, "", "score"]], "dicee.models.FMult": [[15, 2, 1, "", "chain_func"], [15, 2, 1, "", "compute_func"], [15, 2, 1, "", "forward_triples"]], "dicee.models.FMult2": [[15, 2, 1, "", "build_chain_funcs"], [15, 2, 1, "", "build_func"], [15, 2, 1, "", "compute_func"], [15, 2, 1, "", "forward_triples"], [15, 2, 1, "", "function"], [15, 2, 1, "", "trapezoid"]], "dicee.models.GFMult": [[15, 2, 1, "", "chain_func"], [15, 2, 1, "", "compute_func"], [15, 2, 1, "", "forward_triples"]], "dicee.models.IdentityClass": [[15, 2, 1, "id138", "forward"]], "dicee.models.Keci": [[15, 2, 1, "", "apply_coefficients"], [15, 2, 1, "", "clifford_multiplication"], [15, 2, 1, "", "compute_sigma_pp"], [15, 2, 1, "", "compute_sigma_pq"], [15, 2, 1, "", "compute_sigma_qq"], [15, 2, 1, "", "construct_cl_multivector"], [15, 2, 1, "", "forward_k_vs_all"], [15, 2, 1, "", "forward_k_vs_sample"], [15, 2, 1, "", "forward_k_vs_with_explicit"], [15, 2, 1, "", "forward_triples"], [15, 2, 1, "", "k_vs_all_score"], [15, 2, 1, "", "score"]], "dicee.models.LFMult": [[15, 2, 1, "", "comp_func"], [15, 2, 1, "", "construct_multi_coeff"], [15, 2, 1, "", "forward_triples"], [15, 2, 1, "", "linear"], [15, 2, 1, "", "poly_NN"], [15, 2, 1, "", "polynomial"], [15, 2, 1, "", "pop"], [15, 2, 1, "", "scalar_batch_NN"], [15, 2, 1, "", "tri_score"], [15, 2, 1, "", "vtp_score"]], "dicee.models.LFMult1": [[15, 2, 1, "", "forward_triples"], [15, 2, 1, "", "tri_score"], [15, 2, 1, "", "vtp_score"]], "dicee.models.OMult": [[15, 2, 1, "", "forward_k_vs_all"], [15, 2, 1, "", "k_vs_all_score"], [15, 2, 1, "", "octonion_normalizer"], [15, 2, 1, "", "score"]], "dicee.models.Pyke": [[15, 2, 1, "", "forward_triples"]], "dicee.models.PykeenKGE": [[15, 2, 1, "", "forward_k_vs_all"], [15, 2, 1, "", "forward_k_vs_sample"], [15, 2, 1, "", "forward_triples"]], "dicee.models.QMult": [[15, 2, 1, "", "forward_k_vs_all"], [15, 2, 1, "", "forward_k_vs_sample"], [15, 2, 1, "", "k_vs_all_score"], [15, 2, 1, "", "quaternion_multiplication_followed_by_inner_product"], [15, 2, 1, "", "quaternion_normalizer"], [15, 2, 1, "", "score"]], "dicee.models.Shallom": [[15, 2, 1, "", "forward_k_vs_all"], [15, 2, 1, "", "forward_triples"], [15, 2, 1, "", "get_embeddings"]], "dicee.models.TransE": [[15, 2, 1, "", "forward_k_vs_all"], [15, 2, 1, "", "score"]], "dicee.models.base_model": [[11, 1, 1, "", "BaseKGE"], [11, 1, 1, "", "BaseKGELightning"], [11, 1, 1, "", "IdentityClass"]], "dicee.models.base_model.BaseKGE": [[11, 2, 1, "", "forward"], [11, 2, 1, "", "forward_byte_pair_encoded_k_vs_all"], [11, 2, 1, "", "forward_byte_pair_encoded_triple"], [11, 2, 1, "", "forward_k_vs_all"], [11, 2, 1, "", "forward_k_vs_sample"], [11, 2, 1, "", "forward_triples"], [11, 2, 1, "", "get_bpe_head_and_relation_representation"], [11, 2, 1, "", "get_embeddings"], [11, 2, 1, "", "get_head_relation_representation"], [11, 2, 1, "", "get_sentence_representation"], [11, 2, 1, "", "get_triple_representation"], [11, 2, 1, "", "init_params_with_sanity_checking"]], "dicee.models.base_model.BaseKGELightning": [[11, 2, 1, "", "configure_optimizers"], [11, 2, 1, "", "loss_function"], [11, 2, 1, "", "mem_of_model"], [11, 2, 1, "", "on_train_epoch_end"], [11, 2, 1, "", "predict_dataloader"], [11, 2, 1, "", "test_dataloader"], [11, 2, 1, "", "test_epoch_end"], [11, 2, 1, "", "train_dataloader"], [11, 2, 1, "", "training_step"], [11, 2, 1, "", "val_dataloader"]], "dicee.models.base_model.IdentityClass": [[11, 2, 1, "", "forward"]], "dicee.models.clifford": [[12, 1, 1, "", "CMult"], [12, 1, 1, "", "DeCaL"], [12, 1, 1, "", "Keci"], [12, 1, 1, "", "KeciBase"]], "dicee.models.clifford.CMult": [[12, 2, 1, "", "clifford_mul"], [12, 2, 1, "", "forward_k_vs_all"], [12, 2, 1, "", "forward_triples"], [12, 2, 1, "", "score"]], "dicee.models.clifford.DeCaL": [[12, 2, 1, "", "apply_coefficients"], [12, 2, 1, "", "cl_pqr"], [12, 2, 1, "", "compute_sigma_pp"], [12, 2, 1, "", "compute_sigma_pq"], [12, 2, 1, "", "compute_sigma_pr"], [12, 2, 1, "", "compute_sigma_qq"], [12, 2, 1, "", "compute_sigma_qr"], [12, 2, 1, "", "compute_sigma_rr"], [12, 2, 1, "", "compute_sigmas_multivect"], [12, 2, 1, "", "compute_sigmas_single"], [12, 2, 1, "", "construct_cl_multivector"], [12, 2, 1, "", "forward_k_vs_all"], [12, 2, 1, "", "forward_triples"]], "dicee.models.clifford.Keci": [[12, 2, 1, "", "apply_coefficients"], [12, 2, 1, "", "clifford_multiplication"], [12, 2, 1, "", "compute_sigma_pp"], [12, 2, 1, "", "compute_sigma_pq"], [12, 2, 1, "", "compute_sigma_qq"], [12, 2, 1, "", "construct_cl_multivector"], [12, 2, 1, "", "forward_k_vs_all"], [12, 2, 1, "", "forward_k_vs_sample"], [12, 2, 1, "", "forward_k_vs_with_explicit"], [12, 2, 1, "", "forward_triples"], [12, 2, 1, "", "k_vs_all_score"], [12, 2, 1, "", "score"]], "dicee.models.complex": [[13, 1, 1, "", "AConEx"], [13, 1, 1, "", "ComplEx"], [13, 1, 1, "", "ConEx"]], "dicee.models.complex.AConEx": [[13, 2, 1, "", "forward_k_vs_all"], [13, 2, 1, "", "forward_k_vs_sample"], [13, 2, 1, "", "forward_triples"], [13, 2, 1, "", "residual_convolution"]], "dicee.models.complex.ComplEx": [[13, 2, 1, "", "forward_k_vs_all"], [13, 2, 1, "", "k_vs_all_score"], [13, 2, 1, "", "score"]], "dicee.models.complex.ConEx": [[13, 2, 1, "", "forward_k_vs_all"], [13, 2, 1, "", "forward_k_vs_sample"], [13, 2, 1, "", "forward_triples"], [13, 2, 1, "", "residual_convolution"]], "dicee.models.function_space": [[14, 1, 1, "", "FMult"], [14, 1, 1, "", "FMult2"], [14, 1, 1, "", "GFMult"], [14, 1, 1, "", "LFMult"], [14, 1, 1, "", "LFMult1"]], "dicee.models.function_space.FMult": [[14, 2, 1, "", "chain_func"], [14, 2, 1, "", "compute_func"], [14, 2, 1, "", "forward_triples"]], "dicee.models.function_space.FMult2": [[14, 2, 1, "", "build_chain_funcs"], [14, 2, 1, "", "build_func"], [14, 2, 1, "", "compute_func"], [14, 2, 1, "", "forward_triples"], [14, 2, 1, "", "function"], [14, 2, 1, "", "trapezoid"]], "dicee.models.function_space.GFMult": [[14, 2, 1, "", "chain_func"], [14, 2, 1, "", "compute_func"], [14, 2, 1, "", "forward_triples"]], "dicee.models.function_space.LFMult": [[14, 2, 1, "", "comp_func"], [14, 2, 1, "", "construct_multi_coeff"], [14, 2, 1, "", "forward_triples"], [14, 2, 1, "", "linear"], [14, 2, 1, "", "poly_NN"], [14, 2, 1, "", "polynomial"], [14, 2, 1, "", "pop"], [14, 2, 1, "", "scalar_batch_NN"], [14, 2, 1, "", "tri_score"], [14, 2, 1, "", "vtp_score"]], "dicee.models.function_space.LFMult1": [[14, 2, 1, "", "forward_triples"], [14, 2, 1, "", "tri_score"], [14, 2, 1, "", "vtp_score"]], "dicee.models.octonion": [[16, 1, 1, "", "AConvO"], [16, 1, 1, "", "ConvO"], [16, 1, 1, "", "OMult"], [16, 5, 1, "", "octonion_mul"], [16, 5, 1, "", "octonion_mul_norm"]], "dicee.models.octonion.AConvO": [[16, 2, 1, "", "forward_k_vs_all"], [16, 2, 1, "", "forward_triples"], [16, 2, 1, "", "octonion_normalizer"], [16, 2, 1, "", "residual_convolution"]], "dicee.models.octonion.ConvO": [[16, 2, 1, "", "forward_k_vs_all"], [16, 2, 1, "", "forward_triples"], [16, 2, 1, "", "octonion_normalizer"], [16, 2, 1, "", "residual_convolution"]], "dicee.models.octonion.OMult": [[16, 2, 1, "", "forward_k_vs_all"], [16, 2, 1, "", "k_vs_all_score"], [16, 2, 1, "", "octonion_normalizer"], [16, 2, 1, "", "score"]], "dicee.models.pykeen_models": [[17, 1, 1, "", "PykeenKGE"]], "dicee.models.pykeen_models.PykeenKGE": [[17, 2, 1, "", "forward_k_vs_all"], [17, 2, 1, "", "forward_k_vs_sample"], [17, 2, 1, "", "forward_triples"]], "dicee.models.quaternion": [[18, 1, 1, "", "AConvQ"], [18, 1, 1, "", "ConvQ"], [18, 1, 1, "", "QMult"], [18, 5, 1, "", "quaternion_mul_with_unit_norm"]], "dicee.models.quaternion.AConvQ": [[18, 2, 1, "", "forward_k_vs_all"], [18, 2, 1, "", "forward_triples"], [18, 2, 1, "", "residual_convolution"]], "dicee.models.quaternion.ConvQ": [[18, 2, 1, "", "forward_k_vs_all"], [18, 2, 1, "", "forward_triples"], [18, 2, 1, "", "residual_convolution"]], "dicee.models.quaternion.QMult": [[18, 2, 1, "", "forward_k_vs_all"], [18, 2, 1, "", "forward_k_vs_sample"], [18, 2, 1, "", "k_vs_all_score"], [18, 2, 1, "", "quaternion_multiplication_followed_by_inner_product"], [18, 2, 1, "", "quaternion_normalizer"], [18, 2, 1, "", "score"]], "dicee.models.real": [[19, 1, 1, "", "DistMult"], [19, 1, 1, "", "Pyke"], [19, 1, 1, "", "Shallom"], [19, 1, 1, "", "TransE"]], "dicee.models.real.DistMult": [[19, 2, 1, "", "forward_k_vs_all"], [19, 2, 1, "", "forward_k_vs_sample"], [19, 2, 1, "", "k_vs_all_score"], [19, 2, 1, "", "score"]], "dicee.models.real.Pyke": [[19, 2, 1, "", "forward_triples"]], "dicee.models.real.Shallom": [[19, 2, 1, "", "forward_k_vs_all"], [19, 2, 1, "", "forward_triples"], [19, 2, 1, "", "get_embeddings"]], "dicee.models.real.TransE": [[19, 2, 1, "", "forward_k_vs_all"], [19, 2, 1, "", "score"]], "dicee.models.static_funcs": [[20, 5, 1, "", "quaternion_mul"]], "dicee.models.transformers": [[21, 1, 1, "", "Block"], [21, 1, 1, "", "BytE"], [21, 1, 1, "", "CausalSelfAttention"], [21, 1, 1, "", "GPT"], [21, 1, 1, "", "GPTConfig"], [21, 1, 1, "", "LayerNorm"], [21, 1, 1, "", "MLP"]], "dicee.models.transformers.Block": [[21, 2, 1, "", "forward"]], "dicee.models.transformers.BytE": [[21, 2, 1, "", "forward"], [21, 2, 1, "", "generate"], [21, 2, 1, "", "loss_function"], [21, 2, 1, "", "training_step"]], "dicee.models.transformers.CausalSelfAttention": [[21, 2, 1, "", "forward"]], "dicee.models.transformers.GPT": [[21, 2, 1, "", "configure_optimizers"], [21, 2, 1, "", "crop_block_size"], [21, 2, 1, "", "estimate_mfu"], [21, 2, 1, "", "forward"], [21, 2, 1, "", "from_pretrained"], [21, 2, 1, "", "get_num_params"]], "dicee.models.transformers.GPTConfig": [[21, 6, 1, "", "bias"], [21, 6, 1, "", "block_size"], [21, 6, 1, "", "dropout"], [21, 6, 1, "", "n_embd"], [21, 6, 1, "", "n_head"], [21, 6, 1, "", "n_layer"], [21, 6, 1, "", "vocab_size"]], "dicee.models.transformers.LayerNorm": [[21, 2, 1, "", "forward"]], "dicee.models.transformers.MLP": [[21, 2, 1, "", "forward"]], "dicee.query_generator": [[22, 1, 1, "", "QueryGenerator"]], "dicee.query_generator.QueryGenerator": [[22, 2, 1, "", "achieve_answer"], [22, 2, 1, "", "construct_graph"], [22, 2, 1, "", "fill_query"], [22, 2, 1, "", "generate_queries"], [22, 2, 1, "", "get_queries"], [22, 2, 1, "", "ground_queries"], [22, 2, 1, "", "list2tuple"], [22, 2, 1, "", "load_queries"], [22, 2, 1, "", "load_queries_and_answers"], [22, 2, 1, "", "save_queries"], [22, 2, 1, "", "save_queries_and_answers"], [22, 2, 1, "", "set_global_seed"], [22, 2, 1, "", "tuple2list"], [22, 2, 1, "", "unmap"], [22, 2, 1, "", "unmap_query"], [22, 2, 1, "", "write_links"]], "dicee.read_preprocess_save_load_kg": [[23, 1, 1, "", "LoadSaveToDisk"], [23, 1, 1, "", "PreprocessKG"], [23, 1, 1, "", "ReadFromDisk"], [24, 0, 0, "-", "preprocess"], [25, 0, 0, "-", "read_from_disk"], [26, 0, 0, "-", "save_load_disk"], [27, 0, 0, "-", "util"]], "dicee.read_preprocess_save_load_kg.LoadSaveToDisk": [[23, 2, 1, "", "load"], [23, 2, 1, "", "save"]], "dicee.read_preprocess_save_load_kg.PreprocessKG": [[23, 2, 1, "", "preprocess_with_byte_pair_encoding"], [23, 2, 1, "", "preprocess_with_byte_pair_encoding_with_padding"], [23, 2, 1, "", "preprocess_with_pandas"], [23, 2, 1, "", "preprocess_with_polars"], [23, 2, 1, "", "remove_triples_from_train_with_condition"], [23, 2, 1, "", "sequential_vocabulary_construction"], [23, 2, 1, "", "start"]], "dicee.read_preprocess_save_load_kg.ReadFromDisk": [[23, 2, 1, "", "add_noisy_triples_into_training"], [23, 2, 1, "", "start"]], "dicee.read_preprocess_save_load_kg.preprocess": [[24, 1, 1, "", "PreprocessKG"]], "dicee.read_preprocess_save_load_kg.preprocess.PreprocessKG": [[24, 2, 1, "", "preprocess_with_byte_pair_encoding"], [24, 2, 1, "", "preprocess_with_byte_pair_encoding_with_padding"], [24, 2, 1, "", "preprocess_with_pandas"], [24, 2, 1, "", "preprocess_with_polars"], [24, 2, 1, "", "remove_triples_from_train_with_condition"], [24, 2, 1, "", "sequential_vocabulary_construction"], [24, 2, 1, "", "start"]], "dicee.read_preprocess_save_load_kg.read_from_disk": [[25, 1, 1, "", "ReadFromDisk"]], "dicee.read_preprocess_save_load_kg.read_from_disk.ReadFromDisk": [[25, 2, 1, "", "add_noisy_triples_into_training"], [25, 2, 1, "", "start"]], "dicee.read_preprocess_save_load_kg.save_load_disk": [[26, 1, 1, "", "LoadSaveToDisk"]], "dicee.read_preprocess_save_load_kg.save_load_disk.LoadSaveToDisk": [[26, 2, 1, "", "load"], [26, 2, 1, "", "save"]], "dicee.read_preprocess_save_load_kg.util": [[27, 5, 1, "", "apply_reciprical_or_noise"], [27, 5, 1, "", "create_constraints"], [27, 5, 1, "", "create_recipriocal_triples"], [27, 5, 1, "", "dataset_sanity_checking"], [27, 5, 1, "", "get_ee_vocab"], [27, 5, 1, "", "get_er_vocab"], [27, 5, 1, "", "get_re_vocab"], [27, 5, 1, "", "index_triples_with_pandas"], [27, 5, 1, "", "load_numpy_ndarray"], [27, 5, 1, "", "load_pickle"], [27, 5, 1, "", "load_with_pandas"], [27, 5, 1, "", "read_from_disk"], [27, 5, 1, "", "read_from_triple_store"], [27, 5, 1, "", "read_with_pandas"], [27, 5, 1, "", "read_with_polars"], [27, 5, 1, "", "save_numpy_ndarray"], [27, 5, 1, "", "save_pickle"], [27, 5, 1, "", "timeit"]], "dicee.sanity_checkers": [[28, 5, 1, "", "is_sparql_endpoint_alive"], [28, 5, 1, "", "sanity_checking_with_arguments"], [28, 5, 1, "", "validate_knowledge_graph"]], "dicee.scripts": [[30, 0, 0, "-", "index"], [31, 0, 0, "-", "run"], [32, 0, 0, "-", "serve"]], "dicee.scripts.index": [[30, 5, 1, "", "get_default_arguments"], [30, 5, 1, "", "main"]], "dicee.scripts.run": [[31, 5, 1, "", "get_default_arguments"], [31, 5, 1, "", "main"]], "dicee.scripts.serve": [[32, 1, 1, "", "NeuralSearcher"], [32, 3, 1, "", "app"], [32, 5, 1, "", "get_default_arguments"], [32, 5, 1, "", "main"], [32, 3, 1, "", "neural_searcher"], [32, 5, 1, "", "retrieve_embeddings"], [32, 5, 1, "", "root"], [32, 5, 1, "", "search_embeddings"]], "dicee.scripts.serve.NeuralSearcher": [[32, 2, 1, "", "get"], [32, 2, 1, "", "search"]], "dicee.static_funcs": [[33, 5, 1, "", "add_noisy_triples"], [33, 5, 1, "", "continual_training_setup_executor"], [33, 5, 1, "", "create_experiment_folder"], [33, 5, 1, "", "create_recipriocal_triples"], [33, 5, 1, "", "deploy_head_entity_prediction"], [33, 5, 1, "", "deploy_relation_prediction"], [33, 5, 1, "", "deploy_tail_entity_prediction"], [33, 5, 1, "", "deploy_triple_prediction"], [33, 5, 1, "", "download_file"], [33, 5, 1, "", "download_files_from_url"], [33, 5, 1, "", "download_pretrained_model"], [33, 5, 1, "", "evaluate"], [33, 5, 1, "", "exponential_function"], [33, 5, 1, "", "get_ee_vocab"], [33, 5, 1, "", "get_er_vocab"], [33, 5, 1, "", "get_re_vocab"], [33, 5, 1, "", "intialize_model"], [33, 5, 1, "", "load_json"], [33, 5, 1, "", "load_model"], [33, 5, 1, "", "load_model_ensemble"], [33, 5, 1, "", "load_numpy"], [33, 5, 1, "", "load_pickle"], [33, 5, 1, "", "numpy_data_type_changer"], [33, 5, 1, "", "random_prediction"], [33, 5, 1, "", "read_or_load_kg"], [33, 5, 1, "", "save_checkpoint_model"], [33, 5, 1, "", "save_embeddings"], [33, 5, 1, "", "save_numpy_ndarray"], [33, 5, 1, "", "save_pickle"], [33, 5, 1, "", "select_model"], [33, 5, 1, "", "store"], [33, 5, 1, "", "timeit"], [33, 5, 1, "", "vocab_to_parquet"]], "dicee.static_funcs_training": [[34, 5, 1, "", "efficient_zero_grad"], [34, 5, 1, "", "evaluate_bpe_lp"], [34, 5, 1, "", "evaluate_lp"]], "dicee.static_preprocess_funcs": [[35, 5, 1, "", "create_constraints"], [35, 3, 1, "", "enable_log"], [35, 5, 1, "", "get_ee_vocab"], [35, 5, 1, "", "get_er_vocab"], [35, 5, 1, "", "get_re_vocab"], [35, 5, 1, "", "mapping_from_first_two_cols_to_third"], [35, 5, 1, "", "preprocesses_input_args"], [35, 5, 1, "", "timeit"]], "dicee.trainer": [[37, 1, 1, "", "DICE_Trainer"], [36, 0, 0, "-", "dice_trainer"], [38, 0, 0, "-", "torch_trainer"], [39, 0, 0, "-", "torch_trainer_ddp"]], "dicee.trainer.DICE_Trainer": [[37, 2, 1, "", "continual_start"], [37, 2, 1, "", "initialize_dataloader"], [37, 2, 1, "", "initialize_dataset"], [37, 2, 1, "", "initialize_or_load_model"], [37, 2, 1, "", "initialize_trainer"], [37, 2, 1, "", "k_fold_cross_validation"], [37, 2, 1, "", "start"]], "dicee.trainer.dice_trainer": [[36, 1, 1, "", "DICE_Trainer"], [36, 5, 1, "", "get_callbacks"], [36, 5, 1, "", "initialize_trainer"]], "dicee.trainer.dice_trainer.DICE_Trainer": [[36, 2, 1, "", "continual_start"], [36, 2, 1, "", "initialize_dataloader"], [36, 2, 1, "", "initialize_dataset"], [36, 2, 1, "", "initialize_or_load_model"], [36, 2, 1, "", "initialize_trainer"], [36, 2, 1, "", "k_fold_cross_validation"], [36, 2, 1, "", "start"]], "dicee.trainer.torch_trainer": [[38, 1, 1, "", "TorchTrainer"]], "dicee.trainer.torch_trainer.TorchTrainer": [[38, 2, 1, "", "extract_input_outputs_set_device"], [38, 2, 1, "", "fit"], [38, 2, 1, "", "forward_backward_update"]], "dicee.trainer.torch_trainer_ddp": [[39, 1, 1, "", "DDPTrainer"], [39, 1, 1, "", "NodeTrainer"], [39, 1, 1, "", "TorchDDPTrainer"], [39, 5, 1, "", "print_peak_memory"]], "dicee.trainer.torch_trainer_ddp.DDPTrainer": [[39, 2, 1, "", "extract_input_outputs"], [39, 2, 1, "", "train"]], "dicee.trainer.torch_trainer_ddp.NodeTrainer": [[39, 2, 1, "", "extract_input_outputs"], [39, 2, 1, "", "train"]], "dicee.trainer.torch_trainer_ddp.TorchDDPTrainer": [[39, 2, 1, "", "fit"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:data", "4": "py:property", "5": "py:function", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "data", "Python data"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"dice": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "abstract": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "class": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 32, 36, 37, 38, 39], "paramet": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 36, 37], "return": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 36, 37, 38, 39], "tupl": [0, 8, 10], "analyse_experi": 1, "function": [1, 2, 4, 5, 8, 15, 16, 18, 20, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39], "callback": 2, "config": 3, "dataset_class": 4, "eval_static_func": 5, "evalu": 6, "argument": 6, "execut": 7, "subpackag": 8, "submodul": [8, 15, 23, 29, 37], "packag": [8, 15, 23, 37], "attribut": [8, 32, 35], "knowledge_graph": 9, "knowledge_graph_embed": 10, "model": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "base_model": 11, "clifford": 12, "complex": 13, "function_spac": 14, "octonion": 16, "pykeen_model": 17, "quaternion": 18, "real": 19, "static_func": [20, 33], "transform": 21, "query_gener": 22, "read_preprocess_save_load_kg": [23, 24, 25, 26, 27], "preprocess": 24, "read_from_disk": 25, "save_load_disk": 26, "util": 27, "sanity_check": 28, "script": [29, 30, 31, 32], "index": 30, "run": 31, "serv": 32, "static_funcs_train": 34, "static_preprocess_func": 35, "trainer": [36, 37, 38, 39], "dice_train": 36, "torch_train": 38, "torch_trainer_ddp": 39, "welcom": 40, "embed": 40, "document": 40, "hardwar": 40, "agnost": 40, "framework": 40, "larg": 40, "scale": 40, "knowledg": 40, "graph": 40, "indic": 40, "tabl": 40}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"dicee.abstracts": [[0, "module-dicee.abstracts"]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [38, "module-contents"], [39, "module-contents"]], "Classes": [[0, "classes"], [1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [32, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"]], "Parameter": [[0, "parameter"], [0, "id1"], [0, "id2"], [0, "id4"], [0, "id6"], [0, "id8"], [0, "id10"], [0, "id14"], [0, "id16"], [0, "id18"], [0, "id19"], [0, "id21"], [0, "id23"], [0, "id24"], [0, "id26"], [0, "id28"], [0, "id30"], [0, "id32"], [0, "id34"], [0, "id36"], [0, "id37"], [0, "id39"], [2, "parameter"], [2, "id1"], [2, "id2"], [2, "id3"], [2, "id5"], [2, "id7"], [2, "id9"], [2, "id11"], [2, "id12"], [2, "id14"], [2, "id16"], [2, "id18"], [2, "id20"], [2, "id21"], [2, "id24"], [2, "id26"], [2, "id27"], [2, "id29"], [2, "id31"], [2, "id33"], [2, "id35"], [2, "id36"], [7, "parameter"], [7, "id1"], [7, "id3"], [7, "id5"], [7, "id6"], [7, "id8"], [8, "parameter"], [8, "id1"], [8, "id6"], [8, "id8"], [8, "id10"], [8, "id12"], [8, "id18"], [8, "id57"], [8, "id59"], [8, "id60"], [8, "id62"], [8, "id66"], [8, "id68"], [8, "id70"], [8, "id72"], [8, "id73"], [8, "id75"], [8, "id77"], [8, "id79"], [10, "parameter"], [10, "id1"], [10, "id3"], [10, "id5"], [10, "id7"], [10, "id9"], [12, "parameter"], [12, "id1"], [12, "id3"], [12, "id5"], [12, "id7"], [12, "id9"], [12, "id15"], [15, "parameter"], [15, "id144"], [15, "id146"], [15, "id148"], [15, "id150"], [15, "id152"], [15, "id158"], [23, "parameter"], [23, "id2"], [23, "id5"], [24, "parameter"], [24, "id2"], [25, "parameter"], [36, "parameter"], [37, "parameter"]], "Returns": [[0, "returns"], [0, "id3"], [0, "id5"], [0, "id7"], [0, "id9"], [0, "id11"], [0, "id13"], [0, "id15"], [0, "id17"], [0, "id20"], [0, "id22"], [0, "id25"], [0, "id27"], [0, "id29"], [0, "id31"], [0, "id33"], [0, "id35"], [0, "id38"], [0, "id40"], [2, "returns"], [2, "id4"], [2, "id6"], [2, "id8"], [2, "id10"], [2, "id13"], [2, "id15"], [2, "id17"], [2, "id19"], [2, "id22"], [2, "id23"], [2, "id25"], [2, "id28"], [2, "id30"], [2, "id32"], [2, "id34"], [2, "id37"], [4, "returns"], [4, "id2"], [4, "id4"], [5, "returns"], [5, "id2"], [6, "returns"], [7, "returns"], [7, "id7"], [7, "id9"], [8, "returns"], [8, "id2"], [8, "id3"], [8, "id5"], [8, "id7"], [8, "id9"], [8, "id11"], [8, "id13"], [8, "id19"], [8, "id21"], [8, "id23"], [8, "id25"], [8, "id27"], [8, "id29"], [8, "id31"], [8, "id33"], [8, "id35"], [8, "id37"], [8, "id38"], [8, "id40"], [8, "id42"], [8, "id44"], [8, "id46"], [8, "id49"], [8, "id51"], [8, "id53"], [8, "id55"], [8, "id56"], [8, "id58"], [8, "id65"], [8, "id71"], [8, "id78"], [8, "id80"], [8, "id83"], [8, "id85"], [8, "id87"], [10, "returns"], [10, "id10"], [11, "returns"], [11, "id6"], [11, "id9"], [11, "id11"], [11, "id13"], [11, "id15"], [11, "id16"], [12, "returns"], [12, "id2"], [12, "id4"], [12, "id6"], [12, "id8"], [12, "id10"], [12, "id16"], [13, "returns"], [13, "id2"], [13, "id4"], [14, "returns"], [14, "id2"], [14, "id4"], [14, "id6"], [14, "id8"], [15, "returns"], [15, "id6"], [15, "id9"], [15, "id11"], [15, "id13"], [15, "id15"], [15, "id16"], [15, "id19"], [15, "id25"], [15, "id28"], [15, "id35"], [15, "id38"], [15, "id40"], [15, "id42"], [15, "id43"], [15, "id45"], [15, "id49"], [15, "id55"], [15, "id58"], [15, "id65"], [15, "id68"], [15, "id70"], [15, "id72"], [15, "id74"], [15, "id76"], [15, "id80"], [15, "id86"], [15, "id89"], [15, "id96"], [15, "id99"], [15, "id101"], [15, "id105"], [15, "id107"], [15, "id109"], [15, "id111"], [15, "id115"], [15, "id121"], [15, "id124"], [15, "id131"], [15, "id134"], [15, "id136"], [15, "id140"], [15, "id142"], [15, "id143"], [15, "id145"], [15, "id147"], [15, "id149"], [15, "id151"], [15, "id153"], [15, "id159"], [15, "id163"], [15, "id169"], [15, "id172"], [15, "id179"], [15, "id182"], [15, "id184"], [15, "id188"], [15, "id194"], [15, "id197"], [15, "id204"], [15, "id207"], [15, "id209"], [15, "id211"], [15, "id213"], [15, "id215"], [15, "id217"], [15, "id219"], [16, "returns"], [16, "id2"], [18, "returns"], [18, "id2"], [18, "id4"], [18, "id6"], [19, "returns"], [19, "id1"], [19, "id3"], [21, "returns"], [21, "id2"], [23, "returns"], [23, "id1"], [23, "id3"], [23, "id4"], [23, "id6"], [24, "returns"], [24, "id1"], [24, "id3"], [24, "id4"], [25, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [38, "id1"], [38, "id2"], [39, "returns"], [39, "id1"]], "Parameters": [[0, "parameters"], [0, "id12"], [2, "parameters"], [4, "parameters"], [4, "id1"], [4, "id3"], [5, "parameters"], [5, "id1"], [6, "parameters"], [8, "parameters"], [8, "id4"], [8, "id20"], [8, "id22"], [8, "id24"], [8, "id26"], [8, "id28"], [8, "id30"], [8, "id32"], [8, "id34"], [8, "id36"], [8, "id39"], [8, "id41"], [8, "id43"], [8, "id45"], [8, "id47"], [8, "id48"], [8, "id50"], [8, "id52"], [8, "id54"], [8, "id64"], [8, "id82"], [8, "id84"], [8, "id86"], [10, "parameters"], [11, "parameters"], [11, "id5"], [11, "id7"], [11, "id8"], [11, "id10"], [11, "id12"], [11, "id14"], [13, "parameters"], [13, "id1"], [13, "id3"], [14, "parameters"], [14, "id1"], [14, "id3"], [14, "id5"], [14, "id7"], [15, "parameters"], [15, "id5"], [15, "id7"], [15, "id8"], [15, "id10"], [15, "id12"], [15, "id14"], [15, "id18"], [15, "id21"], [15, "id24"], [15, "id27"], [15, "id34"], [15, "id37"], [15, "id41"], [15, "id44"], [15, "id48"], [15, "id51"], [15, "id54"], [15, "id57"], [15, "id64"], [15, "id67"], [15, "id71"], [15, "id73"], [15, "id75"], [15, "id79"], [15, "id82"], [15, "id85"], [15, "id88"], [15, "id95"], [15, "id98"], [15, "id104"], [15, "id106"], [15, "id108"], [15, "id110"], [15, "id114"], [15, "id117"], [15, "id120"], [15, "id123"], [15, "id130"], [15, "id133"], [15, "id139"], [15, "id141"], [15, "id162"], [15, "id165"], [15, "id168"], [15, "id171"], [15, "id178"], [15, "id181"], [15, "id187"], [15, "id190"], [15, "id193"], [15, "id196"], [15, "id203"], [15, "id206"], [15, "id210"], [15, "id212"], [15, "id214"], [15, "id216"], [15, "id218"], [16, "parameters"], [16, "id1"], [18, "parameters"], [18, "id1"], [18, "id3"], [18, "id5"], [19, "parameters"], [19, "id2"], [21, "parameters"], [21, "id1"]], "Returns: Tuple": [[0, "returns-tuple"], [8, "returns-tuple"], [8, "id61"], [8, "id63"], [8, "id67"], [8, "id69"], [10, "returns-tuple"], [10, "id2"], [10, "id4"], [10, "id6"], [10, "id8"]], "dicee.analyse_experiments": [[1, "module-dicee.analyse_experiments"]], "Functions": [[1, "functions"], [2, "functions"], [4, "functions"], [5, "functions"], [8, "functions"], [15, "functions"], [16, "functions"], [18, "functions"], [20, "functions"], [27, "functions"], [28, "functions"], [30, "functions"], [31, "functions"], [32, "functions"], [33, "functions"], [34, "functions"], [35, "functions"], [36, "functions"], [39, "functions"]], "dicee.callbacks": [[2, "module-dicee.callbacks"]], "dicee.config": [[3, "module-dicee.config"]], "dicee.dataset_classes": [[4, "module-dicee.dataset_classes"]], "dicee.eval_static_funcs": [[5, "module-dicee.eval_static_funcs"]], "dicee.evaluator": [[6, "module-dicee.evaluator"]], "Arguments": [[6, "arguments"]], "Return": [[6, "return"], [7, "return"], [7, "id2"], [7, "id4"], [8, "return"], [8, "id74"], [8, "id76"]], "dicee.executer": [[7, "module-dicee.executer"]], "dicee": [[8, "module-dicee"]], "Subpackages": [[8, "subpackages"]], "Submodules": [[8, "submodules"], [15, "submodules"], [23, "submodules"], [29, "submodules"], [37, "submodules"]], "Package Contents": [[8, "package-contents"], [15, "package-contents"], [23, "package-contents"], [37, "package-contents"]], "Attributes": [[8, "attributes"], [32, "attributes"], [35, "attributes"]], "dicee.knowledge_graph": [[9, "module-dicee.knowledge_graph"]], "dicee.knowledge_graph_embeddings": [[10, "module-dicee.knowledge_graph_embeddings"]], "dicee.models.base_model": [[11, "module-dicee.models.base_model"]], "dicee.models.clifford": [[12, "module-dicee.models.clifford"]], "dicee.models.complex": [[13, "module-dicee.models.complex"]], "dicee.models.function_space": [[14, "module-dicee.models.function_space"]], "dicee.models": [[15, "module-dicee.models"]], "dicee.models.octonion": [[16, "module-dicee.models.octonion"]], "dicee.models.pykeen_models": [[17, "module-dicee.models.pykeen_models"]], "dicee.models.quaternion": [[18, "module-dicee.models.quaternion"]], "dicee.models.real": [[19, "module-dicee.models.real"]], "dicee.models.static_funcs": [[20, "module-dicee.models.static_funcs"]], "dicee.models.transformers": [[21, "module-dicee.models.transformers"]], "dicee.query_generator": [[22, "module-dicee.query_generator"]], "dicee.read_preprocess_save_load_kg": [[23, "module-dicee.read_preprocess_save_load_kg"]], "dicee.read_preprocess_save_load_kg.preprocess": [[24, "module-dicee.read_preprocess_save_load_kg.preprocess"]], "dicee.read_preprocess_save_load_kg.read_from_disk": [[25, "module-dicee.read_preprocess_save_load_kg.read_from_disk"]], "dicee.read_preprocess_save_load_kg.save_load_disk": [[26, "module-dicee.read_preprocess_save_load_kg.save_load_disk"]], "dicee.read_preprocess_save_load_kg.util": [[27, "module-dicee.read_preprocess_save_load_kg.util"]], "dicee.sanity_checkers": [[28, "module-dicee.sanity_checkers"]], "dicee.scripts": [[29, "module-dicee.scripts"]], "dicee.scripts.index": [[30, "module-dicee.scripts.index"]], "dicee.scripts.run": [[31, "module-dicee.scripts.run"]], "dicee.scripts.serve": [[32, "module-dicee.scripts.serve"]], "dicee.static_funcs": [[33, "module-dicee.static_funcs"]], "dicee.static_funcs_training": [[34, "module-dicee.static_funcs_training"]], "dicee.static_preprocess_funcs": [[35, "module-dicee.static_preprocess_funcs"]], "dicee.trainer.dice_trainer": [[36, "module-dicee.trainer.dice_trainer"]], "dicee.trainer": [[37, "module-dicee.trainer"]], "dicee.trainer.torch_trainer": [[38, "module-dicee.trainer.torch_trainer"]], "dicee.trainer.torch_trainer_ddp": [[39, "module-dicee.trainer.torch_trainer_ddp"]], "Welcome to DICE Embeddings documentation!": [[40, "welcome-to-dice-embeddings-documentation"]], "DICE Embeddings: Hardware-agnostic Framework for Large-scale Knowledge Graph Embeddings:": [[40, "dice-embeddings-hardware-agnostic-framework-for-large-scale-knowledge-graph-embeddings"]], "Contents:": [[40, null]], "Indices and tables": [[40, "indices-and-tables"]]}, "indexentries": {"abstractcallback (class in dicee.abstracts)": [[0, "dicee.abstracts.AbstractCallback"]], "abstractppecallback (class in dicee.abstracts)": [[0, "dicee.abstracts.AbstractPPECallback"]], "abstracttrainer (class in dicee.abstracts)": [[0, "dicee.abstracts.AbstractTrainer"]], "baseinteractivekge (class in dicee.abstracts)": [[0, "dicee.abstracts.BaseInteractiveKGE"]], "add_new_entity_embeddings() (dicee.abstracts.baseinteractivekge method)": [[0, "dicee.abstracts.BaseInteractiveKGE.add_new_entity_embeddings"]], "construct_input_and_output() (dicee.abstracts.baseinteractivekge method)": [[0, "dicee.abstracts.BaseInteractiveKGE.construct_input_and_output"]], "dicee.abstracts": [[0, "module-dicee.abstracts"]], "get_bpe_token_representation() (dicee.abstracts.baseinteractivekge method)": [[0, "dicee.abstracts.BaseInteractiveKGE.get_bpe_token_representation"]], "get_domain_of_relation() (dicee.abstracts.baseinteractivekge method)": [[0, "dicee.abstracts.BaseInteractiveKGE.get_domain_of_relation"]], "get_entity_embeddings() (dicee.abstracts.baseinteractivekge method)": [[0, "dicee.abstracts.BaseInteractiveKGE.get_entity_embeddings"]], "get_entity_index() (dicee.abstracts.baseinteractivekge method)": [[0, "dicee.abstracts.BaseInteractiveKGE.get_entity_index"]], "get_eval_report() (dicee.abstracts.baseinteractivekge method)": [[0, "dicee.abstracts.BaseInteractiveKGE.get_eval_report"]], "get_padded_bpe_triple_representation() (dicee.abstracts.baseinteractivekge method)": [[0, "dicee.abstracts.BaseInteractiveKGE.get_padded_bpe_triple_representation"]], "get_range_of_relation() (dicee.abstracts.baseinteractivekge method)": [[0, "dicee.abstracts.BaseInteractiveKGE.get_range_of_relation"]], "get_relation_embeddings() (dicee.abstracts.baseinteractivekge method)": [[0, "dicee.abstracts.BaseInteractiveKGE.get_relation_embeddings"]], "get_relation_index() (dicee.abstracts.baseinteractivekge method)": [[0, "dicee.abstracts.BaseInteractiveKGE.get_relation_index"]], "index_triple() (dicee.abstracts.baseinteractivekge method)": [[0, "dicee.abstracts.BaseInteractiveKGE.index_triple"]], "is_seen() (dicee.abstracts.baseinteractivekge method)": [[0, "dicee.abstracts.BaseInteractiveKGE.is_seen"]], "module": [[0, "module-dicee.abstracts"], [1, "module-dicee.analyse_experiments"], [2, "module-dicee.callbacks"], [3, "module-dicee.config"], [4, "module-dicee.dataset_classes"], [5, "module-dicee.eval_static_funcs"], [6, "module-dicee.evaluator"], [7, "module-dicee.executer"], [8, "module-dicee"], [9, "module-dicee.knowledge_graph"], [10, "module-dicee.knowledge_graph_embeddings"], [11, "module-dicee.models.base_model"], [12, "module-dicee.models.clifford"], [13, "module-dicee.models.complex"], [14, "module-dicee.models.function_space"], [15, "module-dicee.models"], [16, "module-dicee.models.octonion"], [17, "module-dicee.models.pykeen_models"], [18, "module-dicee.models.quaternion"], [19, "module-dicee.models.real"], [20, "module-dicee.models.static_funcs"], [21, "module-dicee.models.transformers"], [22, "module-dicee.query_generator"], [23, "module-dicee.read_preprocess_save_load_kg"], [24, "module-dicee.read_preprocess_save_load_kg.preprocess"], [25, "module-dicee.read_preprocess_save_load_kg.read_from_disk"], [26, "module-dicee.read_preprocess_save_load_kg.save_load_disk"], [27, "module-dicee.read_preprocess_save_load_kg.util"], [28, "module-dicee.sanity_checkers"], [29, "module-dicee.scripts"], [30, "module-dicee.scripts.index"], [31, "module-dicee.scripts.run"], [32, "module-dicee.scripts.serve"], [33, "module-dicee.static_funcs"], [34, "module-dicee.static_funcs_training"], [35, "module-dicee.static_preprocess_funcs"], [36, "module-dicee.trainer.dice_trainer"], [37, "module-dicee.trainer"], [38, "module-dicee.trainer.torch_trainer"], [39, "module-dicee.trainer.torch_trainer_ddp"]], "name (dicee.abstracts.baseinteractivekge property)": [[0, "dicee.abstracts.BaseInteractiveKGE.name"]], "on_fit_end() (dicee.abstracts.abstractcallback method)": [[0, "dicee.abstracts.AbstractCallback.on_fit_end"]], "on_fit_end() (dicee.abstracts.abstractppecallback method)": [[0, "dicee.abstracts.AbstractPPECallback.on_fit_end"]], "on_fit_end() (dicee.abstracts.abstracttrainer method)": [[0, "dicee.abstracts.AbstractTrainer.on_fit_end"]], "on_fit_start() (dicee.abstracts.abstractcallback method)": [[0, "dicee.abstracts.AbstractCallback.on_fit_start"]], "on_fit_start() (dicee.abstracts.abstractppecallback method)": [[0, "dicee.abstracts.AbstractPPECallback.on_fit_start"]], "on_fit_start() (dicee.abstracts.abstracttrainer method)": [[0, "dicee.abstracts.AbstractTrainer.on_fit_start"]], "on_init_end() (dicee.abstracts.abstractcallback method)": [[0, "dicee.abstracts.AbstractCallback.on_init_end"]], "on_init_start() (dicee.abstracts.abstractcallback method)": [[0, "dicee.abstracts.AbstractCallback.on_init_start"]], "on_train_batch_end() (dicee.abstracts.abstractcallback method)": [[0, "dicee.abstracts.AbstractCallback.on_train_batch_end"]], "on_train_batch_end() (dicee.abstracts.abstracttrainer method)": [[0, "dicee.abstracts.AbstractTrainer.on_train_batch_end"]], "on_train_epoch_end() (dicee.abstracts.abstractcallback method)": [[0, "dicee.abstracts.AbstractCallback.on_train_epoch_end"]], "on_train_epoch_end() (dicee.abstracts.abstracttrainer method)": [[0, "dicee.abstracts.AbstractTrainer.on_train_epoch_end"]], "parameters() (dicee.abstracts.baseinteractivekge method)": [[0, "dicee.abstracts.BaseInteractiveKGE.parameters"]], "sample_entity() (dicee.abstracts.baseinteractivekge method)": [[0, "dicee.abstracts.BaseInteractiveKGE.sample_entity"]], "sample_relation() (dicee.abstracts.baseinteractivekge method)": [[0, "dicee.abstracts.BaseInteractiveKGE.sample_relation"]], "save() (dicee.abstracts.baseinteractivekge method)": [[0, "dicee.abstracts.BaseInteractiveKGE.save"]], "save_checkpoint() (dicee.abstracts.abstracttrainer static method)": [[0, "dicee.abstracts.AbstractTrainer.save_checkpoint"]], "set_model_eval_mode() (dicee.abstracts.baseinteractivekge method)": [[0, "dicee.abstracts.BaseInteractiveKGE.set_model_eval_mode"]], "set_model_train_mode() (dicee.abstracts.baseinteractivekge method)": [[0, "dicee.abstracts.BaseInteractiveKGE.set_model_train_mode"]], "store_ensemble() (dicee.abstracts.abstractppecallback method)": [[0, "dicee.abstracts.AbstractPPECallback.store_ensemble"]], "experiment (class in dicee.analyse_experiments)": [[1, "dicee.analyse_experiments.Experiment"]], "analyse() (in module dicee.analyse_experiments)": [[1, "dicee.analyse_experiments.analyse"]], "dicee.analyse_experiments": [[1, "module-dicee.analyse_experiments"]], "get_default_arguments() (in module dicee.analyse_experiments)": [[1, "dicee.analyse_experiments.get_default_arguments"]], "save_experiment() (dicee.analyse_experiments.experiment method)": [[1, "dicee.analyse_experiments.Experiment.save_experiment"]], "to_df() (dicee.analyse_experiments.experiment method)": [[1, "dicee.analyse_experiments.Experiment.to_df"]], "aswa (class in dicee.callbacks)": [[2, "dicee.callbacks.ASWA"]], "accumulateepochlosscallback (class in dicee.callbacks)": [[2, "dicee.callbacks.AccumulateEpochLossCallback"]], "eval (class in dicee.callbacks)": [[2, "dicee.callbacks.Eval"]], "kgesavecallback (class in dicee.callbacks)": [[2, "dicee.callbacks.KGESaveCallback"]], "krone (class in dicee.callbacks)": [[2, "dicee.callbacks.KronE"]], "perturb (class in dicee.callbacks)": [[2, "dicee.callbacks.Perturb"]], "printcallback (class in dicee.callbacks)": [[2, "dicee.callbacks.PrintCallback"]], "pseudolabellingcallback (class in dicee.callbacks)": [[2, "dicee.callbacks.PseudoLabellingCallback"]], "batch_kronecker_product() (dicee.callbacks.krone static method)": [[2, "dicee.callbacks.KronE.batch_kronecker_product"]], "compute_convergence() (in module dicee.callbacks)": [[2, "dicee.callbacks.compute_convergence"]], "compute_mrr() (dicee.callbacks.aswa static method)": [[2, "dicee.callbacks.ASWA.compute_mrr"]], "create_random_data() (dicee.callbacks.pseudolabellingcallback method)": [[2, "dicee.callbacks.PseudoLabellingCallback.create_random_data"]], "decide() (dicee.callbacks.aswa method)": [[2, "dicee.callbacks.ASWA.decide"]], "dicee.callbacks": [[2, "module-dicee.callbacks"]], "estimate_q() (in module dicee.callbacks)": [[2, "dicee.callbacks.estimate_q"]], "get_aswa_state_dict() (dicee.callbacks.aswa method)": [[2, "dicee.callbacks.ASWA.get_aswa_state_dict"]], "get_kronecker_triple_representation() (dicee.callbacks.krone method)": [[2, "dicee.callbacks.KronE.get_kronecker_triple_representation"]], "on_epoch_end() (dicee.callbacks.kgesavecallback method)": [[2, "dicee.callbacks.KGESaveCallback.on_epoch_end"]], "on_epoch_end() (dicee.callbacks.pseudolabellingcallback method)": [[2, "dicee.callbacks.PseudoLabellingCallback.on_epoch_end"]], "on_fit_end() (dicee.callbacks.aswa method)": [[2, "dicee.callbacks.ASWA.on_fit_end"]], "on_fit_end() (dicee.callbacks.accumulateepochlosscallback method)": [[2, "dicee.callbacks.AccumulateEpochLossCallback.on_fit_end"]], "on_fit_end() (dicee.callbacks.eval method)": [[2, "dicee.callbacks.Eval.on_fit_end"]], "on_fit_end() (dicee.callbacks.kgesavecallback method)": [[2, "dicee.callbacks.KGESaveCallback.on_fit_end"]], "on_fit_end() (dicee.callbacks.printcallback method)": [[2, "dicee.callbacks.PrintCallback.on_fit_end"]], "on_fit_start() (dicee.callbacks.eval method)": [[2, "dicee.callbacks.Eval.on_fit_start"]], "on_fit_start() (dicee.callbacks.kgesavecallback method)": [[2, "dicee.callbacks.KGESaveCallback.on_fit_start"]], "on_fit_start() (dicee.callbacks.krone method)": [[2, "dicee.callbacks.KronE.on_fit_start"]], "on_fit_start() (dicee.callbacks.printcallback method)": [[2, "dicee.callbacks.PrintCallback.on_fit_start"]], "on_train_batch_end() (dicee.callbacks.eval method)": [[2, "dicee.callbacks.Eval.on_train_batch_end"]], "on_train_batch_end() (dicee.callbacks.kgesavecallback method)": [[2, "dicee.callbacks.KGESaveCallback.on_train_batch_end"]], "on_train_batch_end() (dicee.callbacks.printcallback method)": [[2, "dicee.callbacks.PrintCallback.on_train_batch_end"]], "on_train_batch_start() (dicee.callbacks.perturb method)": [[2, "dicee.callbacks.Perturb.on_train_batch_start"]], "on_train_epoch_end() (dicee.callbacks.aswa method)": [[2, "dicee.callbacks.ASWA.on_train_epoch_end"]], "on_train_epoch_end() (dicee.callbacks.eval method)": [[2, "dicee.callbacks.Eval.on_train_epoch_end"]], "on_train_epoch_end() (dicee.callbacks.kgesavecallback method)": [[2, "dicee.callbacks.KGESaveCallback.on_train_epoch_end"]], "on_train_epoch_end() (dicee.callbacks.printcallback method)": [[2, "dicee.callbacks.PrintCallback.on_train_epoch_end"]], "namespace (class in dicee.config)": [[3, "dicee.config.Namespace"]], "__iter__() (dicee.config.namespace method)": [[3, "dicee.config.Namespace.__iter__"]], "adaptive_swa (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.adaptive_swa"]], "add_noise_rate (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.add_noise_rate"]], "backend (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.backend"]], "batch_size (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.batch_size"]], "block_size (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.block_size"]], "byte_pair_encoding (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.byte_pair_encoding"]], "callbacks (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.callbacks"]], "dataset_dir (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.dataset_dir"]], "dicee.config": [[3, "module-dicee.config"]], "embedding_dim (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.embedding_dim"]], "eval_model (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.eval_model"]], "feature_map_dropout_rate (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.feature_map_dropout_rate"]], "gpus (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.gpus"]], "gradient_accumulation_steps (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.gradient_accumulation_steps"]], "hidden_dropout_rate (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.hidden_dropout_rate"]], "init_param (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.init_param"]], "input_dropout_rate (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.input_dropout_rate"]], "kernel_size (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.kernel_size"]], "lr (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.lr"]], "model (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.model"]], "neg_ratio (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.neg_ratio"]], "normalization (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.normalization"]], "num_core (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.num_core"]], "num_epochs (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.num_epochs"]], "num_folds_for_cv (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.num_folds_for_cv"]], "num_of_output_channels (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.num_of_output_channels"]], "optim (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.optim"]], "p (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.p"]], "path_single_kg (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.path_single_kg"]], "path_to_store_single_run (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.path_to_store_single_run"]], "pykeen_model_kwargs (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.pykeen_model_kwargs"]], "q (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.q"]], "random_seed (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.random_seed"]], "read_only_few (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.read_only_few"]], "sample_triples_ratio (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.sample_triples_ratio"]], "save_embeddings_as_csv (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.save_embeddings_as_csv"]], "save_model_at_every_epoch (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.save_model_at_every_epoch"]], "scoring_technique (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.scoring_technique"]], "sparql_endpoint (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.sparql_endpoint"]], "storage_path (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.storage_path"]], "swa (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.swa"]], "trainer (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.trainer"]], "weight_decay (dicee.config.namespace attribute)": [[3, "dicee.config.Namespace.weight_decay"]], "allvsall (class in dicee.dataset_classes)": [[4, "dicee.dataset_classes.AllvsAll"]], "bpe_negativesamplingdataset (class in dicee.dataset_classes)": [[4, "dicee.dataset_classes.BPE_NegativeSamplingDataset"]], "cvdatamodule (class in dicee.dataset_classes)": [[4, "dicee.dataset_classes.CVDataModule"]], "kvsall (class in dicee.dataset_classes)": [[4, "dicee.dataset_classes.KvsAll"]], "kvssampledataset (class in dicee.dataset_classes)": [[4, "dicee.dataset_classes.KvsSampleDataset"]], "multiclassclassificationdataset (class in dicee.dataset_classes)": [[4, "dicee.dataset_classes.MultiClassClassificationDataset"]], "multilabeldataset (class in dicee.dataset_classes)": [[4, "dicee.dataset_classes.MultiLabelDataset"]], "negsampledataset (class in dicee.dataset_classes)": [[4, "dicee.dataset_classes.NegSampleDataset"]], "onevsalldataset (class in dicee.dataset_classes)": [[4, "dicee.dataset_classes.OnevsAllDataset"]], "triplepredictiondataset (class in dicee.dataset_classes)": [[4, "dicee.dataset_classes.TriplePredictionDataset"]], "__getitem__() (dicee.dataset_classes.allvsall method)": [[4, "dicee.dataset_classes.AllvsAll.__getitem__"]], "__getitem__() (dicee.dataset_classes.bpe_negativesamplingdataset method)": [[4, "dicee.dataset_classes.BPE_NegativeSamplingDataset.__getitem__"]], "__getitem__() (dicee.dataset_classes.kvsall method)": [[4, "dicee.dataset_classes.KvsAll.__getitem__"]], "__getitem__() (dicee.dataset_classes.kvssampledataset method)": [[4, "dicee.dataset_classes.KvsSampleDataset.__getitem__"]], "__getitem__() (dicee.dataset_classes.multiclassclassificationdataset method)": [[4, "dicee.dataset_classes.MultiClassClassificationDataset.__getitem__"]], "__getitem__() (dicee.dataset_classes.multilabeldataset method)": [[4, "dicee.dataset_classes.MultiLabelDataset.__getitem__"]], "__getitem__() (dicee.dataset_classes.negsampledataset method)": [[4, "dicee.dataset_classes.NegSampleDataset.__getitem__"]], "__getitem__() (dicee.dataset_classes.onevsalldataset method)": [[4, "dicee.dataset_classes.OnevsAllDataset.__getitem__"]], "__getitem__() (dicee.dataset_classes.triplepredictiondataset method)": [[4, "dicee.dataset_classes.TriplePredictionDataset.__getitem__"]], "__len__() (dicee.dataset_classes.allvsall method)": [[4, "dicee.dataset_classes.AllvsAll.__len__"]], "__len__() (dicee.dataset_classes.bpe_negativesamplingdataset method)": [[4, "dicee.dataset_classes.BPE_NegativeSamplingDataset.__len__"]], "__len__() (dicee.dataset_classes.kvsall method)": [[4, "dicee.dataset_classes.KvsAll.__len__"]], "__len__() (dicee.dataset_classes.kvssampledataset method)": [[4, "dicee.dataset_classes.KvsSampleDataset.__len__"]], "__len__() (dicee.dataset_classes.multiclassclassificationdataset method)": [[4, "dicee.dataset_classes.MultiClassClassificationDataset.__len__"]], "__len__() (dicee.dataset_classes.multilabeldataset method)": [[4, "dicee.dataset_classes.MultiLabelDataset.__len__"]], "__len__() (dicee.dataset_classes.negsampledataset method)": [[4, "dicee.dataset_classes.NegSampleDataset.__len__"]], "__len__() (dicee.dataset_classes.onevsalldataset method)": [[4, "dicee.dataset_classes.OnevsAllDataset.__len__"]], "__len__() (dicee.dataset_classes.triplepredictiondataset method)": [[4, "dicee.dataset_classes.TriplePredictionDataset.__len__"]], "collate_fn() (dicee.dataset_classes.bpe_negativesamplingdataset method)": [[4, "dicee.dataset_classes.BPE_NegativeSamplingDataset.collate_fn"]], "collate_fn() (dicee.dataset_classes.triplepredictiondataset method)": [[4, "dicee.dataset_classes.TriplePredictionDataset.collate_fn"]], "construct_dataset() (in module dicee.dataset_classes)": [[4, "dicee.dataset_classes.construct_dataset"]], "dicee.dataset_classes": [[4, "module-dicee.dataset_classes"]], "prepare_data() (dicee.dataset_classes.cvdatamodule method)": [[4, "dicee.dataset_classes.CVDataModule.prepare_data"]], "reload_dataset() (in module dicee.dataset_classes)": [[4, "dicee.dataset_classes.reload_dataset"]], "setup() (dicee.dataset_classes.cvdatamodule method)": [[4, "dicee.dataset_classes.CVDataModule.setup"]], "train_dataloader() (dicee.dataset_classes.cvdatamodule method)": [[4, "dicee.dataset_classes.CVDataModule.train_dataloader"]], "transfer_batch_to_device() (dicee.dataset_classes.cvdatamodule method)": [[4, "dicee.dataset_classes.CVDataModule.transfer_batch_to_device"]], "dicee.eval_static_funcs": [[5, "module-dicee.eval_static_funcs"]], "evaluate_link_prediction_performance() (in module dicee.eval_static_funcs)": [[5, "dicee.eval_static_funcs.evaluate_link_prediction_performance"]], "evaluate_link_prediction_performance_with_bpe() (in module dicee.eval_static_funcs)": [[5, "dicee.eval_static_funcs.evaluate_link_prediction_performance_with_bpe"]], "evaluate_link_prediction_performance_with_bpe_reciprocals() (in module dicee.eval_static_funcs)": [[5, "dicee.eval_static_funcs.evaluate_link_prediction_performance_with_bpe_reciprocals"]], "evaluate_link_prediction_performance_with_reciprocals() (in module dicee.eval_static_funcs)": [[5, "dicee.eval_static_funcs.evaluate_link_prediction_performance_with_reciprocals"]], "evaluate_lp_bpe_k_vs_all() (in module dicee.eval_static_funcs)": [[5, "dicee.eval_static_funcs.evaluate_lp_bpe_k_vs_all"]], "evaluator (class in dicee.evaluator)": [[6, "dicee.evaluator.Evaluator"]], "dicee.evaluator": [[6, "module-dicee.evaluator"]], "dummy_eval() (dicee.evaluator.evaluator method)": [[6, "dicee.evaluator.Evaluator.dummy_eval"]], "eval() (dicee.evaluator.evaluator method)": [[6, "dicee.evaluator.Evaluator.eval"]], "eval_rank_of_head_and_tail_byte_pair_encoded_entity() (dicee.evaluator.evaluator method)": [[6, "dicee.evaluator.Evaluator.eval_rank_of_head_and_tail_byte_pair_encoded_entity"]], "eval_rank_of_head_and_tail_entity() (dicee.evaluator.evaluator method)": [[6, "dicee.evaluator.Evaluator.eval_rank_of_head_and_tail_entity"]], "eval_with_bpe_vs_all() (dicee.evaluator.evaluator method)": [[6, "dicee.evaluator.Evaluator.eval_with_bpe_vs_all"]], "eval_with_byte() (dicee.evaluator.evaluator method)": [[6, "dicee.evaluator.Evaluator.eval_with_byte"]], "eval_with_data() (dicee.evaluator.evaluator method)": [[6, "dicee.evaluator.Evaluator.eval_with_data"]], "eval_with_vs_all() (dicee.evaluator.evaluator method)": [[6, "dicee.evaluator.Evaluator.eval_with_vs_all"]], "evaluate_lp() (dicee.evaluator.evaluator method)": [[6, "dicee.evaluator.Evaluator.evaluate_lp"]], "evaluate_lp_bpe_k_vs_all() (dicee.evaluator.evaluator method)": [[6, "dicee.evaluator.Evaluator.evaluate_lp_bpe_k_vs_all"]], "evaluate_lp_k_vs_all() (dicee.evaluator.evaluator method)": [[6, "dicee.evaluator.Evaluator.evaluate_lp_k_vs_all"]], "evaluate_lp_with_byte() (dicee.evaluator.evaluator method)": [[6, "dicee.evaluator.Evaluator.evaluate_lp_with_byte"]], "vocab_preparation() (dicee.evaluator.evaluator method)": [[6, "dicee.evaluator.Evaluator.vocab_preparation"]], "continuousexecute (class in dicee.executer)": [[7, "dicee.executer.ContinuousExecute"]], "execute (class in dicee.executer)": [[7, "dicee.executer.Execute"]], "continual_start() (dicee.executer.continuousexecute method)": [[7, "dicee.executer.ContinuousExecute.continual_start"]], "dicee.executer": [[7, "module-dicee.executer"]], "end() (dicee.executer.execute method)": [[7, "dicee.executer.Execute.end"]], "load_indexed_data() (dicee.executer.execute method)": [[7, "dicee.executer.Execute.load_indexed_data"]], "read_or_load_kg() (dicee.executer.execute method)": [[7, "dicee.executer.Execute.read_or_load_kg"]], "read_preprocess_index_serialize_data() (dicee.executer.execute method)": [[7, "dicee.executer.Execute.read_preprocess_index_serialize_data"]], "save_trained_model() (dicee.executer.execute method)": [[7, "dicee.executer.Execute.save_trained_model"]], "start() (dicee.executer.execute method)": [[7, "dicee.executer.Execute.start"]], "write_report() (dicee.executer.execute method)": [[7, "dicee.executer.Execute.write_report"]], "aconex (class in dicee)": [[8, "dicee.AConEx"]], "aconvo (class in dicee)": [[8, "dicee.AConvO"]], "aconvq (class in dicee)": [[8, "dicee.AConvQ"]], "allvsall (class in dicee)": [[8, "dicee.AllvsAll"]], "bpe_negativesamplingdataset (class in dicee)": [[8, "dicee.BPE_NegativeSamplingDataset"]], "basekge (class in dicee)": [[8, "dicee.BaseKGE"]], "byte (class in dicee)": [[8, "dicee.BytE"]], "cmult (class in dicee)": [[8, "dicee.CMult"]], "cvdatamodule (class in dicee)": [[8, "dicee.CVDataModule"]], "complex (class in dicee)": [[8, "dicee.ComplEx"]], "conex (class in dicee)": [[8, "dicee.ConEx"]], "convo (class in dicee)": [[8, "dicee.ConvO"]], "convq (class in dicee)": [[8, "dicee.ConvQ"]], "dice_trainer (class in dicee)": [[8, "dicee.DICE_Trainer"]], "decal (class in dicee)": [[8, "dicee.DeCaL"]], "distmult (class in dicee)": [[8, "dicee.DistMult"]], "execute (class in dicee)": [[8, "dicee.Execute"]], "kge (class in dicee)": [[8, "dicee.KGE"]], "keci (class in dicee)": [[8, "dicee.Keci"]], "kecibase (class in dicee)": [[8, "dicee.KeciBase"]], "kvsall (class in dicee)": [[8, "dicee.KvsAll"]], "kvssampledataset (class in dicee)": [[8, "dicee.KvsSampleDataset"]], "lfmult (class in dicee)": [[8, "dicee.LFMult"]], "multiclassclassificationdataset (class in dicee)": [[8, "dicee.MultiClassClassificationDataset"]], "multilabeldataset (class in dicee)": [[8, "dicee.MultiLabelDataset"]], "negsampledataset (class in dicee)": [[8, "dicee.NegSampleDataset"]], "omult (class in dicee)": [[8, "dicee.OMult"]], "onevsalldataset (class in dicee)": [[8, "dicee.OnevsAllDataset"]], "pyke (class in dicee)": [[8, "dicee.Pyke"]], "pykeenkge (class in dicee)": [[8, "dicee.PykeenKGE"]], "qmult (class in dicee)": [[8, "dicee.QMult"]], "querygenerator (class in dicee)": [[8, "dicee.QueryGenerator"]], "shallom (class in dicee)": [[8, "dicee.Shallom"]], "transe (class in dicee)": [[8, "dicee.TransE"]], "triplepredictiondataset (class in dicee)": [[8, "dicee.TriplePredictionDataset"]], "__getitem__() (dicee.allvsall method)": [[8, "dicee.AllvsAll.__getitem__"]], "__getitem__() (dicee.bpe_negativesamplingdataset method)": [[8, "dicee.BPE_NegativeSamplingDataset.__getitem__"]], "__getitem__() (dicee.kvsall method)": [[8, "dicee.KvsAll.__getitem__"]], "__getitem__() (dicee.kvssampledataset method)": [[8, "dicee.KvsSampleDataset.__getitem__"]], "__getitem__() (dicee.multiclassclassificationdataset method)": [[8, "dicee.MultiClassClassificationDataset.__getitem__"]], "__getitem__() (dicee.multilabeldataset method)": [[8, "dicee.MultiLabelDataset.__getitem__"]], "__getitem__() (dicee.negsampledataset method)": [[8, "dicee.NegSampleDataset.__getitem__"]], "__getitem__() (dicee.onevsalldataset method)": [[8, "dicee.OnevsAllDataset.__getitem__"]], "__getitem__() (dicee.triplepredictiondataset method)": [[8, "dicee.TriplePredictionDataset.__getitem__"]], "__len__() (dicee.allvsall method)": [[8, "dicee.AllvsAll.__len__"]], "__len__() (dicee.bpe_negativesamplingdataset method)": [[8, "dicee.BPE_NegativeSamplingDataset.__len__"]], "__len__() (dicee.kvsall method)": [[8, "dicee.KvsAll.__len__"]], "__len__() (dicee.kvssampledataset method)": [[8, "dicee.KvsSampleDataset.__len__"]], "__len__() (dicee.multiclassclassificationdataset method)": [[8, "dicee.MultiClassClassificationDataset.__len__"]], "__len__() (dicee.multilabeldataset method)": [[8, "dicee.MultiLabelDataset.__len__"]], "__len__() (dicee.negsampledataset method)": [[8, "dicee.NegSampleDataset.__len__"]], "__len__() (dicee.onevsalldataset method)": [[8, "dicee.OnevsAllDataset.__len__"]], "__len__() (dicee.triplepredictiondataset method)": [[8, "dicee.TriplePredictionDataset.__len__"]], "__str__() (dicee.kge method)": [[8, "dicee.KGE.__str__"]], "__version__ (in module dicee)": [[8, "dicee.__version__"]], "achieve_answer() (dicee.querygenerator method)": [[8, "dicee.QueryGenerator.achieve_answer"]], "add_noisy_triples() (in module dicee)": [[8, "dicee.add_noisy_triples"]], "answer_multi_hop_query() (dicee.kge method)": [[8, "dicee.KGE.answer_multi_hop_query"]], "apply_coefficients() (dicee.decal method)": [[8, "dicee.DeCaL.apply_coefficients"]], "apply_coefficients() (dicee.keci method)": [[8, "dicee.Keci.apply_coefficients"]], "cl_pqr() (dicee.decal method)": [[8, "dicee.DeCaL.cl_pqr"]], "clifford_mul() (dicee.cmult method)": [[8, "dicee.CMult.clifford_mul"]], "clifford_multiplication() (dicee.keci method)": [[8, "dicee.Keci.clifford_multiplication"]], "collate_fn() (dicee.bpe_negativesamplingdataset method)": [[8, "dicee.BPE_NegativeSamplingDataset.collate_fn"]], "collate_fn() (dicee.triplepredictiondataset method)": [[8, "dicee.TriplePredictionDataset.collate_fn"]], "comp_func() (dicee.lfmult method)": [[8, "dicee.LFMult.comp_func"]], "compute_sigma_pp() (dicee.decal method)": [[8, "dicee.DeCaL.compute_sigma_pp"]], "compute_sigma_pp() (dicee.keci method)": [[8, "dicee.Keci.compute_sigma_pp"]], "compute_sigma_pq() (dicee.decal method)": [[8, "dicee.DeCaL.compute_sigma_pq"]], "compute_sigma_pq() (dicee.keci method)": [[8, "dicee.Keci.compute_sigma_pq"]], "compute_sigma_pr() (dicee.decal method)": [[8, "dicee.DeCaL.compute_sigma_pr"]], "compute_sigma_qq() (dicee.decal method)": [[8, "dicee.DeCaL.compute_sigma_qq"]], "compute_sigma_qq() (dicee.keci method)": [[8, "dicee.Keci.compute_sigma_qq"]], "compute_sigma_qr() (dicee.decal method)": [[8, "dicee.DeCaL.compute_sigma_qr"]], "compute_sigma_rr() (dicee.decal method)": [[8, "dicee.DeCaL.compute_sigma_rr"]], "compute_sigmas_multivect() (dicee.decal method)": [[8, "dicee.DeCaL.compute_sigmas_multivect"]], "compute_sigmas_single() (dicee.decal method)": [[8, "dicee.DeCaL.compute_sigmas_single"]], "construct_cl_multivector() (dicee.decal method)": [[8, "dicee.DeCaL.construct_cl_multivector"]], "construct_cl_multivector() (dicee.keci method)": [[8, "dicee.Keci.construct_cl_multivector"]], "construct_dataset() (in module dicee)": [[8, "dicee.construct_dataset"]], "construct_graph() (dicee.querygenerator method)": [[8, "dicee.QueryGenerator.construct_graph"]], "construct_multi_coeff() (dicee.lfmult method)": [[8, "dicee.LFMult.construct_multi_coeff"]], "continual_start() (dicee.dice_trainer method)": [[8, "dicee.DICE_Trainer.continual_start"]], "continual_training_setup_executor() (in module dicee)": [[8, "dicee.continual_training_setup_executor"]], "create_experiment_folder() (in module dicee)": [[8, "dicee.create_experiment_folder"]], "create_recipriocal_triples() (in module dicee)": [[8, "dicee.create_recipriocal_triples"]], "create_vector_database() (dicee.kge method)": [[8, "dicee.KGE.create_vector_database"]], "deploy() (dicee.kge method)": [[8, "dicee.KGE.deploy"]], "deploy_head_entity_prediction() (in module dicee)": [[8, "dicee.deploy_head_entity_prediction"]], "deploy_relation_prediction() (in module dicee)": [[8, "dicee.deploy_relation_prediction"]], "deploy_tail_entity_prediction() (in module dicee)": [[8, "dicee.deploy_tail_entity_prediction"]], "deploy_triple_prediction() (in module dicee)": [[8, "dicee.deploy_triple_prediction"]], "dicee": [[8, "module-dicee"]], "download_file() (in module dicee)": [[8, "dicee.download_file"]], "download_files_from_url() (in module dicee)": [[8, "dicee.download_files_from_url"]], "download_pretrained_model() (in module dicee)": [[8, "dicee.download_pretrained_model"]], "end() (dicee.execute method)": [[8, "dicee.Execute.end"]], "eval_lp_performance() (dicee.kge method)": [[8, "dicee.KGE.eval_lp_performance"]], "evaluate() (in module dicee)": [[8, "dicee.evaluate"]], "exponential_function() (in module dicee)": [[8, "dicee.exponential_function"]], "fill_query() (dicee.querygenerator method)": [[8, "dicee.QueryGenerator.fill_query"]], "find_missing_triples() (dicee.kge method)": [[8, "dicee.KGE.find_missing_triples"]], "forward() (dicee.basekge method)": [[8, "dicee.BaseKGE.forward"]], "forward() (dicee.byte method)": [[8, "dicee.BytE.forward"]], "forward_byte_pair_encoded_k_vs_all() (dicee.basekge method)": [[8, "dicee.BaseKGE.forward_byte_pair_encoded_k_vs_all"]], "forward_byte_pair_encoded_triple() (dicee.basekge method)": [[8, "dicee.BaseKGE.forward_byte_pair_encoded_triple"]], "forward_k_vs_all() (dicee.aconex method)": [[8, "dicee.AConEx.forward_k_vs_all"]], "forward_k_vs_all() (dicee.aconvo method)": [[8, "dicee.AConvO.forward_k_vs_all"]], "forward_k_vs_all() (dicee.aconvq method)": [[8, "dicee.AConvQ.forward_k_vs_all"]], "forward_k_vs_all() (dicee.basekge method)": [[8, "dicee.BaseKGE.forward_k_vs_all"]], "forward_k_vs_all() (dicee.cmult method)": [[8, "dicee.CMult.forward_k_vs_all"]], "forward_k_vs_all() (dicee.complex method)": [[8, "dicee.ComplEx.forward_k_vs_all"]], "forward_k_vs_all() (dicee.conex method)": [[8, "dicee.ConEx.forward_k_vs_all"]], "forward_k_vs_all() (dicee.convo method)": [[8, "dicee.ConvO.forward_k_vs_all"]], "forward_k_vs_all() (dicee.convq method)": [[8, "dicee.ConvQ.forward_k_vs_all"]], "forward_k_vs_all() (dicee.decal method)": [[8, "dicee.DeCaL.forward_k_vs_all"]], "forward_k_vs_all() (dicee.distmult method)": [[8, "dicee.DistMult.forward_k_vs_all"]], "forward_k_vs_all() (dicee.keci method)": [[8, "dicee.Keci.forward_k_vs_all"]], "forward_k_vs_all() (dicee.omult method)": [[8, "dicee.OMult.forward_k_vs_all"]], "forward_k_vs_all() (dicee.pykeenkge method)": [[8, "dicee.PykeenKGE.forward_k_vs_all"]], "forward_k_vs_all() (dicee.qmult method)": [[8, "dicee.QMult.forward_k_vs_all"]], "forward_k_vs_all() (dicee.shallom method)": [[8, "dicee.Shallom.forward_k_vs_all"]], "forward_k_vs_all() (dicee.transe method)": [[8, "dicee.TransE.forward_k_vs_all"]], "forward_k_vs_sample() (dicee.aconex method)": [[8, "dicee.AConEx.forward_k_vs_sample"]], "forward_k_vs_sample() (dicee.basekge method)": [[8, "dicee.BaseKGE.forward_k_vs_sample"]], "forward_k_vs_sample() (dicee.conex method)": [[8, "dicee.ConEx.forward_k_vs_sample"]], "forward_k_vs_sample() (dicee.distmult method)": [[8, "dicee.DistMult.forward_k_vs_sample"]], "forward_k_vs_sample() (dicee.keci method)": [[8, "dicee.Keci.forward_k_vs_sample"]], "forward_k_vs_sample() (dicee.pykeenkge method)": [[8, "dicee.PykeenKGE.forward_k_vs_sample"]], "forward_k_vs_sample() (dicee.qmult method)": [[8, "dicee.QMult.forward_k_vs_sample"]], "forward_k_vs_with_explicit() (dicee.keci method)": [[8, "dicee.Keci.forward_k_vs_with_explicit"]], "forward_triples() (dicee.aconex method)": [[8, "dicee.AConEx.forward_triples"]], "forward_triples() (dicee.aconvo method)": [[8, "dicee.AConvO.forward_triples"]], "forward_triples() (dicee.aconvq method)": [[8, "dicee.AConvQ.forward_triples"]], "forward_triples() (dicee.basekge method)": [[8, "dicee.BaseKGE.forward_triples"]], "forward_triples() (dicee.cmult method)": [[8, "dicee.CMult.forward_triples"]], "forward_triples() (dicee.conex method)": [[8, "dicee.ConEx.forward_triples"]], "forward_triples() (dicee.convo method)": [[8, "dicee.ConvO.forward_triples"]], "forward_triples() (dicee.convq method)": [[8, "dicee.ConvQ.forward_triples"]], "forward_triples() (dicee.decal method)": [[8, "dicee.DeCaL.forward_triples"]], "forward_triples() (dicee.keci method)": [[8, "dicee.Keci.forward_triples"]], "forward_triples() (dicee.lfmult method)": [[8, "dicee.LFMult.forward_triples"]], "forward_triples() (dicee.pyke method)": [[8, "dicee.Pyke.forward_triples"]], "forward_triples() (dicee.pykeenkge method)": [[8, "dicee.PykeenKGE.forward_triples"]], "forward_triples() (dicee.shallom method)": [[8, "dicee.Shallom.forward_triples"]], "generate() (dicee.byte method)": [[8, "dicee.BytE.generate"]], "generate() (dicee.kge method)": [[8, "dicee.KGE.generate"]], "generate_queries() (dicee.querygenerator method)": [[8, "dicee.QueryGenerator.generate_queries"]], "get_bpe_head_and_relation_representation() (dicee.basekge method)": [[8, "dicee.BaseKGE.get_bpe_head_and_relation_representation"]], "get_ee_vocab() (in module dicee)": [[8, "dicee.get_ee_vocab"]], "get_embeddings() (dicee.basekge method)": [[8, "dicee.BaseKGE.get_embeddings"]], "get_embeddings() (dicee.shallom method)": [[8, "dicee.Shallom.get_embeddings"]], "get_er_vocab() (in module dicee)": [[8, "dicee.get_er_vocab"]], "get_head_relation_representation() (dicee.basekge method)": [[8, "dicee.BaseKGE.get_head_relation_representation"]], "get_queries() (dicee.querygenerator method)": [[8, "dicee.QueryGenerator.get_queries"]], "get_re_vocab() (in module dicee)": [[8, "dicee.get_re_vocab"]], "get_sentence_representation() (dicee.basekge method)": [[8, "dicee.BaseKGE.get_sentence_representation"]], "get_transductive_entity_embeddings() (dicee.kge method)": [[8, "dicee.KGE.get_transductive_entity_embeddings"]], "get_triple_representation() (dicee.basekge method)": [[8, "dicee.BaseKGE.get_triple_representation"]], "ground_queries() (dicee.querygenerator method)": [[8, "dicee.QueryGenerator.ground_queries"]], "init_params_with_sanity_checking() (dicee.basekge method)": [[8, "dicee.BaseKGE.init_params_with_sanity_checking"]], "initialize_dataloader() (dicee.dice_trainer method)": [[8, "dicee.DICE_Trainer.initialize_dataloader"]], "initialize_dataset() (dicee.dice_trainer method)": [[8, "dicee.DICE_Trainer.initialize_dataset"]], "initialize_or_load_model() (dicee.dice_trainer method)": [[8, "dicee.DICE_Trainer.initialize_or_load_model"]], "initialize_trainer() (dicee.dice_trainer method)": [[8, "dicee.DICE_Trainer.initialize_trainer"]], "intialize_model() (in module dicee)": [[8, "dicee.intialize_model"]], "k_fold_cross_validation() (dicee.dice_trainer method)": [[8, "dicee.DICE_Trainer.k_fold_cross_validation"]], "k_vs_all_score() (dicee.complex static method)": [[8, "dicee.ComplEx.k_vs_all_score"]], "k_vs_all_score() (dicee.distmult method)": [[8, "dicee.DistMult.k_vs_all_score"]], "k_vs_all_score() (dicee.keci method)": [[8, "dicee.Keci.k_vs_all_score"]], "k_vs_all_score() (dicee.omult method)": [[8, "dicee.OMult.k_vs_all_score"]], "k_vs_all_score() (dicee.qmult method)": [[8, "dicee.QMult.k_vs_all_score"]], "linear() (dicee.lfmult method)": [[8, "dicee.LFMult.linear"]], "list2tuple() (dicee.querygenerator method)": [[8, "dicee.QueryGenerator.list2tuple"]], "load_indexed_data() (dicee.execute method)": [[8, "dicee.Execute.load_indexed_data"]], "load_json() (in module dicee)": [[8, "dicee.load_json"]], "load_model() (in module dicee)": [[8, "dicee.load_model"]], "load_model_ensemble() (in module dicee)": [[8, "dicee.load_model_ensemble"]], "load_numpy() (in module dicee)": [[8, "dicee.load_numpy"]], "load_pickle() (in module dicee)": [[8, "dicee.load_pickle"], [8, "id81"]], "load_queries() (dicee.querygenerator method)": [[8, "dicee.QueryGenerator.load_queries"]], "load_queries_and_answers() (dicee.querygenerator static method)": [[8, "dicee.QueryGenerator.load_queries_and_answers"]], "loss_function() (dicee.byte method)": [[8, "dicee.BytE.loss_function"]], "mapping_from_first_two_cols_to_third() (in module dicee)": [[8, "dicee.mapping_from_first_two_cols_to_third"]], "negnorm() (dicee.kge method)": [[8, "dicee.KGE.negnorm"]], "numpy_data_type_changer() (in module dicee)": [[8, "dicee.numpy_data_type_changer"]], "octonion_normalizer() (dicee.aconvo static method)": [[8, "dicee.AConvO.octonion_normalizer"]], "octonion_normalizer() (dicee.convo static method)": [[8, "dicee.ConvO.octonion_normalizer"]], "octonion_normalizer() (dicee.omult static method)": [[8, "dicee.OMult.octonion_normalizer"]], "poly_nn() (dicee.lfmult method)": [[8, "dicee.LFMult.poly_NN"]], "polynomial() (dicee.lfmult method)": [[8, "dicee.LFMult.polynomial"]], "pop() (dicee.lfmult method)": [[8, "dicee.LFMult.pop"]], "predict() (dicee.kge method)": [[8, "dicee.KGE.predict"]], "predict_missing_head_entity() (dicee.kge method)": [[8, "dicee.KGE.predict_missing_head_entity"]], "predict_missing_relations() (dicee.kge method)": [[8, "dicee.KGE.predict_missing_relations"]], "predict_missing_tail_entity() (dicee.kge method)": [[8, "dicee.KGE.predict_missing_tail_entity"]], "predict_topk() (dicee.kge method)": [[8, "dicee.KGE.predict_topk"]], "prepare_data() (dicee.cvdatamodule method)": [[8, "dicee.CVDataModule.prepare_data"]], "quaternion_multiplication_followed_by_inner_product() (dicee.qmult method)": [[8, "dicee.QMult.quaternion_multiplication_followed_by_inner_product"]], "quaternion_normalizer() (dicee.qmult static method)": [[8, "dicee.QMult.quaternion_normalizer"]], "random_prediction() (in module dicee)": [[8, "dicee.random_prediction"]], "read_or_load_kg() (dicee.execute method)": [[8, "dicee.Execute.read_or_load_kg"]], "read_or_load_kg() (in module dicee)": [[8, "dicee.read_or_load_kg"]], "read_preprocess_index_serialize_data() (dicee.execute method)": [[8, "dicee.Execute.read_preprocess_index_serialize_data"]], "reload_dataset() (in module dicee)": [[8, "dicee.reload_dataset"]], "residual_convolution() (dicee.aconex method)": [[8, "dicee.AConEx.residual_convolution"]], "residual_convolution() (dicee.aconvo method)": [[8, "dicee.AConvO.residual_convolution"]], "residual_convolution() (dicee.aconvq method)": [[8, "dicee.AConvQ.residual_convolution"]], "residual_convolution() (dicee.conex method)": [[8, "dicee.ConEx.residual_convolution"]], "residual_convolution() (dicee.convo method)": [[8, "dicee.ConvO.residual_convolution"]], "residual_convolution() (dicee.convq method)": [[8, "dicee.ConvQ.residual_convolution"]], "return_multi_hop_query_results() (dicee.kge method)": [[8, "dicee.KGE.return_multi_hop_query_results"]], "save_checkpoint_model() (in module dicee)": [[8, "dicee.save_checkpoint_model"]], "save_embeddings() (in module dicee)": [[8, "dicee.save_embeddings"]], "save_numpy_ndarray() (in module dicee)": [[8, "dicee.save_numpy_ndarray"]], "save_pickle() (in module dicee)": [[8, "dicee.save_pickle"]], "save_queries() (dicee.querygenerator method)": [[8, "dicee.QueryGenerator.save_queries"]], "save_queries_and_answers() (dicee.querygenerator static method)": [[8, "dicee.QueryGenerator.save_queries_and_answers"]], "save_trained_model() (dicee.execute method)": [[8, "dicee.Execute.save_trained_model"]], "scalar_batch_nn() (dicee.lfmult method)": [[8, "dicee.LFMult.scalar_batch_NN"]], "score() (dicee.cmult method)": [[8, "dicee.CMult.score"]], "score() (dicee.complex static method)": [[8, "dicee.ComplEx.score"]], "score() (dicee.distmult method)": [[8, "dicee.DistMult.score"]], "score() (dicee.keci method)": [[8, "dicee.Keci.score"]], "score() (dicee.omult method)": [[8, "dicee.OMult.score"]], "score() (dicee.qmult method)": [[8, "dicee.QMult.score"]], "score() (dicee.transe method)": [[8, "dicee.TransE.score"]], "select_model() (in module dicee)": [[8, "dicee.select_model"]], "set_global_seed() (dicee.querygenerator method)": [[8, "dicee.QueryGenerator.set_global_seed"]], "setup() (dicee.cvdatamodule method)": [[8, "dicee.CVDataModule.setup"]], "single_hop_query_answering() (dicee.kge method)": [[8, "dicee.KGE.single_hop_query_answering"]], "start() (dicee.dice_trainer method)": [[8, "dicee.DICE_Trainer.start"]], "start() (dicee.execute method)": [[8, "dicee.Execute.start"]], "store() (in module dicee)": [[8, "dicee.store"]], "t_conorm() (dicee.kge method)": [[8, "dicee.KGE.t_conorm"]], "t_norm() (dicee.kge method)": [[8, "dicee.KGE.t_norm"]], "tensor_t_norm() (dicee.kge method)": [[8, "dicee.KGE.tensor_t_norm"]], "timeit() (in module dicee)": [[8, "dicee.timeit"], [8, "id0"]], "train() (dicee.kge method)": [[8, "dicee.KGE.train"]], "train_dataloader() (dicee.cvdatamodule method)": [[8, "dicee.CVDataModule.train_dataloader"]], "train_k_vs_all() (dicee.kge method)": [[8, "dicee.KGE.train_k_vs_all"]], "train_triples() (dicee.kge method)": [[8, "dicee.KGE.train_triples"]], "training_step() (dicee.byte method)": [[8, "dicee.BytE.training_step"]], "transfer_batch_to_device() (dicee.cvdatamodule method)": [[8, "dicee.CVDataModule.transfer_batch_to_device"]], "tri_score() (dicee.lfmult method)": [[8, "dicee.LFMult.tri_score"]], "triple_score() (dicee.kge method)": [[8, "dicee.KGE.triple_score"]], "tuple2list() (dicee.querygenerator method)": [[8, "dicee.QueryGenerator.tuple2list"]], "unmap() (dicee.querygenerator method)": [[8, "dicee.QueryGenerator.unmap"]], "unmap_query() (dicee.querygenerator method)": [[8, "dicee.QueryGenerator.unmap_query"]], "vocab_to_parquet() (in module dicee)": [[8, "dicee.vocab_to_parquet"]], "vtp_score() (dicee.lfmult method)": [[8, "dicee.LFMult.vtp_score"]], "write_links() (dicee.querygenerator method)": [[8, "dicee.QueryGenerator.write_links"]], "write_report() (dicee.execute method)": [[8, "dicee.Execute.write_report"]], "kg (class in dicee.knowledge_graph)": [[9, "dicee.knowledge_graph.KG"]], "dicee.knowledge_graph": [[9, "module-dicee.knowledge_graph"]], "entities_str (dicee.knowledge_graph.kg property)": [[9, "dicee.knowledge_graph.KG.entities_str"]], "func_triple_to_bpe_representation() (dicee.knowledge_graph.kg method)": [[9, "dicee.knowledge_graph.KG.func_triple_to_bpe_representation"]], "relations_str (dicee.knowledge_graph.kg property)": [[9, "dicee.knowledge_graph.KG.relations_str"]], "kge (class in dicee.knowledge_graph_embeddings)": [[10, "dicee.knowledge_graph_embeddings.KGE"]], "__str__() (dicee.knowledge_graph_embeddings.kge method)": [[10, "dicee.knowledge_graph_embeddings.KGE.__str__"]], "answer_multi_hop_query() (dicee.knowledge_graph_embeddings.kge method)": [[10, "dicee.knowledge_graph_embeddings.KGE.answer_multi_hop_query"]], "create_vector_database() (dicee.knowledge_graph_embeddings.kge method)": [[10, "dicee.knowledge_graph_embeddings.KGE.create_vector_database"]], "deploy() (dicee.knowledge_graph_embeddings.kge method)": [[10, "dicee.knowledge_graph_embeddings.KGE.deploy"]], "dicee.knowledge_graph_embeddings": [[10, "module-dicee.knowledge_graph_embeddings"]], "eval_lp_performance() (dicee.knowledge_graph_embeddings.kge method)": [[10, "dicee.knowledge_graph_embeddings.KGE.eval_lp_performance"]], "find_missing_triples() (dicee.knowledge_graph_embeddings.kge method)": [[10, "dicee.knowledge_graph_embeddings.KGE.find_missing_triples"]], "generate() (dicee.knowledge_graph_embeddings.kge method)": [[10, "dicee.knowledge_graph_embeddings.KGE.generate"]], "get_transductive_entity_embeddings() (dicee.knowledge_graph_embeddings.kge method)": [[10, "dicee.knowledge_graph_embeddings.KGE.get_transductive_entity_embeddings"]], "negnorm() (dicee.knowledge_graph_embeddings.kge method)": [[10, "dicee.knowledge_graph_embeddings.KGE.negnorm"]], "predict() (dicee.knowledge_graph_embeddings.kge method)": [[10, "dicee.knowledge_graph_embeddings.KGE.predict"]], "predict_missing_head_entity() (dicee.knowledge_graph_embeddings.kge method)": [[10, "dicee.knowledge_graph_embeddings.KGE.predict_missing_head_entity"]], "predict_missing_relations() (dicee.knowledge_graph_embeddings.kge method)": [[10, "dicee.knowledge_graph_embeddings.KGE.predict_missing_relations"]], "predict_missing_tail_entity() (dicee.knowledge_graph_embeddings.kge method)": [[10, "dicee.knowledge_graph_embeddings.KGE.predict_missing_tail_entity"]], "predict_topk() (dicee.knowledge_graph_embeddings.kge method)": [[10, "dicee.knowledge_graph_embeddings.KGE.predict_topk"]], "return_multi_hop_query_results() (dicee.knowledge_graph_embeddings.kge method)": [[10, "dicee.knowledge_graph_embeddings.KGE.return_multi_hop_query_results"]], "single_hop_query_answering() (dicee.knowledge_graph_embeddings.kge method)": [[10, "dicee.knowledge_graph_embeddings.KGE.single_hop_query_answering"]], "t_conorm() (dicee.knowledge_graph_embeddings.kge method)": [[10, "dicee.knowledge_graph_embeddings.KGE.t_conorm"]], "t_norm() (dicee.knowledge_graph_embeddings.kge method)": [[10, "dicee.knowledge_graph_embeddings.KGE.t_norm"]], "tensor_t_norm() (dicee.knowledge_graph_embeddings.kge method)": [[10, "dicee.knowledge_graph_embeddings.KGE.tensor_t_norm"]], "train() (dicee.knowledge_graph_embeddings.kge method)": [[10, "dicee.knowledge_graph_embeddings.KGE.train"]], "train_k_vs_all() (dicee.knowledge_graph_embeddings.kge method)": [[10, "dicee.knowledge_graph_embeddings.KGE.train_k_vs_all"]], "train_triples() (dicee.knowledge_graph_embeddings.kge method)": [[10, "dicee.knowledge_graph_embeddings.KGE.train_triples"]], "triple_score() (dicee.knowledge_graph_embeddings.kge method)": [[10, "dicee.knowledge_graph_embeddings.KGE.triple_score"]], "basekge (class in dicee.models.base_model)": [[11, "dicee.models.base_model.BaseKGE"]], "basekgelightning (class in dicee.models.base_model)": [[11, "dicee.models.base_model.BaseKGELightning"]], "identityclass (class in dicee.models.base_model)": [[11, "dicee.models.base_model.IdentityClass"]], "configure_optimizers() (dicee.models.base_model.basekgelightning method)": [[11, "dicee.models.base_model.BaseKGELightning.configure_optimizers"]], "dicee.models.base_model": [[11, "module-dicee.models.base_model"]], "forward() (dicee.models.base_model.basekge method)": [[11, "dicee.models.base_model.BaseKGE.forward"]], "forward() (dicee.models.base_model.identityclass static method)": [[11, "dicee.models.base_model.IdentityClass.forward"]], "forward_byte_pair_encoded_k_vs_all() (dicee.models.base_model.basekge method)": [[11, "dicee.models.base_model.BaseKGE.forward_byte_pair_encoded_k_vs_all"]], "forward_byte_pair_encoded_triple() (dicee.models.base_model.basekge method)": [[11, "dicee.models.base_model.BaseKGE.forward_byte_pair_encoded_triple"]], "forward_k_vs_all() (dicee.models.base_model.basekge method)": [[11, "dicee.models.base_model.BaseKGE.forward_k_vs_all"]], "forward_k_vs_sample() (dicee.models.base_model.basekge method)": [[11, "dicee.models.base_model.BaseKGE.forward_k_vs_sample"]], "forward_triples() (dicee.models.base_model.basekge method)": [[11, "dicee.models.base_model.BaseKGE.forward_triples"]], "get_bpe_head_and_relation_representation() (dicee.models.base_model.basekge method)": [[11, "dicee.models.base_model.BaseKGE.get_bpe_head_and_relation_representation"]], "get_embeddings() (dicee.models.base_model.basekge method)": [[11, "dicee.models.base_model.BaseKGE.get_embeddings"]], "get_head_relation_representation() (dicee.models.base_model.basekge method)": [[11, "dicee.models.base_model.BaseKGE.get_head_relation_representation"]], "get_sentence_representation() (dicee.models.base_model.basekge method)": [[11, "dicee.models.base_model.BaseKGE.get_sentence_representation"]], "get_triple_representation() (dicee.models.base_model.basekge method)": [[11, "dicee.models.base_model.BaseKGE.get_triple_representation"]], "init_params_with_sanity_checking() (dicee.models.base_model.basekge method)": [[11, "dicee.models.base_model.BaseKGE.init_params_with_sanity_checking"]], "loss_function() (dicee.models.base_model.basekgelightning method)": [[11, "dicee.models.base_model.BaseKGELightning.loss_function"]], "mem_of_model() (dicee.models.base_model.basekgelightning method)": [[11, "dicee.models.base_model.BaseKGELightning.mem_of_model"]], "on_train_epoch_end() (dicee.models.base_model.basekgelightning method)": [[11, "dicee.models.base_model.BaseKGELightning.on_train_epoch_end"]], "predict_dataloader() (dicee.models.base_model.basekgelightning method)": [[11, "dicee.models.base_model.BaseKGELightning.predict_dataloader"]], "test_dataloader() (dicee.models.base_model.basekgelightning method)": [[11, "dicee.models.base_model.BaseKGELightning.test_dataloader"]], "test_epoch_end() (dicee.models.base_model.basekgelightning method)": [[11, "dicee.models.base_model.BaseKGELightning.test_epoch_end"]], "train_dataloader() (dicee.models.base_model.basekgelightning method)": [[11, "dicee.models.base_model.BaseKGELightning.train_dataloader"]], "training_step() (dicee.models.base_model.basekgelightning method)": [[11, "dicee.models.base_model.BaseKGELightning.training_step"]], "val_dataloader() (dicee.models.base_model.basekgelightning method)": [[11, "dicee.models.base_model.BaseKGELightning.val_dataloader"]], "cmult (class in dicee.models.clifford)": [[12, "dicee.models.clifford.CMult"]], "decal (class in dicee.models.clifford)": [[12, "dicee.models.clifford.DeCaL"]], "keci (class in dicee.models.clifford)": [[12, "dicee.models.clifford.Keci"]], "kecibase (class in dicee.models.clifford)": [[12, "dicee.models.clifford.KeciBase"]], "apply_coefficients() (dicee.models.clifford.decal method)": [[12, "dicee.models.clifford.DeCaL.apply_coefficients"]], "apply_coefficients() (dicee.models.clifford.keci method)": [[12, "dicee.models.clifford.Keci.apply_coefficients"]], "cl_pqr() (dicee.models.clifford.decal method)": [[12, "dicee.models.clifford.DeCaL.cl_pqr"]], "clifford_mul() (dicee.models.clifford.cmult method)": [[12, "dicee.models.clifford.CMult.clifford_mul"]], "clifford_multiplication() (dicee.models.clifford.keci method)": [[12, "dicee.models.clifford.Keci.clifford_multiplication"]], "compute_sigma_pp() (dicee.models.clifford.decal method)": [[12, "dicee.models.clifford.DeCaL.compute_sigma_pp"]], "compute_sigma_pp() (dicee.models.clifford.keci method)": [[12, "dicee.models.clifford.Keci.compute_sigma_pp"]], "compute_sigma_pq() (dicee.models.clifford.decal method)": [[12, "dicee.models.clifford.DeCaL.compute_sigma_pq"]], "compute_sigma_pq() (dicee.models.clifford.keci method)": [[12, "dicee.models.clifford.Keci.compute_sigma_pq"]], "compute_sigma_pr() (dicee.models.clifford.decal method)": [[12, "dicee.models.clifford.DeCaL.compute_sigma_pr"]], "compute_sigma_qq() (dicee.models.clifford.decal method)": [[12, "dicee.models.clifford.DeCaL.compute_sigma_qq"]], "compute_sigma_qq() (dicee.models.clifford.keci method)": [[12, "dicee.models.clifford.Keci.compute_sigma_qq"]], "compute_sigma_qr() (dicee.models.clifford.decal method)": [[12, "dicee.models.clifford.DeCaL.compute_sigma_qr"]], "compute_sigma_rr() (dicee.models.clifford.decal method)": [[12, "dicee.models.clifford.DeCaL.compute_sigma_rr"]], "compute_sigmas_multivect() (dicee.models.clifford.decal method)": [[12, "dicee.models.clifford.DeCaL.compute_sigmas_multivect"]], "compute_sigmas_single() (dicee.models.clifford.decal method)": [[12, "dicee.models.clifford.DeCaL.compute_sigmas_single"]], "construct_cl_multivector() (dicee.models.clifford.decal method)": [[12, "dicee.models.clifford.DeCaL.construct_cl_multivector"]], "construct_cl_multivector() (dicee.models.clifford.keci method)": [[12, "dicee.models.clifford.Keci.construct_cl_multivector"]], "dicee.models.clifford": [[12, "module-dicee.models.clifford"]], "forward_k_vs_all() (dicee.models.clifford.cmult method)": [[12, "dicee.models.clifford.CMult.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.clifford.decal method)": [[12, "dicee.models.clifford.DeCaL.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.clifford.keci method)": [[12, "dicee.models.clifford.Keci.forward_k_vs_all"]], "forward_k_vs_sample() (dicee.models.clifford.keci method)": [[12, "dicee.models.clifford.Keci.forward_k_vs_sample"]], "forward_k_vs_with_explicit() (dicee.models.clifford.keci method)": [[12, "dicee.models.clifford.Keci.forward_k_vs_with_explicit"]], "forward_triples() (dicee.models.clifford.cmult method)": [[12, "dicee.models.clifford.CMult.forward_triples"]], "forward_triples() (dicee.models.clifford.decal method)": [[12, "dicee.models.clifford.DeCaL.forward_triples"]], "forward_triples() (dicee.models.clifford.keci method)": [[12, "dicee.models.clifford.Keci.forward_triples"]], "k_vs_all_score() (dicee.models.clifford.keci method)": [[12, "dicee.models.clifford.Keci.k_vs_all_score"]], "score() (dicee.models.clifford.cmult method)": [[12, "dicee.models.clifford.CMult.score"]], "score() (dicee.models.clifford.keci method)": [[12, "dicee.models.clifford.Keci.score"]], "aconex (class in dicee.models.complex)": [[13, "dicee.models.complex.AConEx"]], "complex (class in dicee.models.complex)": [[13, "dicee.models.complex.ComplEx"]], "conex (class in dicee.models.complex)": [[13, "dicee.models.complex.ConEx"]], "dicee.models.complex": [[13, "module-dicee.models.complex"]], "forward_k_vs_all() (dicee.models.complex.aconex method)": [[13, "dicee.models.complex.AConEx.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.complex.complex method)": [[13, "dicee.models.complex.ComplEx.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.complex.conex method)": [[13, "dicee.models.complex.ConEx.forward_k_vs_all"]], "forward_k_vs_sample() (dicee.models.complex.aconex method)": [[13, "dicee.models.complex.AConEx.forward_k_vs_sample"]], "forward_k_vs_sample() (dicee.models.complex.conex method)": [[13, "dicee.models.complex.ConEx.forward_k_vs_sample"]], "forward_triples() (dicee.models.complex.aconex method)": [[13, "dicee.models.complex.AConEx.forward_triples"]], "forward_triples() (dicee.models.complex.conex method)": [[13, "dicee.models.complex.ConEx.forward_triples"]], "k_vs_all_score() (dicee.models.complex.complex static method)": [[13, "dicee.models.complex.ComplEx.k_vs_all_score"]], "residual_convolution() (dicee.models.complex.aconex method)": [[13, "dicee.models.complex.AConEx.residual_convolution"]], "residual_convolution() (dicee.models.complex.conex method)": [[13, "dicee.models.complex.ConEx.residual_convolution"]], "score() (dicee.models.complex.complex static method)": [[13, "dicee.models.complex.ComplEx.score"]], "fmult (class in dicee.models.function_space)": [[14, "dicee.models.function_space.FMult"]], "fmult2 (class in dicee.models.function_space)": [[14, "dicee.models.function_space.FMult2"]], "gfmult (class in dicee.models.function_space)": [[14, "dicee.models.function_space.GFMult"]], "lfmult (class in dicee.models.function_space)": [[14, "dicee.models.function_space.LFMult"]], "lfmult1 (class in dicee.models.function_space)": [[14, "dicee.models.function_space.LFMult1"]], "build_chain_funcs() (dicee.models.function_space.fmult2 method)": [[14, "dicee.models.function_space.FMult2.build_chain_funcs"]], "build_func() (dicee.models.function_space.fmult2 method)": [[14, "dicee.models.function_space.FMult2.build_func"]], "chain_func() (dicee.models.function_space.fmult method)": [[14, "dicee.models.function_space.FMult.chain_func"]], "chain_func() (dicee.models.function_space.gfmult method)": [[14, "dicee.models.function_space.GFMult.chain_func"]], "comp_func() (dicee.models.function_space.lfmult method)": [[14, "dicee.models.function_space.LFMult.comp_func"]], "compute_func() (dicee.models.function_space.fmult method)": [[14, "dicee.models.function_space.FMult.compute_func"]], "compute_func() (dicee.models.function_space.fmult2 method)": [[14, "dicee.models.function_space.FMult2.compute_func"]], "compute_func() (dicee.models.function_space.gfmult method)": [[14, "dicee.models.function_space.GFMult.compute_func"]], "construct_multi_coeff() (dicee.models.function_space.lfmult method)": [[14, "dicee.models.function_space.LFMult.construct_multi_coeff"]], "dicee.models.function_space": [[14, "module-dicee.models.function_space"]], "forward_triples() (dicee.models.function_space.fmult method)": [[14, "dicee.models.function_space.FMult.forward_triples"]], "forward_triples() (dicee.models.function_space.fmult2 method)": [[14, "dicee.models.function_space.FMult2.forward_triples"]], "forward_triples() (dicee.models.function_space.gfmult method)": [[14, "dicee.models.function_space.GFMult.forward_triples"]], "forward_triples() (dicee.models.function_space.lfmult method)": [[14, "dicee.models.function_space.LFMult.forward_triples"]], "forward_triples() (dicee.models.function_space.lfmult1 method)": [[14, "dicee.models.function_space.LFMult1.forward_triples"]], "function() (dicee.models.function_space.fmult2 method)": [[14, "dicee.models.function_space.FMult2.function"]], "linear() (dicee.models.function_space.lfmult method)": [[14, "dicee.models.function_space.LFMult.linear"]], "poly_nn() (dicee.models.function_space.lfmult method)": [[14, "dicee.models.function_space.LFMult.poly_NN"]], "polynomial() (dicee.models.function_space.lfmult method)": [[14, "dicee.models.function_space.LFMult.polynomial"]], "pop() (dicee.models.function_space.lfmult method)": [[14, "dicee.models.function_space.LFMult.pop"]], "scalar_batch_nn() (dicee.models.function_space.lfmult method)": [[14, "dicee.models.function_space.LFMult.scalar_batch_NN"]], "trapezoid() (dicee.models.function_space.fmult2 method)": [[14, "dicee.models.function_space.FMult2.trapezoid"]], "tri_score() (dicee.models.function_space.lfmult method)": [[14, "dicee.models.function_space.LFMult.tri_score"]], "tri_score() (dicee.models.function_space.lfmult1 method)": [[14, "dicee.models.function_space.LFMult1.tri_score"]], "vtp_score() (dicee.models.function_space.lfmult method)": [[14, "dicee.models.function_space.LFMult.vtp_score"]], "vtp_score() (dicee.models.function_space.lfmult1 method)": [[14, "dicee.models.function_space.LFMult1.vtp_score"]], "aconex (class in dicee.models)": [[15, "dicee.models.AConEx"]], "aconvo (class in dicee.models)": [[15, "dicee.models.AConvO"]], "aconvq (class in dicee.models)": [[15, "dicee.models.AConvQ"]], "basekge (class in dicee.models)": [[15, "dicee.models.BaseKGE"], [15, "id0"], [15, "id112"], [15, "id160"], [15, "id185"], [15, "id46"], [15, "id77"]], "basekgelightning (class in dicee.models)": [[15, "dicee.models.BaseKGELightning"]], "cmult (class in dicee.models)": [[15, "dicee.models.CMult"]], "complex (class in dicee.models)": [[15, "dicee.models.ComplEx"]], "conex (class in dicee.models)": [[15, "dicee.models.ConEx"]], "convo (class in dicee.models)": [[15, "dicee.models.ConvO"]], "convq (class in dicee.models)": [[15, "dicee.models.ConvQ"]], "decal (class in dicee.models)": [[15, "dicee.models.DeCaL"]], "distmult (class in dicee.models)": [[15, "dicee.models.DistMult"]], "fmult (class in dicee.models)": [[15, "dicee.models.FMult"]], "fmult2 (class in dicee.models)": [[15, "dicee.models.FMult2"]], "gfmult (class in dicee.models)": [[15, "dicee.models.GFMult"]], "identityclass (class in dicee.models)": [[15, "dicee.models.IdentityClass"], [15, "id102"], [15, "id137"]], "keci (class in dicee.models)": [[15, "dicee.models.Keci"]], "kecibase (class in dicee.models)": [[15, "dicee.models.KeciBase"]], "lfmult (class in dicee.models)": [[15, "dicee.models.LFMult"]], "lfmult1 (class in dicee.models)": [[15, "dicee.models.LFMult1"]], "omult (class in dicee.models)": [[15, "dicee.models.OMult"]], "pyke (class in dicee.models)": [[15, "dicee.models.Pyke"]], "pykeenkge (class in dicee.models)": [[15, "dicee.models.PykeenKGE"]], "qmult (class in dicee.models)": [[15, "dicee.models.QMult"]], "shallom (class in dicee.models)": [[15, "dicee.models.Shallom"]], "transe (class in dicee.models)": [[15, "dicee.models.TransE"]], "apply_coefficients() (dicee.models.decal method)": [[15, "dicee.models.DeCaL.apply_coefficients"]], "apply_coefficients() (dicee.models.keci method)": [[15, "dicee.models.Keci.apply_coefficients"]], "build_chain_funcs() (dicee.models.fmult2 method)": [[15, "dicee.models.FMult2.build_chain_funcs"]], "build_func() (dicee.models.fmult2 method)": [[15, "dicee.models.FMult2.build_func"]], "chain_func() (dicee.models.fmult method)": [[15, "dicee.models.FMult.chain_func"]], "chain_func() (dicee.models.gfmult method)": [[15, "dicee.models.GFMult.chain_func"]], "cl_pqr() (dicee.models.decal method)": [[15, "dicee.models.DeCaL.cl_pqr"]], "clifford_mul() (dicee.models.cmult method)": [[15, "dicee.models.CMult.clifford_mul"]], "clifford_multiplication() (dicee.models.keci method)": [[15, "dicee.models.Keci.clifford_multiplication"]], "comp_func() (dicee.models.lfmult method)": [[15, "dicee.models.LFMult.comp_func"]], "compute_func() (dicee.models.fmult method)": [[15, "dicee.models.FMult.compute_func"]], "compute_func() (dicee.models.fmult2 method)": [[15, "dicee.models.FMult2.compute_func"]], "compute_func() (dicee.models.gfmult method)": [[15, "dicee.models.GFMult.compute_func"]], "compute_sigma_pp() (dicee.models.decal method)": [[15, "dicee.models.DeCaL.compute_sigma_pp"]], "compute_sigma_pp() (dicee.models.keci method)": [[15, "dicee.models.Keci.compute_sigma_pp"]], "compute_sigma_pq() (dicee.models.decal method)": [[15, "dicee.models.DeCaL.compute_sigma_pq"]], "compute_sigma_pq() (dicee.models.keci method)": [[15, "dicee.models.Keci.compute_sigma_pq"]], "compute_sigma_pr() (dicee.models.decal method)": [[15, "dicee.models.DeCaL.compute_sigma_pr"]], "compute_sigma_qq() (dicee.models.decal method)": [[15, "dicee.models.DeCaL.compute_sigma_qq"]], "compute_sigma_qq() (dicee.models.keci method)": [[15, "dicee.models.Keci.compute_sigma_qq"]], "compute_sigma_qr() (dicee.models.decal method)": [[15, "dicee.models.DeCaL.compute_sigma_qr"]], "compute_sigma_rr() (dicee.models.decal method)": [[15, "dicee.models.DeCaL.compute_sigma_rr"]], "compute_sigmas_multivect() (dicee.models.decal method)": [[15, "dicee.models.DeCaL.compute_sigmas_multivect"]], "compute_sigmas_single() (dicee.models.decal method)": [[15, "dicee.models.DeCaL.compute_sigmas_single"]], "configure_optimizers() (dicee.models.basekgelightning method)": [[15, "dicee.models.BaseKGELightning.configure_optimizers"]], "construct_cl_multivector() (dicee.models.decal method)": [[15, "dicee.models.DeCaL.construct_cl_multivector"]], "construct_cl_multivector() (dicee.models.keci method)": [[15, "dicee.models.Keci.construct_cl_multivector"]], "construct_multi_coeff() (dicee.models.lfmult method)": [[15, "dicee.models.LFMult.construct_multi_coeff"]], "dicee.models": [[15, "module-dicee.models"]], "forward() (dicee.models.basekge method)": [[15, "dicee.models.BaseKGE.forward"], [15, "id119"], [15, "id167"], [15, "id192"], [15, "id23"], [15, "id53"], [15, "id84"]], "forward() (dicee.models.identityclass static method)": [[15, "dicee.models.IdentityClass.forward"], [15, "id103"], [15, "id138"]], "forward_byte_pair_encoded_k_vs_all() (dicee.models.basekge method)": [[15, "dicee.models.BaseKGE.forward_byte_pair_encoded_k_vs_all"], [15, "id113"], [15, "id161"], [15, "id17"], [15, "id186"], [15, "id47"], [15, "id78"]], "forward_byte_pair_encoded_triple() (dicee.models.basekge method)": [[15, "dicee.models.BaseKGE.forward_byte_pair_encoded_triple"], [15, "id116"], [15, "id164"], [15, "id189"], [15, "id20"], [15, "id50"], [15, "id81"]], "forward_k_vs_all() (dicee.models.aconex method)": [[15, "dicee.models.AConEx.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.aconvo method)": [[15, "dicee.models.AConvO.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.aconvq method)": [[15, "dicee.models.AConvQ.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.basekge method)": [[15, "dicee.models.BaseKGE.forward_k_vs_all"], [15, "id125"], [15, "id173"], [15, "id198"], [15, "id29"], [15, "id59"], [15, "id90"]], "forward_k_vs_all() (dicee.models.cmult method)": [[15, "dicee.models.CMult.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.complex method)": [[15, "dicee.models.ComplEx.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.conex method)": [[15, "dicee.models.ConEx.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.convo method)": [[15, "dicee.models.ConvO.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.convq method)": [[15, "dicee.models.ConvQ.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.decal method)": [[15, "dicee.models.DeCaL.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.distmult method)": [[15, "dicee.models.DistMult.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.keci method)": [[15, "dicee.models.Keci.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.omult method)": [[15, "dicee.models.OMult.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.pykeenkge method)": [[15, "dicee.models.PykeenKGE.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.qmult method)": [[15, "dicee.models.QMult.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.shallom method)": [[15, "dicee.models.Shallom.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.transe method)": [[15, "dicee.models.TransE.forward_k_vs_all"]], "forward_k_vs_sample() (dicee.models.aconex method)": [[15, "dicee.models.AConEx.forward_k_vs_sample"]], "forward_k_vs_sample() (dicee.models.basekge method)": [[15, "dicee.models.BaseKGE.forward_k_vs_sample"], [15, "id126"], [15, "id174"], [15, "id199"], [15, "id30"], [15, "id60"], [15, "id91"]], "forward_k_vs_sample() (dicee.models.conex method)": [[15, "dicee.models.ConEx.forward_k_vs_sample"]], "forward_k_vs_sample() (dicee.models.distmult method)": [[15, "dicee.models.DistMult.forward_k_vs_sample"]], "forward_k_vs_sample() (dicee.models.keci method)": [[15, "dicee.models.Keci.forward_k_vs_sample"]], "forward_k_vs_sample() (dicee.models.pykeenkge method)": [[15, "dicee.models.PykeenKGE.forward_k_vs_sample"]], "forward_k_vs_sample() (dicee.models.qmult method)": [[15, "dicee.models.QMult.forward_k_vs_sample"]], "forward_k_vs_with_explicit() (dicee.models.keci method)": [[15, "dicee.models.Keci.forward_k_vs_with_explicit"]], "forward_triples() (dicee.models.aconex method)": [[15, "dicee.models.AConEx.forward_triples"]], "forward_triples() (dicee.models.aconvo method)": [[15, "dicee.models.AConvO.forward_triples"]], "forward_triples() (dicee.models.aconvq method)": [[15, "dicee.models.AConvQ.forward_triples"]], "forward_triples() (dicee.models.basekge method)": [[15, "dicee.models.BaseKGE.forward_triples"], [15, "id122"], [15, "id170"], [15, "id195"], [15, "id26"], [15, "id56"], [15, "id87"]], "forward_triples() (dicee.models.cmult method)": [[15, "dicee.models.CMult.forward_triples"]], "forward_triples() (dicee.models.conex method)": [[15, "dicee.models.ConEx.forward_triples"]], "forward_triples() (dicee.models.convo method)": [[15, "dicee.models.ConvO.forward_triples"]], "forward_triples() (dicee.models.convq method)": [[15, "dicee.models.ConvQ.forward_triples"]], "forward_triples() (dicee.models.decal method)": [[15, "dicee.models.DeCaL.forward_triples"]], "forward_triples() (dicee.models.fmult method)": [[15, "dicee.models.FMult.forward_triples"]], "forward_triples() (dicee.models.fmult2 method)": [[15, "dicee.models.FMult2.forward_triples"]], "forward_triples() (dicee.models.gfmult method)": [[15, "dicee.models.GFMult.forward_triples"]], "forward_triples() (dicee.models.keci method)": [[15, "dicee.models.Keci.forward_triples"]], "forward_triples() (dicee.models.lfmult method)": [[15, "dicee.models.LFMult.forward_triples"]], "forward_triples() (dicee.models.lfmult1 method)": [[15, "dicee.models.LFMult1.forward_triples"]], "forward_triples() (dicee.models.pyke method)": [[15, "dicee.models.Pyke.forward_triples"]], "forward_triples() (dicee.models.pykeenkge method)": [[15, "dicee.models.PykeenKGE.forward_triples"]], "forward_triples() (dicee.models.shallom method)": [[15, "dicee.models.Shallom.forward_triples"]], "function() (dicee.models.fmult2 method)": [[15, "dicee.models.FMult2.function"]], "get_bpe_head_and_relation_representation() (dicee.models.basekge method)": [[15, "dicee.models.BaseKGE.get_bpe_head_and_relation_representation"], [15, "id132"], [15, "id180"], [15, "id205"], [15, "id36"], [15, "id66"], [15, "id97"]], "get_embeddings() (dicee.models.basekge method)": [[15, "dicee.models.BaseKGE.get_embeddings"], [15, "id100"], [15, "id135"], [15, "id183"], [15, "id208"], [15, "id39"], [15, "id69"]], "get_embeddings() (dicee.models.shallom method)": [[15, "dicee.models.Shallom.get_embeddings"]], "get_head_relation_representation() (dicee.models.basekge method)": [[15, "dicee.models.BaseKGE.get_head_relation_representation"], [15, "id128"], [15, "id176"], [15, "id201"], [15, "id32"], [15, "id62"], [15, "id93"]], "get_sentence_representation() (dicee.models.basekge method)": [[15, "dicee.models.BaseKGE.get_sentence_representation"], [15, "id129"], [15, "id177"], [15, "id202"], [15, "id33"], [15, "id63"], [15, "id94"]], "get_triple_representation() (dicee.models.basekge method)": [[15, "dicee.models.BaseKGE.get_triple_representation"], [15, "id127"], [15, "id175"], [15, "id200"], [15, "id31"], [15, "id61"], [15, "id92"]], "init_params_with_sanity_checking() (dicee.models.basekge method)": [[15, "dicee.models.BaseKGE.init_params_with_sanity_checking"], [15, "id118"], [15, "id166"], [15, "id191"], [15, "id22"], [15, "id52"], [15, "id83"]], "k_vs_all_score() (dicee.models.complex static method)": [[15, "dicee.models.ComplEx.k_vs_all_score"]], "k_vs_all_score() (dicee.models.distmult method)": [[15, "dicee.models.DistMult.k_vs_all_score"]], "k_vs_all_score() (dicee.models.keci method)": [[15, "dicee.models.Keci.k_vs_all_score"]], "k_vs_all_score() (dicee.models.omult method)": [[15, "dicee.models.OMult.k_vs_all_score"]], "k_vs_all_score() (dicee.models.qmult method)": [[15, "dicee.models.QMult.k_vs_all_score"]], "linear() (dicee.models.lfmult method)": [[15, "dicee.models.LFMult.linear"]], "loss_function() (dicee.models.basekgelightning method)": [[15, "dicee.models.BaseKGELightning.loss_function"]], "mem_of_model() (dicee.models.basekgelightning method)": [[15, "dicee.models.BaseKGELightning.mem_of_model"]], "octonion_mul() (in module dicee.models)": [[15, "dicee.models.octonion_mul"]], "octonion_mul_norm() (in module dicee.models)": [[15, "dicee.models.octonion_mul_norm"]], "octonion_normalizer() (dicee.models.aconvo static method)": [[15, "dicee.models.AConvO.octonion_normalizer"]], "octonion_normalizer() (dicee.models.convo static method)": [[15, "dicee.models.ConvO.octonion_normalizer"]], "octonion_normalizer() (dicee.models.omult static method)": [[15, "dicee.models.OMult.octonion_normalizer"]], "on_train_epoch_end() (dicee.models.basekgelightning method)": [[15, "dicee.models.BaseKGELightning.on_train_epoch_end"]], "poly_nn() (dicee.models.lfmult method)": [[15, "dicee.models.LFMult.poly_NN"]], "polynomial() (dicee.models.lfmult method)": [[15, "dicee.models.LFMult.polynomial"]], "pop() (dicee.models.lfmult method)": [[15, "dicee.models.LFMult.pop"]], "predict_dataloader() (dicee.models.basekgelightning method)": [[15, "dicee.models.BaseKGELightning.predict_dataloader"]], "quaternion_mul() (in module dicee.models)": [[15, "dicee.models.quaternion_mul"]], "quaternion_mul_with_unit_norm() (in module dicee.models)": [[15, "dicee.models.quaternion_mul_with_unit_norm"]], "quaternion_multiplication_followed_by_inner_product() (dicee.models.qmult method)": [[15, "dicee.models.QMult.quaternion_multiplication_followed_by_inner_product"]], "quaternion_normalizer() (dicee.models.qmult static method)": [[15, "dicee.models.QMult.quaternion_normalizer"]], "residual_convolution() (dicee.models.aconex method)": [[15, "dicee.models.AConEx.residual_convolution"]], "residual_convolution() (dicee.models.aconvo method)": [[15, "dicee.models.AConvO.residual_convolution"]], "residual_convolution() (dicee.models.aconvq method)": [[15, "dicee.models.AConvQ.residual_convolution"]], "residual_convolution() (dicee.models.conex method)": [[15, "dicee.models.ConEx.residual_convolution"]], "residual_convolution() (dicee.models.convo method)": [[15, "dicee.models.ConvO.residual_convolution"]], "residual_convolution() (dicee.models.convq method)": [[15, "dicee.models.ConvQ.residual_convolution"]], "scalar_batch_nn() (dicee.models.lfmult method)": [[15, "dicee.models.LFMult.scalar_batch_NN"]], "score() (dicee.models.cmult method)": [[15, "dicee.models.CMult.score"]], "score() (dicee.models.complex static method)": [[15, "dicee.models.ComplEx.score"]], "score() (dicee.models.distmult method)": [[15, "dicee.models.DistMult.score"]], "score() (dicee.models.keci method)": [[15, "dicee.models.Keci.score"]], "score() (dicee.models.omult method)": [[15, "dicee.models.OMult.score"]], "score() (dicee.models.qmult method)": [[15, "dicee.models.QMult.score"]], "score() (dicee.models.transe method)": [[15, "dicee.models.TransE.score"]], "test_dataloader() (dicee.models.basekgelightning method)": [[15, "dicee.models.BaseKGELightning.test_dataloader"]], "test_epoch_end() (dicee.models.basekgelightning method)": [[15, "dicee.models.BaseKGELightning.test_epoch_end"]], "train_dataloader() (dicee.models.basekgelightning method)": [[15, "dicee.models.BaseKGELightning.train_dataloader"]], "training_step() (dicee.models.basekgelightning method)": [[15, "dicee.models.BaseKGELightning.training_step"]], "trapezoid() (dicee.models.fmult2 method)": [[15, "dicee.models.FMult2.trapezoid"]], "tri_score() (dicee.models.lfmult method)": [[15, "dicee.models.LFMult.tri_score"]], "tri_score() (dicee.models.lfmult1 method)": [[15, "dicee.models.LFMult1.tri_score"]], "val_dataloader() (dicee.models.basekgelightning method)": [[15, "dicee.models.BaseKGELightning.val_dataloader"]], "vtp_score() (dicee.models.lfmult method)": [[15, "dicee.models.LFMult.vtp_score"]], "vtp_score() (dicee.models.lfmult1 method)": [[15, "dicee.models.LFMult1.vtp_score"]], "aconvo (class in dicee.models.octonion)": [[16, "dicee.models.octonion.AConvO"]], "convo (class in dicee.models.octonion)": [[16, "dicee.models.octonion.ConvO"]], "omult (class in dicee.models.octonion)": [[16, "dicee.models.octonion.OMult"]], "dicee.models.octonion": [[16, "module-dicee.models.octonion"]], "forward_k_vs_all() (dicee.models.octonion.aconvo method)": [[16, "dicee.models.octonion.AConvO.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.octonion.convo method)": [[16, "dicee.models.octonion.ConvO.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.octonion.omult method)": [[16, "dicee.models.octonion.OMult.forward_k_vs_all"]], "forward_triples() (dicee.models.octonion.aconvo method)": [[16, "dicee.models.octonion.AConvO.forward_triples"]], "forward_triples() (dicee.models.octonion.convo method)": [[16, "dicee.models.octonion.ConvO.forward_triples"]], "k_vs_all_score() (dicee.models.octonion.omult method)": [[16, "dicee.models.octonion.OMult.k_vs_all_score"]], "octonion_mul() (in module dicee.models.octonion)": [[16, "dicee.models.octonion.octonion_mul"]], "octonion_mul_norm() (in module dicee.models.octonion)": [[16, "dicee.models.octonion.octonion_mul_norm"]], "octonion_normalizer() (dicee.models.octonion.aconvo static method)": [[16, "dicee.models.octonion.AConvO.octonion_normalizer"]], "octonion_normalizer() (dicee.models.octonion.convo static method)": [[16, "dicee.models.octonion.ConvO.octonion_normalizer"]], "octonion_normalizer() (dicee.models.octonion.omult static method)": [[16, "dicee.models.octonion.OMult.octonion_normalizer"]], "residual_convolution() (dicee.models.octonion.aconvo method)": [[16, "dicee.models.octonion.AConvO.residual_convolution"]], "residual_convolution() (dicee.models.octonion.convo method)": [[16, "dicee.models.octonion.ConvO.residual_convolution"]], "score() (dicee.models.octonion.omult method)": [[16, "dicee.models.octonion.OMult.score"]], "pykeenkge (class in dicee.models.pykeen_models)": [[17, "dicee.models.pykeen_models.PykeenKGE"]], "dicee.models.pykeen_models": [[17, "module-dicee.models.pykeen_models"]], "forward_k_vs_all() (dicee.models.pykeen_models.pykeenkge method)": [[17, "dicee.models.pykeen_models.PykeenKGE.forward_k_vs_all"]], "forward_k_vs_sample() (dicee.models.pykeen_models.pykeenkge method)": [[17, "dicee.models.pykeen_models.PykeenKGE.forward_k_vs_sample"]], "forward_triples() (dicee.models.pykeen_models.pykeenkge method)": [[17, "dicee.models.pykeen_models.PykeenKGE.forward_triples"]], "aconvq (class in dicee.models.quaternion)": [[18, "dicee.models.quaternion.AConvQ"]], "convq (class in dicee.models.quaternion)": [[18, "dicee.models.quaternion.ConvQ"]], "qmult (class in dicee.models.quaternion)": [[18, "dicee.models.quaternion.QMult"]], "dicee.models.quaternion": [[18, "module-dicee.models.quaternion"]], "forward_k_vs_all() (dicee.models.quaternion.aconvq method)": [[18, "dicee.models.quaternion.AConvQ.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.quaternion.convq method)": [[18, "dicee.models.quaternion.ConvQ.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.quaternion.qmult method)": [[18, "dicee.models.quaternion.QMult.forward_k_vs_all"]], "forward_k_vs_sample() (dicee.models.quaternion.qmult method)": [[18, "dicee.models.quaternion.QMult.forward_k_vs_sample"]], "forward_triples() (dicee.models.quaternion.aconvq method)": [[18, "dicee.models.quaternion.AConvQ.forward_triples"]], "forward_triples() (dicee.models.quaternion.convq method)": [[18, "dicee.models.quaternion.ConvQ.forward_triples"]], "k_vs_all_score() (dicee.models.quaternion.qmult method)": [[18, "dicee.models.quaternion.QMult.k_vs_all_score"]], "quaternion_mul_with_unit_norm() (in module dicee.models.quaternion)": [[18, "dicee.models.quaternion.quaternion_mul_with_unit_norm"]], "quaternion_multiplication_followed_by_inner_product() (dicee.models.quaternion.qmult method)": [[18, "dicee.models.quaternion.QMult.quaternion_multiplication_followed_by_inner_product"]], "quaternion_normalizer() (dicee.models.quaternion.qmult static method)": [[18, "dicee.models.quaternion.QMult.quaternion_normalizer"]], "residual_convolution() (dicee.models.quaternion.aconvq method)": [[18, "dicee.models.quaternion.AConvQ.residual_convolution"]], "residual_convolution() (dicee.models.quaternion.convq method)": [[18, "dicee.models.quaternion.ConvQ.residual_convolution"]], "score() (dicee.models.quaternion.qmult method)": [[18, "dicee.models.quaternion.QMult.score"]], "distmult (class in dicee.models.real)": [[19, "dicee.models.real.DistMult"]], "pyke (class in dicee.models.real)": [[19, "dicee.models.real.Pyke"]], "shallom (class in dicee.models.real)": [[19, "dicee.models.real.Shallom"]], "transe (class in dicee.models.real)": [[19, "dicee.models.real.TransE"]], "dicee.models.real": [[19, "module-dicee.models.real"]], "forward_k_vs_all() (dicee.models.real.distmult method)": [[19, "dicee.models.real.DistMult.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.real.shallom method)": [[19, "dicee.models.real.Shallom.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.real.transe method)": [[19, "dicee.models.real.TransE.forward_k_vs_all"]], "forward_k_vs_sample() (dicee.models.real.distmult method)": [[19, "dicee.models.real.DistMult.forward_k_vs_sample"]], "forward_triples() (dicee.models.real.pyke method)": [[19, "dicee.models.real.Pyke.forward_triples"]], "forward_triples() (dicee.models.real.shallom method)": [[19, "dicee.models.real.Shallom.forward_triples"]], "get_embeddings() (dicee.models.real.shallom method)": [[19, "dicee.models.real.Shallom.get_embeddings"]], "k_vs_all_score() (dicee.models.real.distmult method)": [[19, "dicee.models.real.DistMult.k_vs_all_score"]], "score() (dicee.models.real.distmult method)": [[19, "dicee.models.real.DistMult.score"]], "score() (dicee.models.real.transe method)": [[19, "dicee.models.real.TransE.score"]], "dicee.models.static_funcs": [[20, "module-dicee.models.static_funcs"]], "quaternion_mul() (in module dicee.models.static_funcs)": [[20, "dicee.models.static_funcs.quaternion_mul"]], "block (class in dicee.models.transformers)": [[21, "dicee.models.transformers.Block"]], "byte (class in dicee.models.transformers)": [[21, "dicee.models.transformers.BytE"]], "causalselfattention (class in dicee.models.transformers)": [[21, "dicee.models.transformers.CausalSelfAttention"]], "gpt (class in dicee.models.transformers)": [[21, "dicee.models.transformers.GPT"]], "gptconfig (class in dicee.models.transformers)": [[21, "dicee.models.transformers.GPTConfig"]], "layernorm (class in dicee.models.transformers)": [[21, "dicee.models.transformers.LayerNorm"]], "mlp (class in dicee.models.transformers)": [[21, "dicee.models.transformers.MLP"]], "bias (dicee.models.transformers.gptconfig attribute)": [[21, "dicee.models.transformers.GPTConfig.bias"]], "block_size (dicee.models.transformers.gptconfig attribute)": [[21, "dicee.models.transformers.GPTConfig.block_size"]], "configure_optimizers() (dicee.models.transformers.gpt method)": [[21, "dicee.models.transformers.GPT.configure_optimizers"]], "crop_block_size() (dicee.models.transformers.gpt method)": [[21, "dicee.models.transformers.GPT.crop_block_size"]], "dicee.models.transformers": [[21, "module-dicee.models.transformers"]], "dropout (dicee.models.transformers.gptconfig attribute)": [[21, "dicee.models.transformers.GPTConfig.dropout"]], "estimate_mfu() (dicee.models.transformers.gpt method)": [[21, "dicee.models.transformers.GPT.estimate_mfu"]], "forward() (dicee.models.transformers.block method)": [[21, "dicee.models.transformers.Block.forward"]], "forward() (dicee.models.transformers.byte method)": [[21, "dicee.models.transformers.BytE.forward"]], "forward() (dicee.models.transformers.causalselfattention method)": [[21, "dicee.models.transformers.CausalSelfAttention.forward"]], "forward() (dicee.models.transformers.gpt method)": [[21, "dicee.models.transformers.GPT.forward"]], "forward() (dicee.models.transformers.layernorm method)": [[21, "dicee.models.transformers.LayerNorm.forward"]], "forward() (dicee.models.transformers.mlp method)": [[21, "dicee.models.transformers.MLP.forward"]], "from_pretrained() (dicee.models.transformers.gpt class method)": [[21, "dicee.models.transformers.GPT.from_pretrained"]], "generate() (dicee.models.transformers.byte method)": [[21, "dicee.models.transformers.BytE.generate"]], "get_num_params() (dicee.models.transformers.gpt method)": [[21, "dicee.models.transformers.GPT.get_num_params"]], "loss_function() (dicee.models.transformers.byte method)": [[21, "dicee.models.transformers.BytE.loss_function"]], "n_embd (dicee.models.transformers.gptconfig attribute)": [[21, "dicee.models.transformers.GPTConfig.n_embd"]], "n_head (dicee.models.transformers.gptconfig attribute)": [[21, "dicee.models.transformers.GPTConfig.n_head"]], "n_layer (dicee.models.transformers.gptconfig attribute)": [[21, "dicee.models.transformers.GPTConfig.n_layer"]], "training_step() (dicee.models.transformers.byte method)": [[21, "dicee.models.transformers.BytE.training_step"]], "vocab_size (dicee.models.transformers.gptconfig attribute)": [[21, "dicee.models.transformers.GPTConfig.vocab_size"]], "querygenerator (class in dicee.query_generator)": [[22, "dicee.query_generator.QueryGenerator"]], "achieve_answer() (dicee.query_generator.querygenerator method)": [[22, "dicee.query_generator.QueryGenerator.achieve_answer"]], "construct_graph() (dicee.query_generator.querygenerator method)": [[22, "dicee.query_generator.QueryGenerator.construct_graph"]], "dicee.query_generator": [[22, "module-dicee.query_generator"]], "fill_query() (dicee.query_generator.querygenerator method)": [[22, "dicee.query_generator.QueryGenerator.fill_query"]], "generate_queries() (dicee.query_generator.querygenerator method)": [[22, "dicee.query_generator.QueryGenerator.generate_queries"]], "get_queries() (dicee.query_generator.querygenerator method)": [[22, "dicee.query_generator.QueryGenerator.get_queries"]], "ground_queries() (dicee.query_generator.querygenerator method)": [[22, "dicee.query_generator.QueryGenerator.ground_queries"]], "list2tuple() (dicee.query_generator.querygenerator method)": [[22, "dicee.query_generator.QueryGenerator.list2tuple"]], "load_queries() (dicee.query_generator.querygenerator method)": [[22, "dicee.query_generator.QueryGenerator.load_queries"]], "load_queries_and_answers() (dicee.query_generator.querygenerator static method)": [[22, "dicee.query_generator.QueryGenerator.load_queries_and_answers"]], "save_queries() (dicee.query_generator.querygenerator method)": [[22, "dicee.query_generator.QueryGenerator.save_queries"]], "save_queries_and_answers() (dicee.query_generator.querygenerator static method)": [[22, "dicee.query_generator.QueryGenerator.save_queries_and_answers"]], "set_global_seed() (dicee.query_generator.querygenerator method)": [[22, "dicee.query_generator.QueryGenerator.set_global_seed"]], "tuple2list() (dicee.query_generator.querygenerator method)": [[22, "dicee.query_generator.QueryGenerator.tuple2list"]], "unmap() (dicee.query_generator.querygenerator method)": [[22, "dicee.query_generator.QueryGenerator.unmap"]], "unmap_query() (dicee.query_generator.querygenerator method)": [[22, "dicee.query_generator.QueryGenerator.unmap_query"]], "write_links() (dicee.query_generator.querygenerator method)": [[22, "dicee.query_generator.QueryGenerator.write_links"]], "loadsavetodisk (class in dicee.read_preprocess_save_load_kg)": [[23, "dicee.read_preprocess_save_load_kg.LoadSaveToDisk"]], "preprocesskg (class in dicee.read_preprocess_save_load_kg)": [[23, "dicee.read_preprocess_save_load_kg.PreprocessKG"]], "readfromdisk (class in dicee.read_preprocess_save_load_kg)": [[23, "dicee.read_preprocess_save_load_kg.ReadFromDisk"]], "add_noisy_triples_into_training() (dicee.read_preprocess_save_load_kg.readfromdisk method)": [[23, "dicee.read_preprocess_save_load_kg.ReadFromDisk.add_noisy_triples_into_training"]], "dicee.read_preprocess_save_load_kg": [[23, "module-dicee.read_preprocess_save_load_kg"]], "load() (dicee.read_preprocess_save_load_kg.loadsavetodisk method)": [[23, "dicee.read_preprocess_save_load_kg.LoadSaveToDisk.load"]], "preprocess_with_byte_pair_encoding() (dicee.read_preprocess_save_load_kg.preprocesskg method)": [[23, "dicee.read_preprocess_save_load_kg.PreprocessKG.preprocess_with_byte_pair_encoding"]], "preprocess_with_byte_pair_encoding_with_padding() (dicee.read_preprocess_save_load_kg.preprocesskg method)": [[23, "dicee.read_preprocess_save_load_kg.PreprocessKG.preprocess_with_byte_pair_encoding_with_padding"]], "preprocess_with_pandas() (dicee.read_preprocess_save_load_kg.preprocesskg method)": [[23, "dicee.read_preprocess_save_load_kg.PreprocessKG.preprocess_with_pandas"]], "preprocess_with_polars() (dicee.read_preprocess_save_load_kg.preprocesskg method)": [[23, "dicee.read_preprocess_save_load_kg.PreprocessKG.preprocess_with_polars"]], "remove_triples_from_train_with_condition() (dicee.read_preprocess_save_load_kg.preprocesskg method)": [[23, "dicee.read_preprocess_save_load_kg.PreprocessKG.remove_triples_from_train_with_condition"]], "save() (dicee.read_preprocess_save_load_kg.loadsavetodisk method)": [[23, "dicee.read_preprocess_save_load_kg.LoadSaveToDisk.save"]], "sequential_vocabulary_construction() (dicee.read_preprocess_save_load_kg.preprocesskg method)": [[23, "dicee.read_preprocess_save_load_kg.PreprocessKG.sequential_vocabulary_construction"]], "start() (dicee.read_preprocess_save_load_kg.preprocesskg method)": [[23, "dicee.read_preprocess_save_load_kg.PreprocessKG.start"]], "start() (dicee.read_preprocess_save_load_kg.readfromdisk method)": [[23, "dicee.read_preprocess_save_load_kg.ReadFromDisk.start"]], "preprocesskg (class in dicee.read_preprocess_save_load_kg.preprocess)": [[24, "dicee.read_preprocess_save_load_kg.preprocess.PreprocessKG"]], "dicee.read_preprocess_save_load_kg.preprocess": [[24, "module-dicee.read_preprocess_save_load_kg.preprocess"]], "preprocess_with_byte_pair_encoding() (dicee.read_preprocess_save_load_kg.preprocess.preprocesskg method)": [[24, "dicee.read_preprocess_save_load_kg.preprocess.PreprocessKG.preprocess_with_byte_pair_encoding"]], "preprocess_with_byte_pair_encoding_with_padding() (dicee.read_preprocess_save_load_kg.preprocess.preprocesskg method)": [[24, "dicee.read_preprocess_save_load_kg.preprocess.PreprocessKG.preprocess_with_byte_pair_encoding_with_padding"]], "preprocess_with_pandas() (dicee.read_preprocess_save_load_kg.preprocess.preprocesskg method)": [[24, "dicee.read_preprocess_save_load_kg.preprocess.PreprocessKG.preprocess_with_pandas"]], "preprocess_with_polars() (dicee.read_preprocess_save_load_kg.preprocess.preprocesskg method)": [[24, "dicee.read_preprocess_save_load_kg.preprocess.PreprocessKG.preprocess_with_polars"]], "remove_triples_from_train_with_condition() (dicee.read_preprocess_save_load_kg.preprocess.preprocesskg method)": [[24, "dicee.read_preprocess_save_load_kg.preprocess.PreprocessKG.remove_triples_from_train_with_condition"]], "sequential_vocabulary_construction() (dicee.read_preprocess_save_load_kg.preprocess.preprocesskg method)": [[24, "dicee.read_preprocess_save_load_kg.preprocess.PreprocessKG.sequential_vocabulary_construction"]], "start() (dicee.read_preprocess_save_load_kg.preprocess.preprocesskg method)": [[24, "dicee.read_preprocess_save_load_kg.preprocess.PreprocessKG.start"]], "readfromdisk (class in dicee.read_preprocess_save_load_kg.read_from_disk)": [[25, "dicee.read_preprocess_save_load_kg.read_from_disk.ReadFromDisk"]], "add_noisy_triples_into_training() (dicee.read_preprocess_save_load_kg.read_from_disk.readfromdisk method)": [[25, "dicee.read_preprocess_save_load_kg.read_from_disk.ReadFromDisk.add_noisy_triples_into_training"]], "dicee.read_preprocess_save_load_kg.read_from_disk": [[25, "module-dicee.read_preprocess_save_load_kg.read_from_disk"]], "start() (dicee.read_preprocess_save_load_kg.read_from_disk.readfromdisk method)": [[25, "dicee.read_preprocess_save_load_kg.read_from_disk.ReadFromDisk.start"]], "loadsavetodisk (class in dicee.read_preprocess_save_load_kg.save_load_disk)": [[26, "dicee.read_preprocess_save_load_kg.save_load_disk.LoadSaveToDisk"]], "dicee.read_preprocess_save_load_kg.save_load_disk": [[26, "module-dicee.read_preprocess_save_load_kg.save_load_disk"]], "load() (dicee.read_preprocess_save_load_kg.save_load_disk.loadsavetodisk method)": [[26, "dicee.read_preprocess_save_load_kg.save_load_disk.LoadSaveToDisk.load"]], "save() (dicee.read_preprocess_save_load_kg.save_load_disk.loadsavetodisk method)": [[26, "dicee.read_preprocess_save_load_kg.save_load_disk.LoadSaveToDisk.save"]], "apply_reciprical_or_noise() (in module dicee.read_preprocess_save_load_kg.util)": [[27, "dicee.read_preprocess_save_load_kg.util.apply_reciprical_or_noise"]], "create_constraints() (in module dicee.read_preprocess_save_load_kg.util)": [[27, "dicee.read_preprocess_save_load_kg.util.create_constraints"]], "create_recipriocal_triples() (in module dicee.read_preprocess_save_load_kg.util)": [[27, "dicee.read_preprocess_save_load_kg.util.create_recipriocal_triples"]], "dataset_sanity_checking() (in module dicee.read_preprocess_save_load_kg.util)": [[27, "dicee.read_preprocess_save_load_kg.util.dataset_sanity_checking"]], "dicee.read_preprocess_save_load_kg.util": [[27, "module-dicee.read_preprocess_save_load_kg.util"]], "get_ee_vocab() (in module dicee.read_preprocess_save_load_kg.util)": [[27, "dicee.read_preprocess_save_load_kg.util.get_ee_vocab"]], "get_er_vocab() (in module dicee.read_preprocess_save_load_kg.util)": [[27, "dicee.read_preprocess_save_load_kg.util.get_er_vocab"]], "get_re_vocab() (in module dicee.read_preprocess_save_load_kg.util)": [[27, "dicee.read_preprocess_save_load_kg.util.get_re_vocab"]], "index_triples_with_pandas() (in module dicee.read_preprocess_save_load_kg.util)": [[27, "dicee.read_preprocess_save_load_kg.util.index_triples_with_pandas"]], "load_numpy_ndarray() (in module dicee.read_preprocess_save_load_kg.util)": [[27, "dicee.read_preprocess_save_load_kg.util.load_numpy_ndarray"]], "load_pickle() (in module dicee.read_preprocess_save_load_kg.util)": [[27, "dicee.read_preprocess_save_load_kg.util.load_pickle"]], "load_with_pandas() (in module dicee.read_preprocess_save_load_kg.util)": [[27, "dicee.read_preprocess_save_load_kg.util.load_with_pandas"]], "read_from_disk() (in module dicee.read_preprocess_save_load_kg.util)": [[27, "dicee.read_preprocess_save_load_kg.util.read_from_disk"]], "read_from_triple_store() (in module dicee.read_preprocess_save_load_kg.util)": [[27, "dicee.read_preprocess_save_load_kg.util.read_from_triple_store"]], "read_with_pandas() (in module dicee.read_preprocess_save_load_kg.util)": [[27, "dicee.read_preprocess_save_load_kg.util.read_with_pandas"]], "read_with_polars() (in module dicee.read_preprocess_save_load_kg.util)": [[27, "dicee.read_preprocess_save_load_kg.util.read_with_polars"]], "save_numpy_ndarray() (in module dicee.read_preprocess_save_load_kg.util)": [[27, "dicee.read_preprocess_save_load_kg.util.save_numpy_ndarray"]], "save_pickle() (in module dicee.read_preprocess_save_load_kg.util)": [[27, "dicee.read_preprocess_save_load_kg.util.save_pickle"]], "timeit() (in module dicee.read_preprocess_save_load_kg.util)": [[27, "dicee.read_preprocess_save_load_kg.util.timeit"]], "dicee.sanity_checkers": [[28, "module-dicee.sanity_checkers"]], "is_sparql_endpoint_alive() (in module dicee.sanity_checkers)": [[28, "dicee.sanity_checkers.is_sparql_endpoint_alive"]], "sanity_checking_with_arguments() (in module dicee.sanity_checkers)": [[28, "dicee.sanity_checkers.sanity_checking_with_arguments"]], "validate_knowledge_graph() (in module dicee.sanity_checkers)": [[28, "dicee.sanity_checkers.validate_knowledge_graph"]], "dicee.scripts": [[29, "module-dicee.scripts"]], "dicee.scripts.index": [[30, "module-dicee.scripts.index"]], "get_default_arguments() (in module dicee.scripts.index)": [[30, "dicee.scripts.index.get_default_arguments"]], "main() (in module dicee.scripts.index)": [[30, "dicee.scripts.index.main"]], "dicee.scripts.run": [[31, "module-dicee.scripts.run"]], "get_default_arguments() (in module dicee.scripts.run)": [[31, "dicee.scripts.run.get_default_arguments"]], "main() (in module dicee.scripts.run)": [[31, "dicee.scripts.run.main"]], "neuralsearcher (class in dicee.scripts.serve)": [[32, "dicee.scripts.serve.NeuralSearcher"]], "app (in module dicee.scripts.serve)": [[32, "dicee.scripts.serve.app"]], "dicee.scripts.serve": [[32, "module-dicee.scripts.serve"]], "get() (dicee.scripts.serve.neuralsearcher method)": [[32, "dicee.scripts.serve.NeuralSearcher.get"]], "get_default_arguments() (in module dicee.scripts.serve)": [[32, "dicee.scripts.serve.get_default_arguments"]], "main() (in module dicee.scripts.serve)": [[32, "dicee.scripts.serve.main"]], "neural_searcher (in module dicee.scripts.serve)": [[32, "dicee.scripts.serve.neural_searcher"]], "retrieve_embeddings() (in module dicee.scripts.serve)": [[32, "dicee.scripts.serve.retrieve_embeddings"]], "root() (in module dicee.scripts.serve)": [[32, "dicee.scripts.serve.root"]], "search() (dicee.scripts.serve.neuralsearcher method)": [[32, "dicee.scripts.serve.NeuralSearcher.search"]], "search_embeddings() (in module dicee.scripts.serve)": [[32, "dicee.scripts.serve.search_embeddings"]], "add_noisy_triples() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.add_noisy_triples"]], "continual_training_setup_executor() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.continual_training_setup_executor"]], "create_experiment_folder() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.create_experiment_folder"]], "create_recipriocal_triples() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.create_recipriocal_triples"]], "deploy_head_entity_prediction() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.deploy_head_entity_prediction"]], "deploy_relation_prediction() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.deploy_relation_prediction"]], "deploy_tail_entity_prediction() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.deploy_tail_entity_prediction"]], "deploy_triple_prediction() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.deploy_triple_prediction"]], "dicee.static_funcs": [[33, "module-dicee.static_funcs"]], "download_file() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.download_file"]], "download_files_from_url() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.download_files_from_url"]], "download_pretrained_model() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.download_pretrained_model"]], "evaluate() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.evaluate"]], "exponential_function() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.exponential_function"]], "get_ee_vocab() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.get_ee_vocab"]], "get_er_vocab() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.get_er_vocab"]], "get_re_vocab() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.get_re_vocab"]], "intialize_model() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.intialize_model"]], "load_json() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.load_json"]], "load_model() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.load_model"]], "load_model_ensemble() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.load_model_ensemble"]], "load_numpy() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.load_numpy"]], "load_pickle() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.load_pickle"]], "numpy_data_type_changer() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.numpy_data_type_changer"]], "random_prediction() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.random_prediction"]], "read_or_load_kg() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.read_or_load_kg"]], "save_checkpoint_model() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.save_checkpoint_model"]], "save_embeddings() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.save_embeddings"]], "save_numpy_ndarray() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.save_numpy_ndarray"]], "save_pickle() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.save_pickle"]], "select_model() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.select_model"]], "store() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.store"]], "timeit() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.timeit"]], "vocab_to_parquet() (in module dicee.static_funcs)": [[33, "dicee.static_funcs.vocab_to_parquet"]], "dicee.static_funcs_training": [[34, "module-dicee.static_funcs_training"]], "efficient_zero_grad() (in module dicee.static_funcs_training)": [[34, "dicee.static_funcs_training.efficient_zero_grad"]], "evaluate_bpe_lp() (in module dicee.static_funcs_training)": [[34, "dicee.static_funcs_training.evaluate_bpe_lp"]], "evaluate_lp() (in module dicee.static_funcs_training)": [[34, "dicee.static_funcs_training.evaluate_lp"]], "create_constraints() (in module dicee.static_preprocess_funcs)": [[35, "dicee.static_preprocess_funcs.create_constraints"]], "dicee.static_preprocess_funcs": [[35, "module-dicee.static_preprocess_funcs"]], "enable_log (in module dicee.static_preprocess_funcs)": [[35, "dicee.static_preprocess_funcs.enable_log"]], "get_ee_vocab() (in module dicee.static_preprocess_funcs)": [[35, "dicee.static_preprocess_funcs.get_ee_vocab"]], "get_er_vocab() (in module dicee.static_preprocess_funcs)": [[35, "dicee.static_preprocess_funcs.get_er_vocab"]], "get_re_vocab() (in module dicee.static_preprocess_funcs)": [[35, "dicee.static_preprocess_funcs.get_re_vocab"]], "mapping_from_first_two_cols_to_third() (in module dicee.static_preprocess_funcs)": [[35, "dicee.static_preprocess_funcs.mapping_from_first_two_cols_to_third"]], "preprocesses_input_args() (in module dicee.static_preprocess_funcs)": [[35, "dicee.static_preprocess_funcs.preprocesses_input_args"]], "timeit() (in module dicee.static_preprocess_funcs)": [[35, "dicee.static_preprocess_funcs.timeit"]], "dice_trainer (class in dicee.trainer.dice_trainer)": [[36, "dicee.trainer.dice_trainer.DICE_Trainer"]], "continual_start() (dicee.trainer.dice_trainer.dice_trainer method)": [[36, "dicee.trainer.dice_trainer.DICE_Trainer.continual_start"]], "dicee.trainer.dice_trainer": [[36, "module-dicee.trainer.dice_trainer"]], "get_callbacks() (in module dicee.trainer.dice_trainer)": [[36, "dicee.trainer.dice_trainer.get_callbacks"]], "initialize_dataloader() (dicee.trainer.dice_trainer.dice_trainer method)": [[36, "dicee.trainer.dice_trainer.DICE_Trainer.initialize_dataloader"]], "initialize_dataset() (dicee.trainer.dice_trainer.dice_trainer method)": [[36, "dicee.trainer.dice_trainer.DICE_Trainer.initialize_dataset"]], "initialize_or_load_model() (dicee.trainer.dice_trainer.dice_trainer method)": [[36, "dicee.trainer.dice_trainer.DICE_Trainer.initialize_or_load_model"]], "initialize_trainer() (dicee.trainer.dice_trainer.dice_trainer method)": [[36, "dicee.trainer.dice_trainer.DICE_Trainer.initialize_trainer"]], "initialize_trainer() (in module dicee.trainer.dice_trainer)": [[36, "dicee.trainer.dice_trainer.initialize_trainer"]], "k_fold_cross_validation() (dicee.trainer.dice_trainer.dice_trainer method)": [[36, "dicee.trainer.dice_trainer.DICE_Trainer.k_fold_cross_validation"]], "start() (dicee.trainer.dice_trainer.dice_trainer method)": [[36, "dicee.trainer.dice_trainer.DICE_Trainer.start"]], "dice_trainer (class in dicee.trainer)": [[37, "dicee.trainer.DICE_Trainer"]], "continual_start() (dicee.trainer.dice_trainer method)": [[37, "dicee.trainer.DICE_Trainer.continual_start"]], "dicee.trainer": [[37, "module-dicee.trainer"]], "initialize_dataloader() (dicee.trainer.dice_trainer method)": [[37, "dicee.trainer.DICE_Trainer.initialize_dataloader"]], "initialize_dataset() (dicee.trainer.dice_trainer method)": [[37, "dicee.trainer.DICE_Trainer.initialize_dataset"]], "initialize_or_load_model() (dicee.trainer.dice_trainer method)": [[37, "dicee.trainer.DICE_Trainer.initialize_or_load_model"]], "initialize_trainer() (dicee.trainer.dice_trainer method)": [[37, "dicee.trainer.DICE_Trainer.initialize_trainer"]], "k_fold_cross_validation() (dicee.trainer.dice_trainer method)": [[37, "dicee.trainer.DICE_Trainer.k_fold_cross_validation"]], "start() (dicee.trainer.dice_trainer method)": [[37, "dicee.trainer.DICE_Trainer.start"]], "torchtrainer (class in dicee.trainer.torch_trainer)": [[38, "dicee.trainer.torch_trainer.TorchTrainer"]], "dicee.trainer.torch_trainer": [[38, "module-dicee.trainer.torch_trainer"]], "extract_input_outputs_set_device() (dicee.trainer.torch_trainer.torchtrainer method)": [[38, "dicee.trainer.torch_trainer.TorchTrainer.extract_input_outputs_set_device"]], "fit() (dicee.trainer.torch_trainer.torchtrainer method)": [[38, "dicee.trainer.torch_trainer.TorchTrainer.fit"]], "forward_backward_update() (dicee.trainer.torch_trainer.torchtrainer method)": [[38, "dicee.trainer.torch_trainer.TorchTrainer.forward_backward_update"]], "ddptrainer (class in dicee.trainer.torch_trainer_ddp)": [[39, "dicee.trainer.torch_trainer_ddp.DDPTrainer"]], "nodetrainer (class in dicee.trainer.torch_trainer_ddp)": [[39, "dicee.trainer.torch_trainer_ddp.NodeTrainer"]], "torchddptrainer (class in dicee.trainer.torch_trainer_ddp)": [[39, "dicee.trainer.torch_trainer_ddp.TorchDDPTrainer"]], "dicee.trainer.torch_trainer_ddp": [[39, "module-dicee.trainer.torch_trainer_ddp"]], "extract_input_outputs() (dicee.trainer.torch_trainer_ddp.ddptrainer method)": [[39, "dicee.trainer.torch_trainer_ddp.DDPTrainer.extract_input_outputs"]], "extract_input_outputs() (dicee.trainer.torch_trainer_ddp.nodetrainer method)": [[39, "dicee.trainer.torch_trainer_ddp.NodeTrainer.extract_input_outputs"]], "fit() (dicee.trainer.torch_trainer_ddp.torchddptrainer method)": [[39, "dicee.trainer.torch_trainer_ddp.TorchDDPTrainer.fit"]], "print_peak_memory() (in module dicee.trainer.torch_trainer_ddp)": [[39, "dicee.trainer.torch_trainer_ddp.print_peak_memory"]], "train() (dicee.trainer.torch_trainer_ddp.ddptrainer method)": [[39, "dicee.trainer.torch_trainer_ddp.DDPTrainer.train"]], "train() (dicee.trainer.torch_trainer_ddp.nodetrainer method)": [[39, "dicee.trainer.torch_trainer_ddp.NodeTrainer.train"]]}})