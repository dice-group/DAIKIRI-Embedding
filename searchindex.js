Search.setIndex({"docnames": ["DBpedia_experiments/ReadMe", "KGEonTabular/README", "autoapi/dicee/abstracts/index", "autoapi/dicee/analyse_experiments/index", "autoapi/dicee/callbacks/index", "autoapi/dicee/config/index", "autoapi/dicee/dataset_classes/index", "autoapi/dicee/eval_static_funcs/index", "autoapi/dicee/evaluator/index", "autoapi/dicee/executer/index", "autoapi/dicee/index", "autoapi/dicee/knowledge_graph/index", "autoapi/dicee/knowledge_graph_embeddings/index", "autoapi/dicee/models/base_model/index", "autoapi/dicee/models/clifford/index", "autoapi/dicee/models/complex/index", "autoapi/dicee/models/dualE/index", "autoapi/dicee/models/function_space/index", "autoapi/dicee/models/index", "autoapi/dicee/models/octonion/index", "autoapi/dicee/models/pykeen_models/index", "autoapi/dicee/models/quaternion/index", "autoapi/dicee/models/real/index", "autoapi/dicee/models/static_funcs/index", "autoapi/dicee/models/transformers/index", "autoapi/dicee/query_generator/index", "autoapi/dicee/read_preprocess_save_load_kg/index", "autoapi/dicee/read_preprocess_save_load_kg/preprocess/index", "autoapi/dicee/read_preprocess_save_load_kg/read_from_disk/index", "autoapi/dicee/read_preprocess_save_load_kg/save_load_disk/index", "autoapi/dicee/read_preprocess_save_load_kg/util/index", "autoapi/dicee/sanity_checkers/index", "autoapi/dicee/scripts/index", "autoapi/dicee/scripts/index/index", "autoapi/dicee/scripts/run/index", "autoapi/dicee/scripts/serve/index", "autoapi/dicee/static_funcs/index", "autoapi/dicee/static_funcs_training/index", "autoapi/dicee/static_preprocess_funcs/index", "autoapi/dicee/trainer/dice_trainer/index", "autoapi/dicee/trainer/index", "autoapi/dicee/trainer/torch_trainer/index", "autoapi/dicee/trainer/torch_trainer_ddp/index", "index", "training_techniques/1vsall", "training_techniques/kvsall", "training_techniques/negative_sampling", "usage/main", "usage/training"], "filenames": ["DBpedia_experiments/ReadMe.md", "KGEonTabular/README.md", "autoapi/dicee/abstracts/index.rst", "autoapi/dicee/analyse_experiments/index.rst", "autoapi/dicee/callbacks/index.rst", "autoapi/dicee/config/index.rst", "autoapi/dicee/dataset_classes/index.rst", "autoapi/dicee/eval_static_funcs/index.rst", "autoapi/dicee/evaluator/index.rst", "autoapi/dicee/executer/index.rst", "autoapi/dicee/index.rst", "autoapi/dicee/knowledge_graph/index.rst", "autoapi/dicee/knowledge_graph_embeddings/index.rst", "autoapi/dicee/models/base_model/index.rst", "autoapi/dicee/models/clifford/index.rst", "autoapi/dicee/models/complex/index.rst", "autoapi/dicee/models/dualE/index.rst", "autoapi/dicee/models/function_space/index.rst", "autoapi/dicee/models/index.rst", "autoapi/dicee/models/octonion/index.rst", "autoapi/dicee/models/pykeen_models/index.rst", "autoapi/dicee/models/quaternion/index.rst", "autoapi/dicee/models/real/index.rst", "autoapi/dicee/models/static_funcs/index.rst", "autoapi/dicee/models/transformers/index.rst", "autoapi/dicee/query_generator/index.rst", "autoapi/dicee/read_preprocess_save_load_kg/index.rst", "autoapi/dicee/read_preprocess_save_load_kg/preprocess/index.rst", "autoapi/dicee/read_preprocess_save_load_kg/read_from_disk/index.rst", "autoapi/dicee/read_preprocess_save_load_kg/save_load_disk/index.rst", "autoapi/dicee/read_preprocess_save_load_kg/util/index.rst", "autoapi/dicee/sanity_checkers/index.rst", "autoapi/dicee/scripts/index.rst", "autoapi/dicee/scripts/index/index.rst", "autoapi/dicee/scripts/run/index.rst", "autoapi/dicee/scripts/serve/index.rst", "autoapi/dicee/static_funcs/index.rst", "autoapi/dicee/static_funcs_training/index.rst", "autoapi/dicee/static_preprocess_funcs/index.rst", "autoapi/dicee/trainer/dice_trainer/index.rst", "autoapi/dicee/trainer/index.rst", "autoapi/dicee/trainer/torch_trainer/index.rst", "autoapi/dicee/trainer/torch_trainer_ddp/index.rst", "index.rst", "training_techniques/1vsall.md", "training_techniques/kvsall.md", "training_techniques/negative_sampling.md", "usage/main.md", "usage/training.md"], "titles": ["Downloading and Preprocessing DBpedia 2022-03 for Knowledge Graph Embeddings", "Knowledge Graph Embedding Boost on Tabular Data", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.abstracts</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.analyse_experiments</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.callbacks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.dataset_classes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.eval_static_funcs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.evaluator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.executer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.knowledge_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.knowledge_graph_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.models.base_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.models.clifford</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.models.complex</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.models.dualE</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.models.function_space</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.models.octonion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.models.pykeen_models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.models.quaternion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.models.real</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.models.static_funcs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.models.transformers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.query_generator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.read_preprocess_save_load_kg</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.read_preprocess_save_load_kg.preprocess</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.read_preprocess_save_load_kg.read_from_disk</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.read_preprocess_save_load_kg.save_load_disk</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.read_preprocess_save_load_kg.util</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.sanity_checkers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.scripts</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.scripts.index</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.scripts.run</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.scripts.serve</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.static_funcs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.static_funcs_training</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.static_preprocess_funcs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.trainer.dice_trainer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.trainer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.trainer.torch_trainer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dicee.trainer.torch_trainer_ddp</span></code>", "Welcome to DICE Embeddings!", "1vsAll Training Technique", "KvsAll Training Technique", "Negative Sampling Technique", "Dicee Manual", "Training"], "terms": {"en": [0, 10, 39, 40, 48], "through": [0, 47], "execut": [0, 5, 6, 10, 47, 48], "follow": [0, 6, 10, 13, 18, 47, 48], "command": [0, 47], "mkdir": [0, 1], "fulldbpedia": 0, "cd": [0, 10, 36, 47], "queri": [0, 10, 12, 25, 36, 43], "curl": [0, 47], "h": [0, 6, 10, 12, 14, 17, 18, 19, 20, 21, 22, 44, 47], "accept": [0, 6, 10, 47], "text": [0, 10, 25], "sparql": 0, "databu": 0, "collect": [0, 6, 10, 13, 18, 25], "snapshot": 0, "csv": [0, 1, 5, 10, 36], "data": [0, 2, 5, 6, 9, 10, 13, 18, 22, 24, 25, 26, 27, 28, 30, 36, 38, 39, 40, 42, 44, 47], "urlencod": 0, "repo": 0, "tail": [0, 10, 12, 18, 20, 21, 37, 47], "n": [0, 1, 2, 6, 10, 12, 14, 16, 18, 47, 48], "2": [0, 1, 6, 9, 10, 12, 13, 14, 17, 18, 20, 21, 30, 38, 39, 40, 47], "sed": 0, "": [0, 2, 4, 6, 10, 13, 18, 34], "g": [0, 1, 5, 6, 10, 12, 13, 14, 18, 24, 26, 27, 36, 44, 47, 48], "while": 0, "IFS": 0, "read": [0, 5, 9, 10, 26, 27, 28, 30, 47, 48], "r": [0, 1, 6, 10, 12, 14, 17, 18, 19, 20, 21, 22, 44, 47], "do": [0, 6, 10, 13, 18, 24], "wget": [0, 47], "done": [0, 10, 12], "f": [0, 10, 12, 13, 14, 15, 17, 18, 19, 21, 24, 44], "mv": [0, 1, 48], "train_": 0, "did": 0, "zip": [0, 47, 48], "dask": [0, 10, 30, 36, 48], "throw": 0, "an": [0, 1, 2, 4, 5, 6, 9, 10, 12, 13, 14, 15, 18, 19, 21, 24, 36, 42, 43], "error": [0, 1], "ar": [0, 4, 5, 6, 8, 10, 13, 14, 18, 24, 30, 38, 47, 48], "same": [0, 9, 10, 14, 18], "format": [0, 47], "bzip2": 0, "train_ontologi": 0, "dev_typ": 0, "pars": 0, "nt": [0, 1, 47], "parsed_sort": 0, "from": [0, 1, 4, 6, 9, 10, 17, 18, 20, 25, 26, 28, 30, 36, 38, 39, 40, 41, 43], "import": [0, 1, 10, 13, 14, 15, 18, 19, 21, 24, 47], "datafram": [0, 10, 26, 27, 30, 36], "ddf": 0, "df": [0, 1, 30], "read_csv": [0, 1], "train": [0, 1, 2, 4, 5, 6, 9, 10, 12, 13, 14, 15, 18, 19, 21, 24, 25, 26, 27, 39, 40, 41, 42, 43], "delim_whitespac": 0, "true": [0, 1, 5, 6, 10, 12, 13, 18, 24, 25, 36, 47], "header": 0, "none": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 20, 22, 24, 25, 26, 27, 28, 30, 31, 34, 36, 39, 40, 41], "usecol": 0, "0": [0, 1, 4, 5, 6, 10, 12, 14, 17, 18, 19, 20, 21, 24, 36, 42, 47, 48], "1": [0, 1, 5, 6, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 24, 25, 39, 40, 42, 47, 48], "name": [0, 2, 5, 10, 13, 18, 36, 48], "subject": 0, "object": [0, 5, 8, 9, 10, 30, 36], "dtype": [0, 1], "str": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 25, 30, 31, 35, 36, 39, 40], "comput": [0, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 24, 37, 39, 40, 41, 47], "print": [0, 10, 14, 18, 47], "len": [0, 10, 18, 20], "127": 0, "738": 0, "988": 0, "to_parquet": 0, "dbpedia_03_2022": 0, "parquet": [0, 48], "engin": 0, "pyarrow": 0, "we": [0, 6, 9, 10, 14, 17, 18, 19, 20, 21, 24, 47, 48], "onli": [0, 5, 6, 9, 10, 13, 18, 24, 47], "interest": 0, "particular": 0, "startswith": 0, "na": 0, "fals": [0, 2, 5, 6, 8, 9, 10, 11, 12, 13, 18, 24, 25, 36, 38], "799873202": 0, "value_count": 0, "wikipagewikilink": 0, "243103258": 0, "www": [0, 47], "w3": [0, 47], "1999": [0, 47], "02": [0, 47], "22": [0, 1, 47], "rdf": [0, 1, 47], "syntax": [0, 47], "type": [0, 2, 4, 5, 6, 8, 10, 12, 36, 41, 42, 47], "149152137": 0, "2002": [0, 47], "07": [0, 47], "owl": [0, 47], "samea": 0, "139366172": 0, "wikipageusestempl": 0, "60755075": 0, "purl": 0, "dc": 0, "term": [0, 10, 17, 18], "34356092": 0, "formerteamm": 0, "teammat": 0, "licencearea": 0, "protect": 0, "adress": 0, "length": [0, 10, 18, 21], "13954": 0, "int64": 0, "525": 0, "065": 0, "591": 0, "463": 0, "352": 0, "549": 0, "121181249": 0, "prov": 0, "wasderivedfrom": 0, "20247486": 0, "imit": 0, "affiliatedclub": 0, "pmid": 0, "usncesdistrictid": 0, "minradiu": 0, "13946": 0, "402": 0, "597": 0, "474": 0, "com": [0, 1, 47], "376": 0, "581": 0, "991": 0, "dbpedia_only_03_2022": [0, 48], "resourc": 0, "716": 0, "559": 0, "847": 0, "149": 0, "586": 0, "877": 0, "735188046": 0, "88831385": 0, "54475293": 0, "2004": 0, "sko": 0, "core": [0, 10, 30, 36], "broader": 0, "50121317": 0, "linguist": 0, "gold": 0, "hypernym": 0, "46107647": 0, "46062877": 0, "clone": [1, 47], "repositori": [1, 47], "git": [1, 47], "http": [1, 6, 10, 16, 18, 22, 36, 39, 40, 47, 48], "github": [1, 47], "dice": 1, "group": [1, 47], "vectograph": 1, "creat": [1, 5, 6, 9, 10, 25, 38, 43, 48], "virtual": 1, "environ": [1, 6, 10], "depend": [1, 10, 25], "pertain": 1, "framework": [1, 43, 47], "conda": [1, 47], "python": [1, 47, 48], "3": [1, 5, 6, 9, 10, 13, 14, 18, 20, 36, 39, 40, 47], "9": [1, 6, 10], "12": [1, 10, 14, 18, 24], "activ": [1, 47], "pip3": [1, 47], "requir": [1, 6, 9, 10, 13, 18, 24, 48], "txt": [1, 5, 47, 48], "e": [1, 5, 6, 10, 12, 13, 14, 17, 18, 19, 21, 24, 26, 27, 30, 36, 47, 48], "fetch": [1, 6, 10], "create_toy_data": 1, "py": [1, 47, 48], "toy_dataset_nam": 1, "remov": [1, 26, 27, 47], "label": [1, 2, 6, 10, 12, 48], "signal": 1, "ensur": [1, 6, 10, 47], "c": [1, 10, 17, 18, 20, 21], "panda": [1, 5, 10, 26, 27, 30, 36, 47], "pd": 1, "index_col": 1, "drop": 1, "column": [1, 26, 27], "inplac": 1, "to_csv": 1, "california_wo_label": 1, "main": [1, 33, 34, 35, 47, 48], "tabularpath": 1, "kg_name": 1, "num_quantil": 1, "10": [1, 5, 10, 12, 47, 48], "min_unique_val_per_column": 1, "4": [1, 6, 9, 10, 18, 20, 47, 48], "prepar": [1, 6, 10, 13, 18], "experi": [1, 3, 5, 10, 36], "folder": [1, 5, 9, 47, 48], "move": [1, 3, 6, 10], "6": [1, 6, 10, 13, 18], "renam": [1, 10, 36], "exampl": [1, 6, 10, 13, 14, 15, 18, 19, 21, 24, 47], "5": [1, 6, 10, 13, 14, 15, 18, 19, 21, 24, 47, 48], "gener": [1, 5, 6, 10, 12, 17, 18, 20, 24, 25, 39, 40, 47, 48], "path_dataset_fold": [1, 48], "model": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 36, 37, 39, 40, 42, 43], "qmult": [1, 10, 18, 21, 47, 48], "embedding_dim": [1, 5, 10, 18, 20, 47, 48], "num_epoch": [1, 2, 4, 5, 9, 42, 47, 48], "save_embeddings_as_csv": [1, 5, 10, 36], "see": [1, 6, 10, 13, 18, 36, 47, 48], "path_kg": 1, "path_tabular_csv": 1, "path_entity_embed": 1, "2022": [1, 47], "06": 1, "16": [1, 10, 13, 14, 18, 47, 48], "27": 1, "18": 1, "133871": 1, "qmult_entity_embed": 1, "linear": [1, 6, 10, 17, 18], "mean": [1, 4, 10, 13, 18, 24, 37, 39, 40, 48], "squar": [1, 5], "1090": 1, "47": 1, "1653": 1, "51": 1, "898": 1, "x": [1, 2, 3, 4, 6, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 30, 36, 44, 47], "20640": 1, "8": [1, 6, 10, 18, 19, 21, 48], "y": [1, 6, 10, 13, 14, 18, 24, 44], "split": [1, 6, 10, 13, 14, 18, 39, 40, 48], "count": [1, 24], "000000": 1, "287544": 1, "std": 1, "823181": 1, "min": [1, 10, 12, 47], "1023": 1, "775281": 1, "25": 1, "1063": 1, "200679": 1, "50": 1, "1093": 1, "047391": 1, "75": 1, "1107": 1, "809817": 1, "max": 1, "1190": 1, "704755": 1, "float64": 1, "32": [1, 5, 10, 12, 47], "883685": 1, "896592": 1, "1571": 1, "634447": 1, "1627": 1, "806948": 1, "1656": 1, "219531": 1, "1666": 1, "211732": 1, "1746": 1, "601478": 1, "40": 1, "226317": 1, "614693": 1, "866": 1, "631540": 1, "879": 1, "495965": 1, "896": 1, "230564": 1, "915": 1, "368515": 1, "929": 1, "895093": 1, "logist": 1, "accuraci": 1, "abstracttrain": [2, 41, 42], "arg": [2, 3, 4, 6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 35, 36, 38, 39, 40, 41, 42, 47], "callback": [2, 5, 10, 13, 18, 39, 40, 41, 42], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 48], "trainer": [2, 4, 5, 6, 9, 10, 13, 18, 34, 36, 47], "knowledg": [2, 4, 5, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 31, 43], "graph": [2, 4, 5, 6, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 31, 43], "embed": [2, 4, 5, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 36, 48], "list": [2, 6, 7, 8, 10, 11, 12, 13, 14, 18, 25, 37, 39, 40, 41, 42], "on_fit_start": [2, 4], "kwarg": [2, 4, 5, 6, 10, 13, 18, 24, 41, 42], "A": [2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 18, 20, 22, 24, 36, 42, 47, 48], "function": [2, 8, 12, 13, 14, 15, 16, 17, 24], "call": [2, 4, 6, 10, 13, 14, 15, 18, 19, 20, 21, 24, 47], "befor": [2, 6, 10, 13, 14, 15, 18, 19, 21, 24], "start": [2, 9, 10, 26, 27, 28, 37, 39, 40, 41, 47], "rtype": [2, 4, 9, 10, 14, 18, 26, 27, 28], "on_fit_end": [2, 4], "ned": 2, "on_train_epoch_end": [2, 4, 13, 18], "end": [2, 4, 9, 10, 13, 18], "epoch": [2, 4, 10, 12, 13, 18, 48], "on_train_batch_end": [2, 4], "each": [2, 4, 6, 10, 12, 14, 17, 18, 24, 25, 37, 39, 40, 48], "mini": [2, 4, 5, 6, 10, 41], "batch": [2, 4, 5, 6, 10, 13, 14, 17, 18, 19, 21, 24, 41], "dure": [2, 4, 5, 9], "static": [2, 4, 10, 12, 13, 15, 18, 19, 21, 25], "save_checkpoint": 2, "full_path": 2, "save": [2, 6, 9, 10, 25, 26, 29, 36], "disk": [2, 6, 9, 10, 25, 26, 28, 36], "baseinteractivekg": [2, 10, 12], "path": [2, 4, 5, 6, 10, 12, 25, 36, 47], "url": [2, 10, 12, 36, 47], "construct_ensembl": [2, 10, 12], "bool": [2, 5, 10, 11, 12, 13, 14, 15, 18, 19, 21, 24, 25, 30, 36, 39, 40], "model_nam": [2, 10, 12, 36], "apply_semantic_constraint": [2, 10, 12], "base": [2, 4, 5, 6, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 30, 38, 41, 42, 48], "us": [2, 5, 6, 10, 13, 17, 18, 20, 24, 30, 41, 42, 47, 48], "interact": [2, 10, 12, 14, 18, 20], "path_of_pretrained_model_dir": 2, "boolean": [2, 10, 13, 14, 15, 18, 19, 21, 24], "properti": [2, 11], "get_eval_report": 2, "dict": [2, 6, 7, 9, 10, 13, 18, 19, 20, 24, 25, 30, 36, 37, 38, 39, 40], "get_bpe_token_represent": 2, "str_entity_or_rel": 2, "int": [2, 4, 5, 6, 10, 11, 12, 14, 18, 24, 25, 30, 36, 42], "correspond": [2, 5, 10, 12, 13, 15, 18], "string": [2, 5, 6, 10, 12, 26, 27, 36], "token": [2, 6, 10, 24], "via": [2, 6, 10, 12, 30, 39, 40, 47], "bpe": 2, "shape": [2, 10, 13, 14, 16, 18, 19, 21, 24], "integ": [2, 6, 10, 13, 14, 17, 18, 26, 27, 30], "contain": [2, 5, 6, 9, 10, 13, 14, 15, 18, 19, 21, 24, 36, 48], "get_padded_bpe_triple_represent": 2, "tripl": [2, 4, 5, 6, 7, 8, 10, 11, 12, 14, 17, 18, 19, 20, 21, 25, 26, 27, 30, 36, 37, 38, 47, 48], "get_domain_of_rel": 2, "rel": 2, "get_range_of_rel": 2, "set_model_train_mod": 2, "set": [2, 6, 10, 12, 13, 18, 25, 47], "mode": [2, 9, 10, 13, 14, 15, 18, 19, 21, 24, 25], "set_model_eval_mod": 2, "eval": [2, 4, 8, 9, 10, 24, 37], "sample_ent": 2, "sample_rel": 2, "is_seen": 2, "entiti": [2, 4, 5, 6, 10, 12, 14, 17, 18, 19, 20, 21, 22, 30, 35, 37, 38, 47], "relat": [2, 4, 5, 6, 9, 10, 12, 14, 17, 18, 19, 20, 21, 22, 30, 36, 38, 47], "get_entity_index": 2, "get_relation_index": 2, "index_tripl": 2, "head_ent": [2, 10, 12], "tail_ent": [2, 10, 12], "torch": [2, 4, 6, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 36, 39, 40, 41, 42], "longtensor": [2, 4, 6, 10, 12, 13, 14, 15, 16, 18, 20, 22, 24], "index": [2, 5, 6, 9, 10, 13, 16, 18, 24, 26, 27, 30, 32, 36], "represent": [2, 5, 6, 10, 12, 18, 21, 36, 47], "select": [2, 10, 12, 14, 18, 39, 40, 41], "pytorch": [2, 6, 10, 12, 13, 15, 18, 24, 36, 39, 40, 47, 48], "tensor": [2, 4, 6, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 41], "score": [2, 5, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 36, 39, 40, 47], "add_new_entity_embed": 2, "entity_nam": 2, "floattensor": [2, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 36], "get_entity_embed": 2, "item": [2, 10, 12], "given": [2, 6, 10, 12, 18, 19, 20, 21, 36], "its": [2, 4, 6, 10, 13, 14, 18], "get_relation_embed": 2, "construct_input_and_output": 2, "construct": [2, 6, 10, 14, 17, 18, 25, 26, 27, 36, 41], "point": [2, 6, 10, 17, 18], "param": [2, 5, 8, 10, 12, 13, 15, 18, 23, 24, 30, 36, 37, 38], "abstractcallback": [2, 4], "abc": 2, "lightn": [2, 6, 10, 13, 18, 39, 40, 48], "on_init_start": 2, "on_init_end": 2, "begin": [2, 4, 6, 10], "abstractppecallback": 2, "epoch_to_start": 2, "last_percent_to_consid": [2, 5], "store_ensembl": 2, "param_ensembl": 2, "thi": [3, 6, 10, 13, 14, 15, 17, 18, 19, 20, 21, 24, 36, 47, 48], "script": [3, 10, 47], "should": [3, 6, 10, 12, 13, 14, 15, 18, 19, 21, 24], "get_default_argu": [3, 33, 34, 35], "save_experi": 3, "to_df": 3, "analys": 3, "accumulateepochlosscallback": 4, "abstract": [4, 6, 10, 12, 18, 20, 25, 41, 42], "store": [4, 5, 6, 9, 10, 26, 27, 30, 36, 38, 42, 47, 48], "loss": [4, 10, 13, 18, 24, 41, 44], "printcallback": 4, "pl_modul": 4, "kgesavecallback": 4, "every_x_epoch": 4, "max_epoch": 4, "on_epoch_end": 4, "pseudolabellingcallback": 4, "data_modul": 4, "kg": [4, 6, 8, 9, 10, 11, 12, 26, 27, 28, 29, 39, 40, 47], "batch_siz": [4, 5, 6, 7, 10, 12, 14, 17, 18, 47, 48], "create_random_data": 4, "estimate_q": 4, "ep": 4, "estim": [4, 24], "rate": [4, 5, 13, 18], "converg": 4, "q": [4, 5, 10, 14, 18, 35, 47], "sequenc": [4, 10, 13, 18, 24], "esp": 4, "compute_converg": 4, "seq": 4, "i": [4, 5, 6, 9, 10, 12, 13, 14, 15, 17, 18, 19, 21, 24, 26, 27, 30, 37, 47, 48], "aswa": 4, "adapt": [4, 5], "stochast": [4, 5], "weight": [4, 5, 10, 17, 18, 20, 24, 36, 42], "averag": [4, 5, 10, 39, 40], "asw": 4, "keep": 4, "track": [4, 47], "valid": [4, 5, 6, 9, 10, 13, 18, 25, 26, 27, 31, 39, 40, 47, 48], "perform": [4, 10, 14, 17, 18, 23, 39, 40, 47], "updat": [4, 9, 10, 13, 18, 41], "ensembl": [4, 10, 36], "accordingli": 4, "compute_mrr": 4, "float": [4, 5, 6, 10, 11, 12, 24, 30, 36, 41], "get_aswa_state_dict": 4, "decid": 4, "running_model_state_dict": 4, "ensemble_state_dict": 4, "val_running_model": 4, "mrr_updated_ensemble_model": 4, "hard": [4, 42], "softwar": [4, 47], "reject": 4, "epoch_ratio": 4, "krone": [4, 47], "batch_kronecker_product": 4, "b": [4, 10, 13, 14, 17, 18, 21, 24], "kroneck": [4, 47, 48], "product": [4, 10, 14, 17, 18], "matric": 4, "lead": [4, 10, 36, 47], "dimens": [4, 10, 14, 18], "broadcast": 4, "The": [4, 5, 6, 10, 12, 13, 18, 21, 24, 47], "number": [4, 5, 10, 12, 13, 14, 17, 18, 24, 30], "them": [4, 6, 10, 13, 14, 15, 18, 19, 21, 24], "mush": 4, "get_kronecker_triple_represent": 4, "indexed_tripl": [4, 10, 13, 18, 21], "get": [4, 10, 24, 25, 35, 47], "perturb": 4, "level": 4, "input": [4, 5, 6, 9, 12, 14, 17, 24, 26, 27, 38, 39, 40, 41, 44], "ratio": [4, 5, 6, 10], "method": [4, 6, 10, 13, 18, 25], "scaler": 4, "frequenc": [4, 13, 18], "three": [4, 10, 17, 18, 47], "randomli": [4, 10, 36], "replac": 4, "element": [4, 10, 17, 18], "In": [4, 6, 10, 13, 18, 24, 47], "context": 4, "can": [4, 6, 9, 10, 13, 14, 15, 18, 19, 20, 21, 24, 47, 48], "denot": [4, 6, 10, 12], "tupl": [4, 6, 7, 13, 14, 15, 18, 22, 23, 25, 30, 36, 37, 38, 39, 40, 41], "two": [4, 6, 10, 13, 14, 15, 17, 18, 47], "compon": [4, 10, 14, 18], "output": [4, 12, 13, 14, 17, 24, 41], "on_train_batch_start": 4, "batch_idx": [4, 10, 13, 18, 24], "when": [4, 6, 10, 13, 14, 15, 18, 19, 21, 24], "namespac": [5, 10, 36, 47], "argpars": 5, "simpl": 5, "attribut": [5, 8, 13, 14, 15, 18, 19, 21, 24, 26, 28], "implement": [5, 6, 10, 13, 14, 17, 18, 20, 39, 40], "equal": 5, "valu": [5, 10, 13, 14, 15, 18, 21], "provid": [5, 6, 10, 39, 40, 47], "dataset_dir": [5, 11, 47], "test": [5, 6, 8, 9, 10, 13, 18, 26, 27, 39, 40, 47, 48], "file": [5, 6, 9, 10, 18, 22, 36, 47, 48], "facilit": [5, 47], "easi": [5, 10, 36], "usag": [5, 10, 12, 48], "storage_path": [5, 10, 36, 39, 40, 48], "directori": [5, 10, 36, 47], "time": [5, 9, 10, 24, 47], "under": [5, 10, 36, 47], "about": [5, 6, 9, 10, 13, 18], "path_to_store_single_run": [5, 47], "singl": [5, 6, 10, 13, 18, 25, 26, 27, 41, 47, 48], "path_single_kg": [5, 11, 47], "sparql_endpoint": [5, 11, 31, 47], "endpoint": [5, 30, 47], "keci": [5, 10, 14, 18, 36, 47], "kge": [5, 7, 8, 10, 12, 36, 47], "optim": [5, 10, 12, 13, 18, 24, 42, 47], "adam": [5, 47], "64": [5, 48], "size": [5, 6, 10, 13, 14, 17, 18, 19, 21, 47], "continu": [5, 9, 47], "vector": [5, 6, 10, 14, 17, 18, 21, 43], "150": 5, "pass": [5, 6, 10, 13, 16, 18, 24, 25], "over": [5, 10, 12, 17, 18], "1024": [5, 24, 47], "automat": [5, 10, 13, 18, 24], "finder": 5, "techniqu": [5, 10, 17, 18, 47, 48], "appli": [5, 10, 18, 20, 21, 47], "lr": [5, 10, 12, 13, 18, 47], "learn": [5, 9, 10, 13, 14, 17, 18, 22, 43, 48], "add_noise_r": [5, 10, 11, 36], "ad": [5, 8], "random": 5, "dataset": [5, 6, 8, 10, 12, 13, 18, 26, 27, 39, 40, 42, 47, 48], "gpu": [5, 6, 10, 13, 18, 24, 39, 40, 41, 47, 48], "ppe": 5, "backend": [5, 11, 30, 47], "process": [5, 6, 10, 13, 18], "polar": [5, 30, 47], "rdflib": [5, 47], "avail": [5, 13, 18, 26, 28, 47], "torchcputrain": 5, "scoring_techniqu": [5, 6, 10, 47, 48], "kvsall": [5, 6, 10, 14, 16, 18, 36, 47, 48], "neg_ratio": [5, 6, 10], "neg": [5, 6, 10, 12, 14, 16, 18], "negsampl": [5, 47], "training_techniqu": [5, 11], "weight_decai": [5, 24], "decai": 5, "all": [5, 6, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 24, 47, 48], "trainabl": 5, "normal": [5, 10, 13, 18, 20, 21, 24, 36], "layernorm": [5, 24], "batchnorm1d": 5, "init_param": 5, "xavier_norm": 5, "gradient_accumulation_step": 5, "Not": 5, "num_folds_for_cv": [5, 48], "fold": [5, 10, 39, 40, 48], "cv": 5, "eval_model": [5, 11, 30, 47], "train_val_test": [5, 47], "train_val": 5, "evalu": [5, 9, 10, 13, 14, 15, 17, 18, 19, 21, 24, 36, 37, 39, 40, 47, 48], "choic": 5, "save_model_at_every_epoch": 5, "num_cor": [5, 30], "cpu": [5, 6, 9, 10, 39, 40, 41, 47, 48], "load": [5, 6, 9, 10, 25, 26, 29, 30, 36, 39, 40, 43, 44], "random_se": 5, "seed": [5, 6, 9, 10, 25], "sample_triples_ratio": [5, 11, 30], "some": [5, 10, 13, 18, 24], "uniformli": 5, "sampl": [5, 6, 10, 12, 13, 16, 18], "being": 5, "between": [5, 10, 13, 14, 17, 18], "read_only_few": [5, 11, 30], "first": [5, 6, 10, 13, 17, 18, 47], "few": 5, "pykeen_model_kwarg": 5, "addit": [5, 10, 13, 15, 18, 19, 21, 24], "keyword": [5, 13, 18], "argument": [5, 6, 8, 10, 34, 36, 38, 39, 40, 41, 42], "pykeen": [5, 10, 18, 20, 47], "kernel_s": 5, "kernel": 5, "convolut": [5, 10, 15, 18, 19, 21, 47, 48], "oper": [5, 10, 12, 24], "num_of_output_channel": 5, "slice": 5, "featur": 5, "map": [5, 6, 10, 30, 38, 42], "p": [5, 10, 14, 18, 36, 47], "paramet": [5, 6, 7, 8, 13, 15, 17, 19, 21, 22, 24, 30, 36, 41, 47], "clifford": [5, 10, 18, 47], "input_dropout_r": 5, "dropout": [5, 10, 18, 20, 24], "hidden_dropout_r": 5, "hidden": 5, "feature_map_dropout_r": 5, "byte_pair_encod": [5, 6, 10, 11], "byte": [5, 10, 13, 18, 24], "pair": [5, 10, 13, 18], "encod": [5, 10, 13, 18, 24], "wip": 5, "adaptive_swa": [5, 47], "swa": 5, "block_siz": [5, 6, 10, 24], "block": [5, 24], "llm": 5, "continual_learn": 5, "pretrain": [5, 10, 12, 43], "__iter__": 5, "reload_dataset": [6, 10], "form_of_label": [6, 8, 9, 10, 39, 40], "label_smoothing_r": [6, 10, 42], "reload": [6, 10, 13, 18], "construct_dataset": [6, 10], "train_set": [6, 8, 10, 26, 28, 30, 36], "numpi": [6, 8, 10, 12, 13, 18, 22, 30, 36, 38], "ndarrai": [6, 8, 10, 12, 13, 18, 22, 30, 36, 38], "valid_set": [6, 8, 10, 26, 28], "test_set": [6, 8, 10, 26, 28], "ordered_bpe_ent": [6, 8, 10, 13, 18], "train_target_indic": [6, 10], "target_dim": [6, 10], "entity_to_idx": [6, 10, 11, 30, 36], "relation_to_idx": [6, 10, 11, 30], "util": [6, 10, 13, 18, 24, 26, 39, 40, 42], "bpe_negativesamplingdataset": [6, 10], "ordered_shaped_bpe_ent": [6, 10], "repres": [6, 10, 13, 14, 15, 17, 18, 19, 21, 24], "kei": [6, 10, 13, 18, 24], "subclass": [6, 9, 10, 13, 14, 15, 18, 19, 21, 24], "overwrit": [6, 10], "__getitem__": [6, 10], "support": [6, 10, 13, 18, 24, 47], "could": [6, 10, 13, 18], "also": [6, 10, 13, 14, 15, 17, 18, 19, 21, 24, 47], "option": [6, 10, 13, 18, 24], "__len__": [6, 10], "which": [6, 10, 13, 18, 24], "expect": [6, 10], "return": [6, 8, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 36, 37, 38, 39, 40, 41, 42], "mani": [6, 10, 13, 18], "sampler": [6, 10, 13, 18], "default": [6, 10, 13, 18, 24, 47], "dataload": [6, 10, 13, 18, 24, 39, 40, 42], "__getitems__": [6, 10], "speedup": [6, 10], "indic": [6, 10, 12, 24], "yield": [6, 10], "integr": [6, 10], "To": [6, 10, 13, 18, 24, 47, 48], "make": [6, 10, 24], "work": [6, 10, 13, 18, 47], "style": [6, 10], "non": [6, 10, 14, 18, 24], "custom": [6, 10, 13, 18], "must": [6, 10, 13, 14, 15, 18, 19, 21, 24, 48], "idx": [6, 10, 24], "collate_fn": [6, 10], "batch_shaped_bpe_tripl": [6, 10], "multilabeldataset": [6, 10], "train_indices_target": [6, 10], "torch_ordered_shaped_bpe_ent": [6, 10], "multiclassclassificationdataset": [6, 10], "subword_unit": [6, 10], "1vsall": [6, 10, 47, 48], "strategi": [6, 10, 39, 40], "train_set_idx": [6, 10, 38], "entity_idx": [6, 10, 42], "relation_idx": [6, 10, 42], "form": [6, 10, 42, 47], "num_work": [6, 10, 12], "org": [6, 10, 16, 18, 22, 36, 39, 40, 47], "doc": [6, 10, 39, 40], "stabl": [6, 10, 39, 40, 48], "html": [6, 10, 39, 40, 47, 48], "onevsalldataset": [6, 10], "inherit": [6, 10], "let": [6, 10, 14, 18], "d": [6, 10, 12, 13, 14, 17, 18, 21, 24, 47], "defin": [6, 10], "_i": [6, 10], "where": [6, 10, 12, 14, 18, 26, 27, 36, 47], "uniqu": [6, 10], "ha": [6, 10, 13, 18, 21, 24, 47], "been": [6, 10, 18, 21], "multi": [6, 10, 13, 18, 22, 24, 36, 39, 40, 41, 47], "binari": [6, 10], "oral": [6, 10, 12], "y_i": [6, 10, 14, 18], "t": [6, 10, 12, 13, 14, 16, 17, 18, 20, 21, 22, 24, 44, 47], "e_i": [6, 10, 14, 18], "todo": [6, 10, 12, 25, 36], "arrai": [6, 10], "dictonari": [6, 10], "id": [6, 10, 47], "self": [6, 10, 12, 13, 14, 15, 18, 19, 20, 21, 24, 30, 39, 40, 48], "7": [6, 10, 48], "allvsal": [6, 10, 47], "possibl": [6, 10, 18, 19, 21], "henc": [6, 10, 14, 18], "extend": [6, 10, 34, 47], "exist": [6, 10, 47, 48], "add": [6, 10, 13, 18, 26, 27, 30, 36, 48], "without": [6, 10, 13, 14, 17, 18, 47], "kvssampledataset": [6, 10], "num_ent": [6, 10, 18, 20, 30, 37], "num_rel": [6, 10, 30], "neg_sample_ratio": [6, 10, 12], "kvssampl": [6, 10], "At": [6, 10], "subsampl": [6, 10], "new_i": [6, 10], "sum": [6, 10, 14, 17, 18], "neg_sampl": [6, 10], "negsampledataset": [6, 10], "triplepredictiondataset": [6, 10], "collact_fn": [6, 10], "collect_fn": [6, 10], "obtain": [6, 10, 39, 40, 48], "m": [6, 10, 17, 18, 47], "float16": [6, 10], "inttensor": [6, 10], "cvdatamodul": [6, 10], "pytorch_lightn": [6, 10, 34], "lightningdatamodul": [6, 10], "cross": [6, 10, 39, 40, 48], "train_dataload": [6, 10, 13, 18, 41], "iter": [6, 10, 12, 13, 18, 24], "specifi": [6, 10, 13, 18], "For": [6, 10, 13, 14, 18, 24, 39, 40, 47, 48], "more": [6, 10, 13, 18, 47, 48], "inform": [6, 9, 10, 13, 18, 48], "multipl": [6, 10, 13, 14, 17, 18, 23, 24, 48], "section": [6, 10, 13, 18], "you": [6, 10, 13, 14, 15, 18, 19, 21, 24, 47, 48], "unless": [6, 10, 13, 18], "paramref": [6, 10, 13, 18], "reload_dataloaders_every_n_epoch": [6, 10, 13, 18], "posit": [6, 10, 13, 18, 24], "pattern": [6, 10, 13, 18], "download": [6, 10, 13, 16, 18, 43], "prepare_data": [6, 10, 13, 18], "setup": [6, 10, 13, 18], "howev": [6, 10, 13, 18], "abov": [6, 10, 13, 14, 15, 18, 19, 21, 24], "necessari": [6, 9, 10, 13, 18, 47, 48], "distribut": [6, 10, 13, 18, 47], "assign": [6, 10, 13, 14, 15, 18, 19, 21, 24], "state": [6, 10, 13, 18, 47], "fit": [6, 10, 13, 18, 39, 40, 41, 42], "tri": [6, 10, 13, 18], "correct": [6, 10, 13, 18], "arbitrari": [6, 10, 13, 18], "hardwar": [6, 10, 13, 18, 43, 47], "There": [6, 10, 13, 18], "need": [6, 10, 12, 13, 18], "yourself": [6, 10, 13, 18], "predict": [6, 8, 10, 12, 13, 18, 22, 24, 37, 43, 48], "good": [6, 10], "hook": [6, 10, 13, 18], "build": [6, 10, 47], "dynam": [6, 10], "adjust": [6, 10], "someth": [6, 10, 13, 18, 24, 48], "everi": [6, 10, 13, 17, 18], "ddp": [6, 10, 42, 47, 48], "stage": [6, 10], "either": [6, 10, 12, 48], "litmodel": [6, 10], "def": [6, 10, 13, 14, 15, 18, 19, 21, 24], "__init__": [6, 10, 13, 14, 15, 18, 19, 21, 24], "l1": [6, 10], "download_data": [6, 10], "don": [6, 10, 13, 18], "els": [6, 10, 18, 20], "load_data": [6, 10], "nn": [6, 10, 13, 14, 15, 17, 18, 19, 21, 24, 39, 40, 42], "28": [6, 10], "num_class": [6, 10], "transfer_batch_to_devic": [6, 10], "overrid": [6, 10, 13, 18], "your": [6, 10, 13, 14, 15, 18, 19, 21, 24, 48], "wrap": [6, 10], "structur": [6, 10, 13, 14, 15, 18, 19, 21, 24], "below": [6, 10, 13, 18], "ani": [6, 10, 13, 18, 24, 47, 48], "nest": [6, 10, 12, 13, 14, 15, 18, 19, 21, 24, 25], "out": [6, 10, 13, 18, 24], "box": [6, 10], "anyth": [6, 10], "how": [6, 10, 13, 18, 43], "target": [6, 10, 24, 42], "devic": [6, 10, 41, 42], "tpu": [6, 10, 13, 18, 24, 47], "transfer": [6, 10], "modifi": [6, 9, 10], "nor": [6, 10], "other": [6, 10, 13, 14, 15, 18, 19, 21, 24, 47], "than": [6, 10, 47, 48], "one": [6, 10, 13, 18, 44, 47, 48], "know": [6, 10, 13, 18], "what": [6, 10, 13, 18, 47], "check": [6, 10, 38, 47, 48], "current": [6, 9, 10, 47], "so": [6, 10, 24], "differ": [6, 10, 14, 17, 18, 36], "logic": [6, 10, 25], "per": [6, 10, 13, 14, 15, 18, 19, 21, 24], "new": [6, 10], "dataloader_idx": [6, 10, 13, 18, 24], "belong": [6, 10], "refer": [6, 10, 47, 48], "isinst": [6, 10], "custombatch": [6, 10], "elif": [6, 10], "skip": [6, 10, 13, 18, 24], "wish": [6, 10, 47], "super": [6, 10, 13, 14, 15, 18, 19, 21, 24], "rais": [6, 10], "misconfigurationexcept": [6, 10], "If": [6, 10, 12, 13, 18, 47, 48], "ipu": [6, 10], "acceler": [6, 10], "move_data_to_devic": [6, 10], "apply_to_collect": [6, 10], "result": [6, 10, 14, 18, 47, 48], "corrupt": [6, 10], "within": [6, 10, 12], "safe": [6, 10], "NOT": [6, 10], "instead": [6, 10, 14, 18], "sinc": [6, 10, 47], "etc": [6, 10, 13, 14, 15, 18, 19, 21, 24, 48], "bad": [6, 10], "data_split": [6, 10], "some_st": [6, 10], "some_other_st": [6, 10], "wai": [6, 10, 13, 14, 15, 18, 19, 21, 24], "prepare_data_per_nod": [6, 10], "onc": [6, 10], "node": [6, 10, 41, 47], "local_rank": [6, 10], "total": [6, 10], "global_rank": [6, 10], "litdatamodul": [6, 10], "great": [6, 10], "share": [6, 10, 12, 24, 47], "system": [6, 10], "request": [6, 10], "initialize_distribut": [6, 10], "val_dataload": [6, 10, 13, 18], "test_dataload": [6, 10, 13, 18], "predict_dataload": [6, 10, 13, 18], "evaluate_link_prediction_perform": 7, "knowledge_graph_embed": [7, 10, 47], "er_vocab": [7, 37], "re_vocab": [7, 37], "evaluate_link_prediction_performance_with_reciproc": 7, "evaluate_link_prediction_performance_with_bpe_reciproc": 7, "within_ent": 7, "evaluate_link_prediction_performance_with_bp": 7, "evaluate_lp_bpe_k_vs_al": [7, 8], "func_triple_to_bpe_represent": [7, 11], "callabl": 7, "str_to_bpe_entity_to_idx": 7, "is_continual_train": [8, 10, 36, 39, 40], "variou": 8, "downstream": 8, "task": [8, 37], "vocab_prepar": 8, "wait": 8, "futur": 8, "executor": [8, 10, 36], "knowledge_graph": [8, 10, 39, 40], "trained_model": [8, 10, 36], "during_train": 8, "eval_rank_of_head_and_tail_ent": 8, "eval_rank_of_head_and_tail_byte_pair_encoded_ent": 8, "eval_with_byt": 8, "raw_train_set": 8, "raw_valid_set": 8, "raw_test_set": 8, "after": [8, 10, 12, 13, 18], "reciproc": [8, 10, 30, 39, 40, 48], "eval_with_bpe_vs_al": 8, "eval_with_vs_al": 8, "evaluate_lp_k_vs_al": 8, "triple_idx": [8, 37], "info": [8, 9, 10, 30, 37], "filter": [8, 10, 12, 37], "link": [8, 10, 13, 18, 37, 43, 48], "evaluate_lp_with_byt": 8, "evaluate_lp": [8, 37], "dummy_ev": 8, "eval_with_data": 8, "continuous_train": [9, 10], "retrain": [9, 10, 12], "preprocess": [9, 10, 26, 30, 44, 47], "serial": [9, 10, 26, 27], "read_or_load_kg": [9, 10, 36], "read_preprocess_index_serialize_data": [9, 10], "memori": [9, 10, 13, 18, 25, 26, 27, 28, 36, 48], "statist": [9, 10], "load_indexed_data": [9, 10], "save_trained_model": [9, 10], "send": [9, 10], "footprint": [9, 10], "stat": [9, 10], "again": [9, 10], "report": [9, 10, 39, 40, 47], "runtim": [9, 10, 48], "write_report": [9, 10], "json": [9, 10, 47], "continuousexecut": 9, "note": [9, 10, 18, 20], "continual_start": [9, 10, 39, 40], "initi": [9, 10, 36, 39, 40], "base_model": [10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 36, 39, 40], "complex": [10, 14, 17, 18, 43, 48], "dual": [10, 18], "function_spac": [10, 18], "octonion": [10, 18], "pykeen_model": [10, 18], "quaternion": [10, 14, 16, 18, 23], "real": [10, 14, 18, 47], "static_func": [10, 18], "transform": [10, 18], "read_preprocess_save_load_kg": 10, "read_from_disk": [10, 26, 30], "save_load_disk": [10, 26], "run": [10, 13, 18, 32, 47], "serv": [10, 32], "dice_train": [10, 40], "torch_train": [10, 40], "torch_trainer_ddp": [10, 40], "analyse_experi": 10, "config": [10, 24, 47], "dataset_class": 10, "eval_static_func": 10, "query_gener": 10, "sanity_check": 10, "static_funcs_train": 10, "static_preprocess_func": 10, "cmult": [10, 14, 18], "basekg": [10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 36, 39, 40], "cl_": [10, 14, 18], "multivector": [10, 14, 18], "mathbf": [10, 14, 18], "a_0": [10, 14, 18], "a_1": [10, 14, 18], "e_1": [10, 14, 18], "b_0": [10, 14, 18], "b_1": [10, 14, 18], "isomorph": [10, 14, 18], "im": [10, 12, 14, 18], "a_0b_1": [10, 14, 18], "e1": [10, 14, 18], "a_2": [10, 14, 18], "e_2": [10, 14, 18], "a_": [10, 14, 18], "b_2": [10, 14, 18], "b_": [10, 14, 18], "a_0b_0": [10, 14, 18], "a_0b_2e_2": [10, 14, 18], "b_12": [10, 14, 18], "a_1b_1": [10, 14, 18], "e_1_e1": [10, 14, 18], "clifford_mul": [10, 14, 18], "mathbb": [10, 14, 18], "ei": [10, 14, 18], "ej": [10, 14, 18], "j": [10, 14, 17, 18], "eje1": [10, 14, 18], "eq": [10, 14, 18], "head_ent_emb": [10, 14, 15, 18, 19, 21, 22], "rel_ent_emb": [10, 14, 15, 18, 19, 21, 22], "tail_ent_emb": [10, 14, 15, 18, 19, 21, 22], "forward_tripl": [10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "forward_k_vs_al": [10, 13, 14, 15, 16, 18, 19, 20, 21, 22], "pyke": [10, 18, 22], "physic": [10, 18, 22], "distmult": [10, 18, 22, 47, 48], "infer": [10, 18, 22], "arxiv": [10, 18, 22], "ab": [10, 18, 22], "1412": [10, 18, 22], "6575": [10, 18, 22], "k_vs_all_scor": [10, 14, 15, 18, 19, 21, 22], "emb_h": [10, 15, 18, 22], "emb_r": [10, 15, 18, 22], "emb_": [10, 15, 18, 22], "forward_k_vs_sampl": [10, 13, 14, 15, 18, 20, 21, 22], "target_entity_idx": [10, 14, 15, 18, 20, 21, 22], "kecibas": [10, 14, 18], "scale": [10, 14, 18, 43, 47], "neural": [10, 13, 14, 15, 17, 18, 19, 21, 22, 24, 47, 48], "network": [10, 13, 14, 15, 17, 18, 19, 21, 24], "modul": [10, 18], "allow": [10, 13, 14, 15, 17, 18, 19, 21, 24, 36, 47, 48], "tree": [10, 13, 14, 15, 18, 19, 21, 24], "regular": [10, 13, 14, 15, 18, 19, 21, 24, 48], "conv1": [10, 13, 14, 15, 18, 19, 21, 24], "conv2d": [10, 13, 14, 15, 18, 19, 21, 24], "20": [10, 13, 14, 15, 18, 19, 21, 24], "conv2": [10, 13, 14, 15, 18, 19, 21, 24], "forward": [10, 13, 14, 15, 16, 18, 19, 21, 24, 41, 48], "relu": [10, 13, 14, 15, 18, 19, 21, 24], "regist": [10, 13, 14, 15, 18, 19, 21, 24], "have": [10, 13, 14, 15, 18, 19, 21, 24, 47, 48], "convert": [10, 13, 14, 15, 18, 19, 21, 24, 25], "too": [10, 13, 14, 15, 18, 19, 21, 24], "As": [10, 13, 14, 15, 18, 19, 21, 24], "parent": [10, 13, 14, 15, 18, 19, 21, 24, 36], "made": [10, 13, 14, 15, 18, 19, 21, 24], "child": [10, 13, 14, 15, 18, 19, 21, 24], "variabl": [10, 12, 13, 14, 15, 18, 19, 21, 24], "whether": [10, 13, 14, 15, 18, 19, 21, 24], "compute_sigma_pp": [10, 14, 18], "hp": [10, 14, 18], "rp": [10, 14, 18], "sigma_": [10, 14, 18], "pp": [10, 14, 18], "sum_": [10, 14, 17, 18, 21], "k": [10, 12, 14, 17, 18, 39, 40, 47], "h_i": [10, 14, 18], "r_k": [10, 14, 18], "h_k": [10, 14, 18], "r_i": [10, 14, 18], "e_k": [10, 14, 18], "captur": [10, 14, 18], "along": [10, 14, 18], "instanc": [10, 13, 14, 18, 26, 27, 36, 41], "e_3": [10, 14, 18], "loop": [10, 13, 14, 17, 18, 42], "rang": [10, 14, 17, 18, 30, 38, 47], "append": [10, 13, 14, 18], "sigma_pp": [10, 14, 18], "stack": [10, 13, 14, 18], "dim": [10, 14, 18, 21], "assert": [10, 14, 18, 47], "yet": [10, 14, 18, 21, 47], "would": [10, 14, 18, 24, 48], "quit": [10, 14, 18], "ineffici": [10, 14, 18], "e1e1": [10, 14, 18], "e1e2": [10, 14, 18], "e1e3": [10, 14, 18], "e2e1": [10, 14, 18], "e2e2": [10, 14, 18], "e2e3": [10, 14, 18], "e3e1": [10, 14, 18], "e3e2": [10, 14, 18], "e3e3": [10, 14, 18], "Then": [10, 14, 18], "triangular": [10, 14, 18], "matrix": [10, 14, 17, 18], "diagon": [10, 14, 18], "compute_sigma_qq": [10, 14, 18], "hq": [10, 14, 18], "rq": [10, 14, 18], "qq": [10, 14, 18], "h_j": [10, 14, 18], "r_j": [10, 14, 18], "e_j": [10, 14, 18], "sigma_qq": [10, 14, 18], "compute_sigma_pq": [10, 14, 18], "sigma_pq": [10, 14, 18], "zero": [10, 14, 18], "apply_coeffici": [10, 14, 18], "h0": [10, 14, 18], "r0": [10, 14, 18], "multipli": [10, 14, 17, 18], "scalar": [10, 14, 18], "coeffici": [10, 14, 17, 18], "clifford_multipl": [10, 14, 18], "our": [10, 14, 18, 34, 47, 48], "cl": [10, 14, 18, 36], "h_0": [10, 14, 18], "r_0": [10, 14, 18], "sigma_0": [10, 14, 18], "sigma_p": [10, 14, 18], "sigma_q": [10, 14, 18], "pq": [10, 14, 18], "construct_cl_multivector": [10, 14, 18], "a0": [10, 14, 18], "ap": [10, 14, 18], "aq": [10, 14, 18], "forward_k_vs_with_explicit": [10, 14, 18], "bpe_head_ent_emb": [10, 14, 18, 19, 21], "bpe_rel_ent_emb": [10, 14, 18, 19, 21], "retriev": [10, 14, 18, 20], "head": [10, 12, 14, 18, 19, 20, 21, 37, 47], "accord": [10, 14, 18], "inner": [10, 14, 18], "funciton": [10, 14, 18], "ident": [10, 14, 18], "trans": [10, 18, 22, 47], "translat": [10, 18, 22], "proceed": [10, 18, 22, 47], "neurip": [10, 18, 22], "cc": [10, 18, 22], "paper": [10, 17, 18, 22, 48], "2013": [10, 18, 22], "1cecc7a77928ca8133fa24680a88d2f9": [10, 18, 22], "pdf": [10, 18, 22, 47], "decal": [10, 14, 18], "cl_pqr": [10, 14, 18], "emb_dim": [10, 14, 18], "take": [10, 14, 17, 18, 24, 37], "divisor": [10, 14, 18], "compute_sigmas_singl": [10, 14, 18], "list_h_emb": [10, 14, 18], "list_r_emb": [10, 14, 18], "list_t_emb": [10, 14, 18], "here": [10, 13, 14, 18, 24], "taken": [10, 14, 18], "s0": [10, 14, 18], "h_0r_0t_0": [10, 14, 18], "s1": [10, 14, 18, 47], "h_ir_it_0": [10, 14, 18], "s2": [10, 14, 18], "h_jr_jt_0": [10, 14, 18], "s3": [10, 14, 18], "h_0r_it_i": [10, 14, 18], "h_ir_0t_i": [10, 14, 18], "s4": [10, 14, 18], "s5": [10, 14, 18], "sigma_0t": [10, 14, 18], "cdot": [10, 14, 18], "t_0": [10, 14, 18], "compute_sigmas_multivect": [10, 14, 18], "h_ir_": [10, 14, 18], "h_": [10, 14, 18], "h_jr_": [10, 14, 18], "sigma_rr": [10, 14, 18], "h_kr_": [10, 14, 18], "h_ir_j": [10, 14, 18], "h_jr_i": [10, 14, 18], "interactionsn": [10, 14, 18], "sigma_pr": [10, 14, 18], "h_ir_k": [10, 14, 18], "h_kr_i": [10, 14, 18], "sigma_qr": [10, 14, 18], "h_jr_k": [10, 14, 18], "h_kr_j": [10, 14, 18], "hk": [10, 14, 18], "rk": [10, 14, 18], "re": [10, 14, 18, 21], "math": [10, 14, 18], "x_iy_": [10, 14, 18], "x_": [10, 14, 18], "x_jy_": [10, 14, 18], "y_j": [10, 14, 18], "compute_sigma_rr": [10, 14, 18], "x_ky_": [10, 14, 18], "y_k": [10, 14, 18], "compute_sigma_pr": [10, 14, 18], "compute_sigma_qr": [10, 14, 18], "oj": [10, 16, 18], "aaai": [10, 16, 18], "php": [10, 16, 18], "articl": [10, 16, 18, 47], "16850": [10, 16, 18], "16657": [10, 16, 18], "kvsall_scor": [10, 16, 18], "e_1_h": [10, 16, 18], "e_2_h": [10, 16, 18], "e_3_h": [10, 16, 18], "e_4_h": [10, 16, 18], "e_5_h": [10, 16, 18], "e_6_h": [10, 16, 18], "e_7_h": [10, 16, 18], "e_8_h": [10, 16, 18], "e_1_t": [10, 16, 18], "e_2_t": [10, 16, 18], "e_3_t": [10, 16, 18], "e_4_t": [10, 16, 18], "e_5_t": [10, 16, 18], "e_6_t": [10, 16, 18], "e_7_t": [10, 16, 18], "e_8_t": [10, 16, 18], "r_1": [10, 16, 18], "r_2": [10, 16, 18], "r_3": [10, 16, 18], "r_4": [10, 16, 18], "r_5": [10, 16, 18], "r_6": [10, 16, 18], "r_7": [10, 16, 18], "r_8": [10, 16, 18], "idx_tripl": [10, 16, 17, 18], "transpos": [10, 16, 18], "nxm": [10, 16, 18], "mxn": [10, 16, 18], "aconex": [10, 15, 18, 47], "residual_convolut": [10, 15, 18, 19, 21], "c_1": [10, 15, 18], "c_2": [10, 15, 18], "residu": [10, 15, 18], "aconvo": [10, 18, 19], "octonion_norm": [10, 18, 19], "emb_rel_e0": [10, 18, 19], "emb_rel_e1": [10, 18, 19], "emb_rel_e2": [10, 18, 19], "emb_rel_e3": [10, 18, 19], "emb_rel_e4": [10, 18, 19], "emb_rel_e5": [10, 18, 19], "emb_rel_e6": [10, 18, 19], "emb_rel_e7": [10, 18, 19], "o_1": [10, 18, 19], "o_2": [10, 18, 19], "aconvq": [10, 18, 21], "q_1": [10, 18, 21, 23], "q_2": [10, 18, 21, 23], "convq": [10, 18, 21, 47, 48], "convo": [10, 18, 19, 47, 48], "conex": [10, 15, 18, 47, 48], "quaternion_multiplication_followed_by_inner_product": [10, 18, 21], "batch_dim": [10, 18, 21], "quaternion_norm": [10, 18, 21], "constraint": [10, 18, 21, 30, 38], "absolut": [10, 18, 21], "bi": [10, 18, 21], "cj": [10, 18, 21], "dk": [10, 18, 21], "sqrt": [10, 18, 21], "l2": [10, 18, 21], "norm": [10, 12, 18, 21, 47], "x_i": [10, 18, 21], "im_1": [10, 18, 21], "im_2": [10, 18, 21], "im_3": [10, 18, 21], "complet": [10, 18, 19, 21, 24], "omult": [10, 18, 19, 47, 48], "shallom": [10, 18, 22, 47, 48], "shallow": [10, 18, 22, 47], "2101": [10, 18, 22], "09090": [10, 18, 22], "get_embed": [10, 13, 18, 22], "lfmult": [10, 17, 18], "polynomi": [10, 17, 18], "space": [10, 17, 18], "a_k": [10, 17, 18], "consid": [10, 17, 18], "combin": [10, 17, 18, 47, 48], "construct_multi_coeff": [10, 17, 18], "poly_nn": [10, 17, 18], "coefh": [10, 17, 18], "coefr": [10, 17, 18], "coeft": [10, 17, 18], "layer": [10, 17, 18, 24], "sigma": [10, 17, 18], "wh": [10, 17, 18], "bh": [10, 17, 18], "wr": [10, 17, 18], "br": [10, 17, 18], "wt": [10, 17, 18], "bt": [10, 17, 18], "w": [10, 17, 18], "scalar_batch_nn": [10, 17, 18], "wise": [10, 17, 18], "tri_scor": [10, 17, 18], "coeff_h": [10, 17, 18], "coeff_r": [10, 17, 18], "coeff_t": [10, 17, 18], "part": [10, 17, 18], "trilinear": [10, 17, 18], "int_": [10, 17, 18], "dx": [10, 17, 18], "dfrac": [10, 17, 18], "a_i": [10, 17, 18], "b_j": [10, 17, 18], "c_k": [10, 17, 18], "parallel": [10, 17, 18, 39, 40, 42, 47], "vtp_score": [10, 17, 18], "c_j": [10, 17, 18], "b_k": [10, 17, 18], "b_i": [10, 17, 18], "second": [10, 13, 17, 18], "denomin": [10, 17, 18], "comp_func": [10, 17, 18], "composit": [10, 17, 18], "hor": [10, 17, 18], "coeff": [10, 17, 18], "degre": [10, 17, 18], "pop": [10, 17, 18], "u": [10, 17, 18, 47, 48], "polynom": [10, 17, 18], "pykeenkg": [10, 18, 20], "pykeen_distmult": [10, 18, 20], "pykeen_complex": [10, 18, 20], "pykeen_qu": [10, 18, 20], "pykeen_mur": [10, 18, 20], "pykeen_cp": [10, 18, 20], "pykeen_hol": [10, 18, 20], "explicit": [10, 18, 20], "version": [10, 18, 20, 47], "bn": [10, 18, 20], "get_head_relation_represent": [10, 13, 18, 20], "reshap": [10, 18, 20], "last_dim": [10, 18, 20], "entity_embed": [10, 18, 20], "score_t": [10, 18, 20], "all_ent": [10, 18, 20], "slice_s": [10, 18, 20], "get_triple_represent": [10, 13, 18, 20], "slice_dim": [10, 18, 20], "loss_funct": [10, 13, 18, 24], "yhat_batch": [10, 13, 18, 24], "y_batch": [10, 13, 18, 24, 41], "max_new_token": [10, 24], "temperatur": [10, 24], "top_k": [10, 12, 24, 36, 47], "condit": [10, 13, 18, 24, 26, 27], "feed": [10, 24, 48], "back": [10, 24], "most": [10, 24, 36, 47, 48], "like": [10, 13, 18, 24, 47], "ll": [10, 24], "want": [10, 24, 47, 48], "sure": [10, 24], "training_step": [10, 13, 18, 24], "metric": [10, 13, 18, 24, 48], "progress": [10, 13, 18, 24], "bar": [10, 13, 18, 24], "logger": [10, 13, 18, 24], "produc": [10, 13, 18, 24, 42], "dictionari": [10, 13, 18, 24, 41], "includ": [10, 12, 13, 18, 24, 48], "case": [10, 13, 18, 24], "next": [10, 13, 18, 24], "deepspe": [10, 13, 18, 24, 47], "manual": [10, 13, 18, 24, 43], "special": [10, 13, 18, 24], "step": [10, 13, 18, 24, 44], "calcul": [10, 13, 18, 24], "fancier": [10, 13, 18, 24], "thing": [10, 13, 18, 24, 47], "specif": [10, 13, 18, 24], "z": [10, 13, 18, 24, 42, 47], "switch": [10, 13, 18, 24], "control": [10, 13, 18, 24], "automatic_optim": [10, 13, 18, 24], "gan": [10, 13, 18, 24], "opt1": [10, 13, 18, 24], "opt2": [10, 13, 18, 24], "decod": [10, 13, 18, 24], "accumulate_grad_batch": [10, 13, 18, 24], "intern": [10, 13, 18, 24, 47], "basekgelightn": [10, 13, 18], "forward_byte_pair_encoded_k_vs_al": [10, 13, 18], "forward_byte_pair_encoded_tripl": [10, 13, 18], "predictor": [10, 13, 18], "init_params_with_sanity_check": [10, 13, 18], "y_idx": [10, 13, 18], "idx_hrt": [10, 13, 18], "get_sentence_represent": [10, 13, 18], "get_bpe_head_and_relation_represent": [10, 13, 18], "create_recipriocal_tripl": [10, 30, 36], "invers": [10, 30, 36], "get_er_vocab": [10, 30, 36, 38], "file_path": [10, 30, 36], "get_re_vocab": [10, 30, 36, 38], "get_ee_vocab": [10, 30, 36, 38], "timeit": [10, 30, 36, 38], "func": [10, 30, 36, 38], "save_pickl": [10, 30, 36], "load_pickl": [10, 30, 36], "select_model": [10, 36], "load_model": [10, 36], "path_of_experiment_fold": [10, 36], "pt": [10, 36], "verbos": [10, 36], "load_model_ensembl": [10, 36], "Of": [10, 36], "detect": [10, 36, 47], "accumul": [10, 36], "insert": [10, 36], "save_numpy_ndarrai": [10, 30, 36], "numpy_data_type_chang": [10, 36], "num": [10, 36], "effici": [10, 36], "save_checkpoint_model": [10, 36], "full_storage_path": [10, 36], "access": [10, 13, 18, 36], "add_noisy_tripl": [10, 36], "intialize_model": [10, 36], "load_json": [10, 36], "save_embed": [10, 36], "random_predict": [10, 36], "pre_trained_kg": [10, 36, 47], "deploy_triple_predict": [10, 36], "str_subject": [10, 36], "str_predic": [10, 36], "str_object": [10, 36], "deploy_tail_entity_predict": [10, 36], "deploy_head_entity_predict": [10, 36], "deploy_relation_predict": [10, 36], "vocab_to_parquet": [10, 36], "vocab_to_idx": [10, 36], "path_for_seri": [10, 11, 36], "print_into": [10, 36], "create_experiment_fold": [10, 36], "folder_nam": [10, 36], "continual_training_setup_executor": [10, 36], "subdirectori": [10, 36], "exponential_funct": [10, 36], "lam": [10, 36], "ascending_ord": [10, 36], "load_numpi": [10, 36], "easy_answ": [10, 36], "hard_answ": [10, 36], "hop": [10, 12, 36, 47], "answer": [10, 12, 25, 36, 43], "download_fil": [10, 36], "destination_fold": [10, 36], "download_files_from_url": [10, 36], "base_url": [10, 36], "research": [10, 36, 47, 48], "project": [10, 36, 47], "diceembed": [10, 36, 47], "kinship": [10, 36, 47], "dim128": [10, 36, 47], "epoch256": [10, 36, 47], "download_pretrained_model": [10, 36], "readthedoc": [10, 39, 40, 48], "io": [10, 39, 40, 48], "common": [10, 39, 40], "distributeddataparallel": [10, 39, 40, 42], "initialize_train": [10, 39, 40], "initialize_or_load_model": [10, 39, 40], "initialize_dataload": [10, 39, 40], "initialize_dataset": [10, 39, 40], "k_fold_cross_valid": [10, 39, 40], "configur": [10, 13, 18, 39, 40], "rank": [10, 12, 37, 39, 40, 47, 48], "mrr": [10, 39, 40, 47, 48], "respect": [10, 39, 40, 48], "pre": [10, 12, 47], "get_transductive_entity_embed": [10, 12], "as_pytorch": [10, 12], "as_numpi": [10, 12], "as_list": [10, 12], "create_vector_databas": [10, 12], "collection_nam": [10, 12, 47], "distanc": [10, 12], "locat": [10, 12, 47, 48], "localhost": [10, 12, 47], "port": [10, 12], "6333": [10, 12, 47], "__str__": [10, 12], "eval_lp_perform": [10, 12], "predict_missing_head_ent": [10, 12], "top": [10, 12], "argmax_": [10, 12], "union": [10, 12], "highest": [10, 12], "predict_missing_rel": [10, 12], "predict_missing_tail_ent": [10, 12], "logit": [10, 12], "predict_topk": [10, 12, 47], "topk": [10, 12, 47], "miss": [10, 12, 37, 43], "triple_scor": [10, 12], "unnorm": [10, 12], "t_norm": [10, 12], "tens_1": [10, 12], "tens_2": [10, 12], "tnorm": [10, 12, 47], "tensor_t_norm": [10, 12], "subquery_scor": [10, 12], "t_conorm": [10, 12], "tconorm": [10, 12], "negnorm": [10, 12], "lambda_": [10, 12], "neg_norm": [10, 12], "standard": [10, 12, 37, 47, 48], "return_multi_hop_query_result": [10, 12], "aggregated_query_for_all_ent": [10, 12], "only_scor": [10, 12], "single_hop_query_answ": [10, 12], "answer_multi_hop_queri": [10, 12, 47], "query_typ": [10, 12, 25, 47], "ellipsi": [10, 12], "prod": [10, 12], "refactor": [10, 12], "find": [10, 12], "epfo": [10, 12], "negat": [10, 12], "disjunct": [10, 12], "2p": [10, 12, 47], "itself": [10, 12], "lambda": [10, 12], "sugeno": [10, 12], "yager": [10, 12], "substitut": [10, 12], "intermedi": [10, 12], "sort": [10, 12], "descen": [10, 12], "order": [10, 12], "find_missing_tripl": [10, 12], "confid": [10, 12], "at_most": [10, 12], "sy": [10, 12], "maxsiz": [10, 12], "otin": [10, 12], "threshold": [10, 12], "sigmoid": [10, 12], "stop": [10, 12, 13, 18], "land": [10, 12, 47], "deploi": [10, 12, 43], "train_tripl": [10, 12], "train_k_vs_al": [10, 12], "001": [10, 12], "v": [10, 12, 47], "mapping_from_first_two_cols_to_third": [10, 38], "querygener": [10, 25], "train_path": [10, 25], "val_path": [10, 25], "test_path": [10, 25], "ent2id": [10, 25], "rel2id": [10, 25], "gen_valid": [10, 25], "gen_test": [10, 25], "list2tupl": [10, 25], "list_data": [10, 25], "tuple2list": [10, 25], "set_global_se": [10, 25], "construct_graph": [10, 25], "incom": [10, 25], "outgo": [10, 25], "edg": [10, 25], "fill_queri": [10, 25], "query_structur": [10, 25], "ent_in": [10, 25], "ent_out": [10, 25], "privat": [10, 25], "achieve_answ": [10, 25], "document": [10, 25], "code": [10, 25, 47], "write_link": [10, 25], "small_ent_out": [10, 25], "ground_queri": [10, 25], "small_ent_in": [10, 25], "gen_num": [10, 25], "query_nam": [10, 25], "achiev": [10, 25, 47], "unmap": [10, 25], "tp_answer": [10, 25], "fp_answer": [10, 25], "fn_answer": [10, 25], "unmap_queri": [10, 25], "id2ent": [10, 25], "id2rel": [10, 25], "generate_queri": [10, 25], "query_struct": [10, 25], "ground": [10, 25], "struct": [10, 25], "save_queri": [10, 25], "save_path": [10, 25], "load_queri": [10, 25], "get_queri": [10, 25], "save_queries_and_answ": [10, 25], "defaultdict": [10, 25], "load_queries_and_answ": [10, 25], "__version__": 10, "pad": 11, "path_for_deseri": 11, "add_recipr": [11, 30], "entities_str": 11, "relations_str": 11, "lightningmodul": [13, 18], "submodul": [13, 14, 15, 19, 21, 24, 43], "mem_of_model": [13, 18], "mb": [13, 18], "veri": [13, 18], "cach": [13, 18], "mylightningmodul": [13, 18], "l": [13, 18, 44, 48], "training_step_output": [13, 18], "epoch_mean": [13, 18], "log": [13, 18], "training_epoch_mean": [13, 18], "free": [13, 18, 47], "up": [13, 18], "clear": [13, 18], "test_epoch_end": [13, 18], "test_step": [13, 18], "It": [13, 18], "recommend": [13, 18], "happen": [13, 18], "validation_step": [13, 18], "configure_optim": [13, 18, 24], "choos": [13, 18, 47], "schedul": [13, 18], "But": [13, 18], "similar": [13, 18, 47], "might": [13, 18], "lr_scheduler_config": [13, 18], "lr_schedul": [13, 18], "whose": [13, 18], "associ": [13, 18], "shown": [13, 18], "unit": [13, 18, 24], "wherea": [13, 18], "interv": [13, 18], "monitor": [13, 18], "reducelronplateau": [13, 18], "val_loss": [13, 18], "enforc": [13, 18], "thu": [13, 18], "found": [13, 18], "warn": [13, 18, 47], "strict": [13, 18], "learningratemonitor": [13, 18], "simpli": [13, 18, 24], "metric_to_track": [13, 18], "metric_v": [13, 18], "backward": [13, 18, 41], "bit": [13, 18], "precis": [13, 18, 48], "handl": [13, 18], "lbfg": [13, 18], "closur": [13, 18], "often": [13, 18, 48], "optimizer_step": [13, 18], "identityclass": [13, 18], "__call__": [13, 18], "fmult": [17, 18], "compute_func": [17, 18], "chain_func": [17, 18], "gfmult": [17, 18], "fmult2": [17, 18], "build_func": [17, 18], "vec": [17, 18], "build_chain_func": [17, 18], "list_vec": [17, 18], "list_w": [17, 18], "list_b": [17, 18], "trapezoid": [17, 18], "lfmult1": [17, 18], "trigonometr": [17, 18], "wk": [17, 18], "kix": [17, 18], "quaternion_mul": [18, 23], "quaternion_mul_with_unit_norm": [18, 21], "octonion_mul": [18, 19], "octonion_mul_norm": [18, 19], "ndim": 24, "bia": 24, "doesn": 24, "causalselfattent": 24, "mlp": 24, "gptconfig": 24, "vocab_s": 24, "50304": 24, "n_layer": 24, "n_head": 24, "n_embd": 24, "768": [24, 48], "gpt": 24, "get_num_param": 24, "non_embed": 24, "subtract": 24, "except": 24, "due": 24, "actual": 24, "final": 24, "crop_block_s": 24, "classmethod": 24, "from_pretrain": 24, "model_typ": 24, "override_arg": 24, "learning_r": 24, "beta": 24, "device_typ": 24, "estimate_mfu": 24, "fwdbwd_per_it": 24, "dt": 24, "flop": 24, "mfu": 24, "a100": 24, "bfloat16": 24, "peak": 24, "preprocesskg": [26, 27], "preprocess_with_byte_pair_encod": [26, 27], "preprocess_with_byte_pair_encoding_with_pad": [26, 27], "preprocess_with_panda": [26, 27], "reciprioc": [26, 27], "noisi": [26, 27, 30], "vocabulari": [26, 27], "preprocess_with_polar": [26, 27], "sequential_vocabulary_construct": [26, 27], "uri": [26, 27], "remove_triples_from_train_with_condit": [26, 27], "loadsavetodisk": [26, 29], "readfromdisk": [26, 28], "add_noisy_triples_into_train": [26, 28], "apply_reciprical_or_nois": 30, "read_with_polar": 30, "data_path": 30, "read_with_panda": 30, "read_from_triple_stor": 30, "create_constraint": [30, 38], "extract": [30, 38], "domain": [30, 38], "outsid": [30, 38], "crete": 30, "load_with_panda": 30, "deseri": 30, "load_numpy_ndarrai": 30, "index_triples_with_panda": 30, "frame": 30, "dataset_sanity_check": 30, "is_sparql_endpoint_al": 31, "validate_knowledge_graph": 31, "sanity_checking_with_argu": 31, "descript": 34, "app": 35, "neural_search": 35, "async": 35, "root": 35, "search_embed": 35, "retrieve_embed": 35, "neuralsearch": 35, "search": 35, "class": [36, 47], "evaluate_bpe_lp": 37, "all_bpe_shaped_ent": 37, "efficient_zero_grad": 37, "enable_log": 38, "preprocesses_input_arg": 38, "saniti": 38, "get_callback": 39, "torchtrain": 41, "empti": 41, "forward_backward_upd": 41, "x_batch": 41, "extract_input_outputs_set_devic": 41, "put": 41, "print_peak_memori": 42, "prefix": 42, "torchddptrain": 42, "drive": 42, "infin": 42, "outlier": 42, "enorm": 42, "gradient": 42, "nodetrain": 42, "train_dataset_load": 42, "extract_input_output": 42, "ddptrainer": 42, "gpu_id": 42, "agnost": [43, 47], "larg": [43, 47, 48], "instal": 43, "databas": 43, "qdrant": 43, "launch": 43, "webservic": 43, "docker": 43, "cite": 43, "subpackag": 43, "packag": [43, 47], "hot": 44, "publish": 47, "maintain": 47, "caglar": 47, "demir": 47, "contact": [47, 48], "upb": 47, "de": 47, "licens": 47, "osi": 47, "approv": 47, "mit": 47, "mainli": 47, "focus": 47, "toward": 47, "problem": 47, "recent": 47, "develop": 47, "effect": 47, "wide": 47, "applic": 47, "world": 47, "becom": 47, "challeng": 47, "grow": 47, "manner": 47, "goal": 47, "reli": [47, 48], "co": 47, "cluster": 47, "huggingfac": 47, "eas": 47, "deploy": 47, "why": 47, "liter": 47, "modin": 47, "billion": 47, "fashion": 47, "importantli": 47, "well": 47, "popular": 47, "machin": 47, "write": 47, "pytorchlightn": 47, "procedur": 47, "boilerpl": 47, "user": 47, "art": 47, "fulli": [47, 48], "shard": 47, "fairscal": 47, "extra": 47, "effort": 47, "With": 47, "practition": 47, "directli": 47, "gigant": 47, "hug": 47, "face": 47, "gradio": 47, "line": 47, "13": 47, "pip": 47, "certif": 47, "unzip": 47, "pytest": 47, "114": 47, "15": 47, "lf": 47, "last": 47, "fail": 47, "ff": 47, "failur": 47, "rest": 47, "44": 47, "pleas": [47, 48], "uml": [47, 48], "benchmark": [47, 48], "keci_uml": 47, "100": 47, "9912": 47, "8155": 47, "acquired_abnorm": 47, "location_of": 47, "experimental_model_of_diseas": 47, "anatomical_abnorm": 47, "manifestation_of": 47, "physiologic_funct": 47, "alga": 47, "isa": 47, "automaticali": 47, "hood": 47, "lighn": 47, "cuda_visible_devic": 47, "nccl_p2p_disabl": 47, "pl": 47, "equival": 47, "9518788343558282": 47, "9988496932515337": 47, "9753123402351737": 47, "6932515337423313": 47, "9041411042944786": 47, "9754601226993865": 47, "8072362996241839": 47, "6951588502269289": 47, "9039334341906202": 47, "9750378214826021": 47, "8064032293278861": 47, "similarli": 47, "easili": 47, "torchrun": 47, "standalon": 47, "nnode": 47, "nproc_per_nod": 47, "torchddp": 47, "8072499937521418": 47, "node_rank": 47, "rdzv_id": 47, "455": 47, "rdzv_backend": 47, "c10d": 47, "rdzv_endpoint": 47, "nebula": 47, "newli": 47, "kecifamilyrun": 47, "famili": [47, 48], "benchmark_rich_background": 47, "_": 47, "ontologi": 47, "haschild": 47, "objectproperti": 47, "haspar": 47, "apart": 47, "turtl": 47, "xml": 47, "n3": 47, "moreov": [47, 48], "3030": 47, "mutagenesi": 47, "countri": 47, "countryembed": 47, "pull": 47, "6334": 47, "pwd": 47, "qdrant_storag": 47, "storag": 47, "diceeindex": 47, "path_model": 47, "dummi": 47, "diceeserv": 47, "collection_loc": 47, "germani": 47, "8000": 47, "api": 47, "europ": 47, "hit": 47, "northern_europ": 47, "67126536": 47, "western_europ": 47, "6010134": 47, "puerto_rico": 47, "5051694": 47, "southern_europ": 47, "4829831": 47, "200": 47, "512": 47, "path_experiment_fold": 47, "hassibl": 47, "f9m167": 47, "question": 47, "who": 47, "sibl": 47, "f9m157": 47, "f9f141": 47, "1p": 47, "top_ent": 47, "topk_ent": 47, "query_scor": 47, "marri": 47, "whom": 47, "f9f158": 47, "f9m142": 47, "peopl": 47, "person": 47, "male": 47, "father": 47, "brother": 47, "grandfath": 47, "3p": 47, "multi_hop_query_answ": 47, "dbpedia": 47, "look": 47, "imag": 47, "rm": 47, "local": 47, "manuscript": 47, "describ": 47, "realli": 47, "now": 47, "feel": 47, "chose": 47, "inproceed": 47, "demir2023clifford": 47, "titl": 47, "approach": [47, 48], "algebra": 47, "author": 47, "ngonga": 47, "ngomo": 47, "axel": 47, "cyril": 47, "booktitl": 47, "joint": 47, "european": 47, "confer": [47, 48], "discoveri": 47, "page": 47, "567": 47, "582": 47, "year": 47, "2023": 47, "organ": 47, "springer": 47, "litcqd": 47, "demir2023litcqd": 47, "reason": 47, "incomplet": 47, "numer": 47, "wiebesiek": 47, "michel": 47, "lu": 47, "renzhong": 47, "heindorf": 47, "stefan": 47, "617": 47, "633": 47, "demir2022hardwar": 47, "journal": 47, "impact": 47, "elsevi": 47, "demir2022kroneck": 47, "decomposit": [47, 48], "lienen": 47, "julian": 47, "33rd": 47, "acm": 47, "hypertext": 47, "social": 47, "media": 47, "pmlr": 47, "v157": 47, "demir21a": 47, "hypercomplex": 47, "moussallem": 47, "diego": 47, "13th": 47, "asian": 47, "656": 47, "671": 47, "2021": 47, "editor": 47, "balasubramanian": 47, "vineeth": 47, "tsang": 47, "ivor": 47, "volum": 47, "157": 47, "seri": 47, "month": 47, "17": 47, "19": 47, "nov": 47, "mlr": 47, "press": 47, "demir2021convolut": 47, "eighteenth": 47, "semant": 47, "web": 47, "openreview": 47, "net": 47, "forum": 47, "6t45": 47, "4tfqax": 47, "demir2021shallow": 47, "ieee": 47, "15th": 47, "icsc": 47, "179": 47, "182": 47, "yago3": 48, "thei": 48, "mai": 48, "100000": 48, "train_split": 48, "orignal_train": 48, "leverag": 48, "separ": 48, "simultan": 48, "larger": 48, "compress": 48, "gz": 48, "bz2": 48, "train1": 48, "train2": 48, "decreas": 48, "reduc": 48, "nois": 48, "tikhonov": 48, "pseudo": 48, "conform": 48, "credal": 48, "supervis": 48, "mind": 48, "favorit": 48, "present": 48, "deviat": 48, "raw": 48, "023": 48, "daikiri_storag": 48, "doe": 48, "fb15k": 48, "237": 48, "wn18rr": 48, "qualiti": 48, "dummyfold": 48, "carcinogenesi": 48, "watch": 48, "nvidia": 48, "smi": 48, "distributed_backend": 48, "advanc": 48, "model_parallel": 48, "plugin": 48, "ddp_fully_shard": 48}, "objects": {"": [[10, 0, 0, "-", "dicee"]], "dicee": [[10, 1, 1, "", "AConEx"], [10, 1, 1, "", "AConvO"], [10, 1, 1, "", "AConvQ"], [10, 1, 1, "", "AllvsAll"], [10, 1, 1, "", "BPE_NegativeSamplingDataset"], [10, 1, 1, "", "BaseKGE"], [10, 1, 1, "", "BytE"], [10, 1, 1, "", "CMult"], [10, 1, 1, "", "CVDataModule"], [10, 1, 1, "", "ComplEx"], [10, 1, 1, "", "ConEx"], [10, 1, 1, "", "ConvO"], [10, 1, 1, "", "ConvQ"], [10, 1, 1, "", "DICE_Trainer"], [10, 1, 1, "", "DeCaL"], [10, 1, 1, "", "DistMult"], [10, 1, 1, "", "DualE"], [10, 1, 1, "", "Execute"], [10, 1, 1, "", "KGE"], [10, 1, 1, "", "Keci"], [10, 1, 1, "", "KeciBase"], [10, 1, 1, "", "KvsAll"], [10, 1, 1, "", "KvsSampleDataset"], [10, 1, 1, "", "LFMult"], [10, 1, 1, "", "MultiClassClassificationDataset"], [10, 1, 1, "", "MultiLabelDataset"], [10, 1, 1, "", "NegSampleDataset"], [10, 1, 1, "", "OMult"], [10, 1, 1, "", "OnevsAllDataset"], [10, 1, 1, "", "Pyke"], [10, 1, 1, "", "PykeenKGE"], [10, 1, 1, "", "QMult"], [10, 1, 1, "", "QueryGenerator"], [10, 1, 1, "", "Shallom"], [10, 1, 1, "", "TransE"], [10, 1, 1, "", "TriplePredictionDataset"], [10, 3, 1, "", "__version__"], [2, 0, 0, "-", "abstracts"], [10, 5, 1, "", "add_noisy_triples"], [3, 0, 0, "-", "analyse_experiments"], [4, 0, 0, "-", "callbacks"], [5, 0, 0, "-", "config"], [10, 5, 1, "", "construct_dataset"], [10, 5, 1, "", "continual_training_setup_executor"], [10, 5, 1, "", "create_experiment_folder"], [10, 5, 1, "", "create_recipriocal_triples"], [6, 0, 0, "-", "dataset_classes"], [10, 5, 1, "", "deploy_head_entity_prediction"], [10, 5, 1, "", "deploy_relation_prediction"], [10, 5, 1, "", "deploy_tail_entity_prediction"], [10, 5, 1, "", "deploy_triple_prediction"], [10, 5, 1, "", "download_file"], [10, 5, 1, "", "download_files_from_url"], [10, 5, 1, "", "download_pretrained_model"], [7, 0, 0, "-", "eval_static_funcs"], [10, 5, 1, "", "evaluate"], [8, 0, 0, "-", "evaluator"], [9, 0, 0, "-", "executer"], [10, 5, 1, "", "exponential_function"], [10, 5, 1, "", "get_ee_vocab"], [10, 5, 1, "", "get_er_vocab"], [10, 5, 1, "", "get_re_vocab"], [10, 5, 1, "", "intialize_model"], [11, 0, 0, "-", "knowledge_graph"], [12, 0, 0, "-", "knowledge_graph_embeddings"], [10, 5, 1, "", "load_json"], [10, 5, 1, "", "load_model"], [10, 5, 1, "", "load_model_ensemble"], [10, 5, 1, "", "load_numpy"], [10, 5, 1, "id27", "load_pickle"], [10, 5, 1, "", "mapping_from_first_two_cols_to_third"], [18, 0, 0, "-", "models"], [10, 5, 1, "", "numpy_data_type_changer"], [25, 0, 0, "-", "query_generator"], [10, 5, 1, "", "random_prediction"], [10, 5, 1, "", "read_or_load_kg"], [26, 0, 0, "-", "read_preprocess_save_load_kg"], [10, 5, 1, "", "reload_dataset"], [31, 0, 0, "-", "sanity_checkers"], [10, 5, 1, "", "save_checkpoint_model"], [10, 5, 1, "", "save_embeddings"], [10, 5, 1, "", "save_numpy_ndarray"], [10, 5, 1, "", "save_pickle"], [32, 0, 0, "-", "scripts"], [10, 5, 1, "", "select_model"], [36, 0, 0, "-", "static_funcs"], [37, 0, 0, "-", "static_funcs_training"], [38, 0, 0, "-", "static_preprocess_funcs"], [10, 5, 1, "", "store"], [10, 5, 1, "id0", "timeit"], [40, 0, 0, "-", "trainer"], [10, 5, 1, "", "vocab_to_parquet"]], "dicee.AConEx": [[10, 2, 1, "", "forward_k_vs_all"], [10, 2, 1, "", "forward_k_vs_sample"], [10, 2, 1, "", "forward_triples"], [10, 2, 1, "", "residual_convolution"]], "dicee.AConvO": [[10, 2, 1, "", "forward_k_vs_all"], [10, 2, 1, "", "forward_triples"], [10, 2, 1, "", "octonion_normalizer"], [10, 2, 1, "", "residual_convolution"]], "dicee.AConvQ": [[10, 2, 1, "", "forward_k_vs_all"], [10, 2, 1, "", "forward_triples"], [10, 2, 1, "", "residual_convolution"]], "dicee.AllvsAll": [[10, 2, 1, "", "__getitem__"], [10, 2, 1, "", "__len__"]], "dicee.BPE_NegativeSamplingDataset": [[10, 2, 1, "", "__getitem__"], [10, 2, 1, "", "__len__"], [10, 2, 1, "", "collate_fn"]], "dicee.BaseKGE": [[10, 2, 1, "", "forward"], [10, 2, 1, "", "forward_byte_pair_encoded_k_vs_all"], [10, 2, 1, "", "forward_byte_pair_encoded_triple"], [10, 2, 1, "", "forward_k_vs_all"], [10, 2, 1, "", "forward_k_vs_sample"], [10, 2, 1, "", "forward_triples"], [10, 2, 1, "", "get_bpe_head_and_relation_representation"], [10, 2, 1, "", "get_embeddings"], [10, 2, 1, "", "get_head_relation_representation"], [10, 2, 1, "", "get_sentence_representation"], [10, 2, 1, "", "get_triple_representation"], [10, 2, 1, "", "init_params_with_sanity_checking"]], "dicee.BytE": [[10, 2, 1, "", "forward"], [10, 2, 1, "", "generate"], [10, 2, 1, "", "loss_function"], [10, 2, 1, "", "training_step"]], "dicee.CMult": [[10, 2, 1, "", "clifford_mul"], [10, 2, 1, "", "forward_k_vs_all"], [10, 2, 1, "", "forward_triples"], [10, 2, 1, "", "score"]], "dicee.CVDataModule": [[10, 2, 1, "", "prepare_data"], [10, 2, 1, "", "setup"], [10, 2, 1, "", "train_dataloader"], [10, 2, 1, "", "transfer_batch_to_device"]], "dicee.ComplEx": [[10, 2, 1, "", "forward_k_vs_all"], [10, 2, 1, "", "k_vs_all_score"], [10, 2, 1, "", "score"]], "dicee.ConEx": [[10, 2, 1, "", "forward_k_vs_all"], [10, 2, 1, "", "forward_k_vs_sample"], [10, 2, 1, "", "forward_triples"], [10, 2, 1, "", "residual_convolution"]], "dicee.ConvO": [[10, 2, 1, "", "forward_k_vs_all"], [10, 2, 1, "", "forward_triples"], [10, 2, 1, "", "octonion_normalizer"], [10, 2, 1, "", "residual_convolution"]], "dicee.ConvQ": [[10, 2, 1, "", "forward_k_vs_all"], [10, 2, 1, "", "forward_triples"], [10, 2, 1, "", "residual_convolution"]], "dicee.DICE_Trainer": [[10, 2, 1, "", "continual_start"], [10, 2, 1, "", "initialize_dataloader"], [10, 2, 1, "", "initialize_dataset"], [10, 2, 1, "", "initialize_or_load_model"], [10, 2, 1, "", "initialize_trainer"], [10, 2, 1, "", "k_fold_cross_validation"], [10, 2, 1, "", "start"]], "dicee.DeCaL": [[10, 2, 1, "", "apply_coefficients"], [10, 2, 1, "", "cl_pqr"], [10, 2, 1, "", "compute_sigma_pp"], [10, 2, 1, "", "compute_sigma_pq"], [10, 2, 1, "", "compute_sigma_pr"], [10, 2, 1, "", "compute_sigma_qq"], [10, 2, 1, "", "compute_sigma_qr"], [10, 2, 1, "", "compute_sigma_rr"], [10, 2, 1, "", "compute_sigmas_multivect"], [10, 2, 1, "", "compute_sigmas_single"], [10, 2, 1, "", "construct_cl_multivector"], [10, 2, 1, "", "forward_k_vs_all"], [10, 2, 1, "", "forward_triples"]], "dicee.DistMult": [[10, 2, 1, "", "forward_k_vs_all"], [10, 2, 1, "", "forward_k_vs_sample"], [10, 2, 1, "", "k_vs_all_score"], [10, 2, 1, "", "score"]], "dicee.DualE": [[10, 2, 1, "", "T"], [10, 2, 1, "", "forward_k_vs_all"], [10, 2, 1, "", "forward_triples"], [10, 2, 1, "", "kvsall_score"]], "dicee.Execute": [[10, 2, 1, "", "end"], [10, 2, 1, "", "load_indexed_data"], [10, 2, 1, "", "read_or_load_kg"], [10, 2, 1, "", "read_preprocess_index_serialize_data"], [10, 2, 1, "", "save_trained_model"], [10, 2, 1, "", "start"], [10, 2, 1, "", "write_report"]], "dicee.KGE": [[10, 2, 1, "", "__str__"], [10, 2, 1, "", "answer_multi_hop_query"], [10, 2, 1, "", "create_vector_database"], [10, 2, 1, "", "deploy"], [10, 2, 1, "", "eval_lp_performance"], [10, 2, 1, "", "find_missing_triples"], [10, 2, 1, "", "generate"], [10, 2, 1, "", "get_transductive_entity_embeddings"], [10, 2, 1, "", "negnorm"], [10, 2, 1, "", "predict"], [10, 2, 1, "", "predict_missing_head_entity"], [10, 2, 1, "", "predict_missing_relations"], [10, 2, 1, "", "predict_missing_tail_entity"], [10, 2, 1, "", "predict_topk"], [10, 2, 1, "", "return_multi_hop_query_results"], [10, 2, 1, "", "single_hop_query_answering"], [10, 2, 1, "", "t_conorm"], [10, 2, 1, "", "t_norm"], [10, 2, 1, "", "tensor_t_norm"], [10, 2, 1, "", "train"], [10, 2, 1, "", "train_k_vs_all"], [10, 2, 1, "", "train_triples"], [10, 2, 1, "", "triple_score"]], "dicee.Keci": [[10, 2, 1, "", "apply_coefficients"], [10, 2, 1, "", "clifford_multiplication"], [10, 2, 1, "", "compute_sigma_pp"], [10, 2, 1, "", "compute_sigma_pq"], [10, 2, 1, "", "compute_sigma_qq"], [10, 2, 1, "", "construct_cl_multivector"], [10, 2, 1, "", "forward_k_vs_all"], [10, 2, 1, "", "forward_k_vs_sample"], [10, 2, 1, "", "forward_k_vs_with_explicit"], [10, 2, 1, "", "forward_triples"], [10, 2, 1, "", "k_vs_all_score"], [10, 2, 1, "", "score"]], "dicee.KvsAll": [[10, 2, 1, "", "__getitem__"], [10, 2, 1, "", "__len__"]], "dicee.KvsSampleDataset": [[10, 2, 1, "", "__getitem__"], [10, 2, 1, "", "__len__"]], "dicee.LFMult": [[10, 2, 1, "", "comp_func"], [10, 2, 1, "", "construct_multi_coeff"], [10, 2, 1, "", "forward_triples"], [10, 2, 1, "", "linear"], [10, 2, 1, "", "poly_NN"], [10, 2, 1, "", "polynomial"], [10, 2, 1, "", "pop"], [10, 2, 1, "", "scalar_batch_NN"], [10, 2, 1, "", "tri_score"], [10, 2, 1, "", "vtp_score"]], "dicee.MultiClassClassificationDataset": [[10, 2, 1, "", "__getitem__"], [10, 2, 1, "", "__len__"]], "dicee.MultiLabelDataset": [[10, 2, 1, "", "__getitem__"], [10, 2, 1, "", "__len__"]], "dicee.NegSampleDataset": [[10, 2, 1, "", "__getitem__"], [10, 2, 1, "", "__len__"]], "dicee.OMult": [[10, 2, 1, "", "forward_k_vs_all"], [10, 2, 1, "", "k_vs_all_score"], [10, 2, 1, "", "octonion_normalizer"], [10, 2, 1, "", "score"]], "dicee.OnevsAllDataset": [[10, 2, 1, "", "__getitem__"], [10, 2, 1, "", "__len__"]], "dicee.Pyke": [[10, 2, 1, "", "forward_triples"]], "dicee.PykeenKGE": [[10, 2, 1, "", "forward_k_vs_all"], [10, 2, 1, "", "forward_k_vs_sample"], [10, 2, 1, "", "forward_triples"]], "dicee.QMult": [[10, 2, 1, "", "forward_k_vs_all"], [10, 2, 1, "", "forward_k_vs_sample"], [10, 2, 1, "", "k_vs_all_score"], [10, 2, 1, "", "quaternion_multiplication_followed_by_inner_product"], [10, 2, 1, "", "quaternion_normalizer"], [10, 2, 1, "", "score"]], "dicee.QueryGenerator": [[10, 2, 1, "", "achieve_answer"], [10, 2, 1, "", "construct_graph"], [10, 2, 1, "", "fill_query"], [10, 2, 1, "", "generate_queries"], [10, 2, 1, "", "get_queries"], [10, 2, 1, "", "ground_queries"], [10, 2, 1, "", "list2tuple"], [10, 2, 1, "", "load_queries"], [10, 2, 1, "", "load_queries_and_answers"], [10, 2, 1, "", "save_queries"], [10, 2, 1, "", "save_queries_and_answers"], [10, 2, 1, "", "set_global_seed"], [10, 2, 1, "", "tuple2list"], [10, 2, 1, "", "unmap"], [10, 2, 1, "", "unmap_query"], [10, 2, 1, "", "write_links"]], "dicee.Shallom": [[10, 2, 1, "", "forward_k_vs_all"], [10, 2, 1, "", "forward_triples"], [10, 2, 1, "", "get_embeddings"]], "dicee.TransE": [[10, 2, 1, "", "forward_k_vs_all"], [10, 2, 1, "", "score"]], "dicee.TriplePredictionDataset": [[10, 2, 1, "", "__getitem__"], [10, 2, 1, "", "__len__"], [10, 2, 1, "", "collate_fn"]], "dicee.abstracts": [[2, 1, 1, "", "AbstractCallback"], [2, 1, 1, "", "AbstractPPECallback"], [2, 1, 1, "", "AbstractTrainer"], [2, 1, 1, "", "BaseInteractiveKGE"]], "dicee.abstracts.AbstractCallback": [[2, 2, 1, "", "on_fit_end"], [2, 2, 1, "", "on_fit_start"], [2, 2, 1, "", "on_init_end"], [2, 2, 1, "", "on_init_start"], [2, 2, 1, "", "on_train_batch_end"], [2, 2, 1, "", "on_train_epoch_end"]], "dicee.abstracts.AbstractPPECallback": [[2, 2, 1, "", "on_fit_end"], [2, 2, 1, "", "on_fit_start"], [2, 2, 1, "", "store_ensemble"]], "dicee.abstracts.AbstractTrainer": [[2, 2, 1, "", "on_fit_end"], [2, 2, 1, "", "on_fit_start"], [2, 2, 1, "", "on_train_batch_end"], [2, 2, 1, "", "on_train_epoch_end"], [2, 2, 1, "", "save_checkpoint"]], "dicee.abstracts.BaseInteractiveKGE": [[2, 2, 1, "", "add_new_entity_embeddings"], [2, 2, 1, "", "construct_input_and_output"], [2, 2, 1, "", "get_bpe_token_representation"], [2, 2, 1, "", "get_domain_of_relation"], [2, 2, 1, "", "get_entity_embeddings"], [2, 2, 1, "", "get_entity_index"], [2, 2, 1, "", "get_eval_report"], [2, 2, 1, "", "get_padded_bpe_triple_representation"], [2, 2, 1, "", "get_range_of_relation"], [2, 2, 1, "", "get_relation_embeddings"], [2, 2, 1, "", "get_relation_index"], [2, 2, 1, "", "index_triple"], [2, 2, 1, "", "is_seen"], [2, 4, 1, "", "name"], [2, 2, 1, "", "parameters"], [2, 2, 1, "", "sample_entity"], [2, 2, 1, "", "sample_relation"], [2, 2, 1, "", "save"], [2, 2, 1, "", "set_model_eval_mode"], [2, 2, 1, "", "set_model_train_mode"]], "dicee.analyse_experiments": [[3, 1, 1, "", "Experiment"], [3, 5, 1, "", "analyse"], [3, 5, 1, "", "get_default_arguments"]], "dicee.analyse_experiments.Experiment": [[3, 2, 1, "", "save_experiment"], [3, 2, 1, "", "to_df"]], "dicee.callbacks": [[4, 1, 1, "", "ASWA"], [4, 1, 1, "", "AccumulateEpochLossCallback"], [4, 1, 1, "", "Eval"], [4, 1, 1, "", "KGESaveCallback"], [4, 1, 1, "", "KronE"], [4, 1, 1, "", "Perturb"], [4, 1, 1, "", "PrintCallback"], [4, 1, 1, "", "PseudoLabellingCallback"], [4, 5, 1, "", "compute_convergence"], [4, 5, 1, "", "estimate_q"]], "dicee.callbacks.ASWA": [[4, 2, 1, "", "compute_mrr"], [4, 2, 1, "", "decide"], [4, 2, 1, "", "get_aswa_state_dict"], [4, 2, 1, "", "on_fit_end"], [4, 2, 1, "", "on_train_epoch_end"]], "dicee.callbacks.AccumulateEpochLossCallback": [[4, 2, 1, "", "on_fit_end"]], "dicee.callbacks.Eval": [[4, 2, 1, "", "on_fit_end"], [4, 2, 1, "", "on_fit_start"], [4, 2, 1, "", "on_train_batch_end"], [4, 2, 1, "", "on_train_epoch_end"]], "dicee.callbacks.KGESaveCallback": [[4, 2, 1, "", "on_epoch_end"], [4, 2, 1, "", "on_fit_end"], [4, 2, 1, "", "on_fit_start"], [4, 2, 1, "", "on_train_batch_end"], [4, 2, 1, "", "on_train_epoch_end"]], "dicee.callbacks.KronE": [[4, 2, 1, "", "batch_kronecker_product"], [4, 2, 1, "", "get_kronecker_triple_representation"], [4, 2, 1, "", "on_fit_start"]], "dicee.callbacks.Perturb": [[4, 2, 1, "", "on_train_batch_start"]], "dicee.callbacks.PrintCallback": [[4, 2, 1, "", "on_fit_end"], [4, 2, 1, "", "on_fit_start"], [4, 2, 1, "", "on_train_batch_end"], [4, 2, 1, "", "on_train_epoch_end"]], "dicee.callbacks.PseudoLabellingCallback": [[4, 2, 1, "", "create_random_data"], [4, 2, 1, "", "on_epoch_end"]], "dicee.config": [[5, 1, 1, "", "Namespace"]], "dicee.config.Namespace": [[5, 2, 1, "", "__iter__"], [5, 6, 1, "", "adaptive_swa"], [5, 6, 1, "", "add_noise_rate"], [5, 6, 1, "", "backend"], [5, 6, 1, "", "batch_size"], [5, 6, 1, "", "block_size"], [5, 6, 1, "", "byte_pair_encoding"], [5, 6, 1, "", "callbacks"], [5, 6, 1, "", "continual_learning"], [5, 6, 1, "", "dataset_dir"], [5, 6, 1, "", "embedding_dim"], [5, 6, 1, "", "eval_model"], [5, 6, 1, "", "feature_map_dropout_rate"], [5, 6, 1, "", "gpus"], [5, 6, 1, "", "gradient_accumulation_steps"], [5, 6, 1, "", "hidden_dropout_rate"], [5, 6, 1, "", "init_param"], [5, 6, 1, "", "input_dropout_rate"], [5, 6, 1, "", "kernel_size"], [5, 6, 1, "", "lr"], [5, 6, 1, "", "model"], [5, 6, 1, "", "neg_ratio"], [5, 6, 1, "", "normalization"], [5, 6, 1, "", "num_core"], [5, 6, 1, "", "num_epochs"], [5, 6, 1, "", "num_folds_for_cv"], [5, 6, 1, "", "num_of_output_channels"], [5, 6, 1, "", "optim"], [5, 6, 1, "", "p"], [5, 6, 1, "", "path_single_kg"], [5, 6, 1, "", "path_to_store_single_run"], [5, 6, 1, "", "pykeen_model_kwargs"], [5, 6, 1, "", "q"], [5, 6, 1, "", "random_seed"], [5, 6, 1, "", "read_only_few"], [5, 6, 1, "", "sample_triples_ratio"], [5, 6, 1, "", "save_embeddings_as_csv"], [5, 6, 1, "", "save_model_at_every_epoch"], [5, 6, 1, "", "scoring_technique"], [5, 6, 1, "", "sparql_endpoint"], [5, 6, 1, "", "storage_path"], [5, 6, 1, "", "swa"], [5, 6, 1, "", "trainer"], [5, 6, 1, "", "weight_decay"]], "dicee.dataset_classes": [[6, 1, 1, "", "AllvsAll"], [6, 1, 1, "", "BPE_NegativeSamplingDataset"], [6, 1, 1, "", "CVDataModule"], [6, 1, 1, "", "KvsAll"], [6, 1, 1, "", "KvsSampleDataset"], [6, 1, 1, "", "MultiClassClassificationDataset"], [6, 1, 1, "", "MultiLabelDataset"], [6, 1, 1, "", "NegSampleDataset"], [6, 1, 1, "", "OnevsAllDataset"], [6, 1, 1, "", "TriplePredictionDataset"], [6, 5, 1, "", "construct_dataset"], [6, 5, 1, "", "reload_dataset"]], "dicee.dataset_classes.AllvsAll": [[6, 2, 1, "", "__getitem__"], [6, 2, 1, "", "__len__"]], "dicee.dataset_classes.BPE_NegativeSamplingDataset": [[6, 2, 1, "", "__getitem__"], [6, 2, 1, "", "__len__"], [6, 2, 1, "", "collate_fn"]], "dicee.dataset_classes.CVDataModule": [[6, 2, 1, "", "prepare_data"], [6, 2, 1, "", "setup"], [6, 2, 1, "", "train_dataloader"], [6, 2, 1, "", "transfer_batch_to_device"]], "dicee.dataset_classes.KvsAll": [[6, 2, 1, "", "__getitem__"], [6, 2, 1, "", "__len__"]], "dicee.dataset_classes.KvsSampleDataset": [[6, 2, 1, "", "__getitem__"], [6, 2, 1, "", "__len__"]], "dicee.dataset_classes.MultiClassClassificationDataset": [[6, 2, 1, "", "__getitem__"], [6, 2, 1, "", "__len__"]], "dicee.dataset_classes.MultiLabelDataset": [[6, 2, 1, "", "__getitem__"], [6, 2, 1, "", "__len__"]], "dicee.dataset_classes.NegSampleDataset": [[6, 2, 1, "", "__getitem__"], [6, 2, 1, "", "__len__"]], "dicee.dataset_classes.OnevsAllDataset": [[6, 2, 1, "", "__getitem__"], [6, 2, 1, "", "__len__"]], "dicee.dataset_classes.TriplePredictionDataset": [[6, 2, 1, "", "__getitem__"], [6, 2, 1, "", "__len__"], [6, 2, 1, "", "collate_fn"]], "dicee.eval_static_funcs": [[7, 5, 1, "", "evaluate_link_prediction_performance"], [7, 5, 1, "", "evaluate_link_prediction_performance_with_bpe"], [7, 5, 1, "", "evaluate_link_prediction_performance_with_bpe_reciprocals"], [7, 5, 1, "", "evaluate_link_prediction_performance_with_reciprocals"], [7, 5, 1, "", "evaluate_lp_bpe_k_vs_all"]], "dicee.evaluator": [[8, 1, 1, "", "Evaluator"]], "dicee.evaluator.Evaluator": [[8, 2, 1, "", "dummy_eval"], [8, 2, 1, "", "eval"], [8, 2, 1, "", "eval_rank_of_head_and_tail_byte_pair_encoded_entity"], [8, 2, 1, "", "eval_rank_of_head_and_tail_entity"], [8, 2, 1, "", "eval_with_bpe_vs_all"], [8, 2, 1, "", "eval_with_byte"], [8, 2, 1, "", "eval_with_data"], [8, 2, 1, "", "eval_with_vs_all"], [8, 2, 1, "", "evaluate_lp"], [8, 2, 1, "", "evaluate_lp_bpe_k_vs_all"], [8, 2, 1, "", "evaluate_lp_k_vs_all"], [8, 2, 1, "", "evaluate_lp_with_byte"], [8, 2, 1, "", "vocab_preparation"]], "dicee.executer": [[9, 1, 1, "", "ContinuousExecute"], [9, 1, 1, "", "Execute"]], "dicee.executer.ContinuousExecute": [[9, 2, 1, "", "continual_start"]], "dicee.executer.Execute": [[9, 2, 1, "", "end"], [9, 2, 1, "", "load_indexed_data"], [9, 2, 1, "", "read_or_load_kg"], [9, 2, 1, "", "read_preprocess_index_serialize_data"], [9, 2, 1, "", "save_trained_model"], [9, 2, 1, "", "start"], [9, 2, 1, "", "write_report"]], "dicee.knowledge_graph": [[11, 1, 1, "", "KG"]], "dicee.knowledge_graph.KG": [[11, 4, 1, "", "entities_str"], [11, 2, 1, "", "func_triple_to_bpe_representation"], [11, 4, 1, "", "relations_str"]], "dicee.knowledge_graph_embeddings": [[12, 1, 1, "", "KGE"]], "dicee.knowledge_graph_embeddings.KGE": [[12, 2, 1, "", "__str__"], [12, 2, 1, "", "answer_multi_hop_query"], [12, 2, 1, "", "create_vector_database"], [12, 2, 1, "", "deploy"], [12, 2, 1, "", "eval_lp_performance"], [12, 2, 1, "", "find_missing_triples"], [12, 2, 1, "", "generate"], [12, 2, 1, "", "get_transductive_entity_embeddings"], [12, 2, 1, "", "negnorm"], [12, 2, 1, "", "predict"], [12, 2, 1, "", "predict_missing_head_entity"], [12, 2, 1, "", "predict_missing_relations"], [12, 2, 1, "", "predict_missing_tail_entity"], [12, 2, 1, "", "predict_topk"], [12, 2, 1, "", "return_multi_hop_query_results"], [12, 2, 1, "", "single_hop_query_answering"], [12, 2, 1, "", "t_conorm"], [12, 2, 1, "", "t_norm"], [12, 2, 1, "", "tensor_t_norm"], [12, 2, 1, "", "train"], [12, 2, 1, "", "train_k_vs_all"], [12, 2, 1, "", "train_triples"], [12, 2, 1, "", "triple_score"]], "dicee.models": [[18, 1, 1, "", "AConEx"], [18, 1, 1, "", "AConvO"], [18, 1, 1, "", "AConvQ"], [18, 1, 1, "id81", "BaseKGE"], [18, 1, 1, "", "BaseKGELightning"], [18, 1, 1, "", "CMult"], [18, 1, 1, "", "ComplEx"], [18, 1, 1, "", "ConEx"], [18, 1, 1, "", "ConvO"], [18, 1, 1, "", "ConvQ"], [18, 1, 1, "", "DeCaL"], [18, 1, 1, "", "DistMult"], [18, 1, 1, "", "DualE"], [18, 1, 1, "", "FMult"], [18, 1, 1, "", "FMult2"], [18, 1, 1, "", "GFMult"], [18, 1, 1, "id59", "IdentityClass"], [18, 1, 1, "", "Keci"], [18, 1, 1, "", "KeciBase"], [18, 1, 1, "", "LFMult"], [18, 1, 1, "", "LFMult1"], [18, 1, 1, "", "OMult"], [18, 1, 1, "", "Pyke"], [18, 1, 1, "", "PykeenKGE"], [18, 1, 1, "", "QMult"], [18, 1, 1, "", "Shallom"], [18, 1, 1, "", "TransE"], [13, 0, 0, "-", "base_model"], [14, 0, 0, "-", "clifford"], [15, 0, 0, "-", "complex"], [16, 0, 0, "-", "dualE"], [17, 0, 0, "-", "function_space"], [19, 0, 0, "-", "octonion"], [18, 5, 1, "", "octonion_mul"], [18, 5, 1, "", "octonion_mul_norm"], [20, 0, 0, "-", "pykeen_models"], [21, 0, 0, "-", "quaternion"], [18, 5, 1, "", "quaternion_mul"], [18, 5, 1, "", "quaternion_mul_with_unit_norm"], [22, 0, 0, "-", "real"], [23, 0, 0, "-", "static_funcs"], [24, 0, 0, "-", "transformers"]], "dicee.models.AConEx": [[18, 2, 1, "", "forward_k_vs_all"], [18, 2, 1, "", "forward_k_vs_sample"], [18, 2, 1, "", "forward_triples"], [18, 2, 1, "", "residual_convolution"]], "dicee.models.AConvO": [[18, 2, 1, "", "forward_k_vs_all"], [18, 2, 1, "", "forward_triples"], [18, 2, 1, "", "octonion_normalizer"], [18, 2, 1, "", "residual_convolution"]], "dicee.models.AConvQ": [[18, 2, 1, "", "forward_k_vs_all"], [18, 2, 1, "", "forward_triples"], [18, 2, 1, "", "residual_convolution"]], "dicee.models.BaseKGE": [[18, 2, 1, "id85", "forward"], [18, 2, 1, "id82", "forward_byte_pair_encoded_k_vs_all"], [18, 2, 1, "id83", "forward_byte_pair_encoded_triple"], [18, 2, 1, "id87", "forward_k_vs_all"], [18, 2, 1, "id88", "forward_k_vs_sample"], [18, 2, 1, "id86", "forward_triples"], [18, 2, 1, "id92", "get_bpe_head_and_relation_representation"], [18, 2, 1, "id93", "get_embeddings"], [18, 2, 1, "id90", "get_head_relation_representation"], [18, 2, 1, "id91", "get_sentence_representation"], [18, 2, 1, "id89", "get_triple_representation"], [18, 2, 1, "id84", "init_params_with_sanity_checking"]], "dicee.models.BaseKGELightning": [[18, 2, 1, "", "configure_optimizers"], [18, 2, 1, "", "loss_function"], [18, 2, 1, "", "mem_of_model"], [18, 2, 1, "", "on_train_epoch_end"], [18, 2, 1, "", "predict_dataloader"], [18, 2, 1, "", "test_dataloader"], [18, 2, 1, "", "test_epoch_end"], [18, 2, 1, "", "train_dataloader"], [18, 2, 1, "", "training_step"], [18, 2, 1, "", "val_dataloader"]], "dicee.models.CMult": [[18, 2, 1, "", "clifford_mul"], [18, 2, 1, "", "forward_k_vs_all"], [18, 2, 1, "", "forward_triples"], [18, 2, 1, "", "score"]], "dicee.models.ComplEx": [[18, 2, 1, "", "forward_k_vs_all"], [18, 2, 1, "", "k_vs_all_score"], [18, 2, 1, "", "score"]], "dicee.models.ConEx": [[18, 2, 1, "", "forward_k_vs_all"], [18, 2, 1, "", "forward_k_vs_sample"], [18, 2, 1, "", "forward_triples"], [18, 2, 1, "", "residual_convolution"]], "dicee.models.ConvO": [[18, 2, 1, "", "forward_k_vs_all"], [18, 2, 1, "", "forward_triples"], [18, 2, 1, "", "octonion_normalizer"], [18, 2, 1, "", "residual_convolution"]], "dicee.models.ConvQ": [[18, 2, 1, "", "forward_k_vs_all"], [18, 2, 1, "", "forward_triples"], [18, 2, 1, "", "residual_convolution"]], "dicee.models.DeCaL": [[18, 2, 1, "", "apply_coefficients"], [18, 2, 1, "", "cl_pqr"], [18, 2, 1, "", "compute_sigma_pp"], [18, 2, 1, "", "compute_sigma_pq"], [18, 2, 1, "", "compute_sigma_pr"], [18, 2, 1, "", "compute_sigma_qq"], [18, 2, 1, "", "compute_sigma_qr"], [18, 2, 1, "", "compute_sigma_rr"], [18, 2, 1, "", "compute_sigmas_multivect"], [18, 2, 1, "", "compute_sigmas_single"], [18, 2, 1, "", "construct_cl_multivector"], [18, 2, 1, "", "forward_k_vs_all"], [18, 2, 1, "", "forward_triples"]], "dicee.models.DistMult": [[18, 2, 1, "", "forward_k_vs_all"], [18, 2, 1, "", "forward_k_vs_sample"], [18, 2, 1, "", "k_vs_all_score"], [18, 2, 1, "", "score"]], "dicee.models.DualE": [[18, 2, 1, "", "T"], [18, 2, 1, "", "forward_k_vs_all"], [18, 2, 1, "", "forward_triples"], [18, 2, 1, "", "kvsall_score"]], "dicee.models.FMult": [[18, 2, 1, "", "chain_func"], [18, 2, 1, "", "compute_func"], [18, 2, 1, "", "forward_triples"]], "dicee.models.FMult2": [[18, 2, 1, "", "build_chain_funcs"], [18, 2, 1, "", "build_func"], [18, 2, 1, "", "compute_func"], [18, 2, 1, "", "forward_triples"], [18, 2, 1, "", "function"], [18, 2, 1, "", "trapezoid"]], "dicee.models.GFMult": [[18, 2, 1, "", "chain_func"], [18, 2, 1, "", "compute_func"], [18, 2, 1, "", "forward_triples"]], "dicee.models.IdentityClass": [[18, 2, 1, "id60", "__call__"], [18, 2, 1, "id61", "forward"]], "dicee.models.Keci": [[18, 2, 1, "", "apply_coefficients"], [18, 2, 1, "", "clifford_multiplication"], [18, 2, 1, "", "compute_sigma_pp"], [18, 2, 1, "", "compute_sigma_pq"], [18, 2, 1, "", "compute_sigma_qq"], [18, 2, 1, "", "construct_cl_multivector"], [18, 2, 1, "", "forward_k_vs_all"], [18, 2, 1, "", "forward_k_vs_sample"], [18, 2, 1, "", "forward_k_vs_with_explicit"], [18, 2, 1, "", "forward_triples"], [18, 2, 1, "", "k_vs_all_score"], [18, 2, 1, "", "score"]], "dicee.models.LFMult": [[18, 2, 1, "", "comp_func"], [18, 2, 1, "", "construct_multi_coeff"], [18, 2, 1, "", "forward_triples"], [18, 2, 1, "", "linear"], [18, 2, 1, "", "poly_NN"], [18, 2, 1, "", "polynomial"], [18, 2, 1, "", "pop"], [18, 2, 1, "", "scalar_batch_NN"], [18, 2, 1, "", "tri_score"], [18, 2, 1, "", "vtp_score"]], "dicee.models.LFMult1": [[18, 2, 1, "", "forward_triples"], [18, 2, 1, "", "tri_score"], [18, 2, 1, "", "vtp_score"]], "dicee.models.OMult": [[18, 2, 1, "", "forward_k_vs_all"], [18, 2, 1, "", "k_vs_all_score"], [18, 2, 1, "", "octonion_normalizer"], [18, 2, 1, "", "score"]], "dicee.models.Pyke": [[18, 2, 1, "", "forward_triples"]], "dicee.models.PykeenKGE": [[18, 2, 1, "", "forward_k_vs_all"], [18, 2, 1, "", "forward_k_vs_sample"], [18, 2, 1, "", "forward_triples"]], "dicee.models.QMult": [[18, 2, 1, "", "forward_k_vs_all"], [18, 2, 1, "", "forward_k_vs_sample"], [18, 2, 1, "", "k_vs_all_score"], [18, 2, 1, "", "quaternion_multiplication_followed_by_inner_product"], [18, 2, 1, "", "quaternion_normalizer"], [18, 2, 1, "", "score"]], "dicee.models.Shallom": [[18, 2, 1, "", "forward_k_vs_all"], [18, 2, 1, "", "forward_triples"], [18, 2, 1, "", "get_embeddings"]], "dicee.models.TransE": [[18, 2, 1, "", "forward_k_vs_all"], [18, 2, 1, "", "score"]], "dicee.models.base_model": [[13, 1, 1, "", "BaseKGE"], [13, 1, 1, "", "BaseKGELightning"], [13, 1, 1, "", "IdentityClass"]], "dicee.models.base_model.BaseKGE": [[13, 2, 1, "", "forward"], [13, 2, 1, "", "forward_byte_pair_encoded_k_vs_all"], [13, 2, 1, "", "forward_byte_pair_encoded_triple"], [13, 2, 1, "", "forward_k_vs_all"], [13, 2, 1, "", "forward_k_vs_sample"], [13, 2, 1, "", "forward_triples"], [13, 2, 1, "", "get_bpe_head_and_relation_representation"], [13, 2, 1, "", "get_embeddings"], [13, 2, 1, "", "get_head_relation_representation"], [13, 2, 1, "", "get_sentence_representation"], [13, 2, 1, "", "get_triple_representation"], [13, 2, 1, "", "init_params_with_sanity_checking"]], "dicee.models.base_model.BaseKGELightning": [[13, 2, 1, "", "configure_optimizers"], [13, 2, 1, "", "loss_function"], [13, 2, 1, "", "mem_of_model"], [13, 2, 1, "", "on_train_epoch_end"], [13, 2, 1, "", "predict_dataloader"], [13, 2, 1, "", "test_dataloader"], [13, 2, 1, "", "test_epoch_end"], [13, 2, 1, "", "train_dataloader"], [13, 2, 1, "", "training_step"], [13, 2, 1, "", "val_dataloader"]], "dicee.models.base_model.IdentityClass": [[13, 2, 1, "", "__call__"], [13, 2, 1, "", "forward"]], "dicee.models.clifford": [[14, 1, 1, "", "CMult"], [14, 1, 1, "", "DeCaL"], [14, 1, 1, "", "Keci"], [14, 1, 1, "", "KeciBase"]], "dicee.models.clifford.CMult": [[14, 2, 1, "", "clifford_mul"], [14, 2, 1, "", "forward_k_vs_all"], [14, 2, 1, "", "forward_triples"], [14, 2, 1, "", "score"]], "dicee.models.clifford.DeCaL": [[14, 2, 1, "", "apply_coefficients"], [14, 2, 1, "", "cl_pqr"], [14, 2, 1, "", "compute_sigma_pp"], [14, 2, 1, "", "compute_sigma_pq"], [14, 2, 1, "", "compute_sigma_pr"], [14, 2, 1, "", "compute_sigma_qq"], [14, 2, 1, "", "compute_sigma_qr"], [14, 2, 1, "", "compute_sigma_rr"], [14, 2, 1, "", "compute_sigmas_multivect"], [14, 2, 1, "", "compute_sigmas_single"], [14, 2, 1, "", "construct_cl_multivector"], [14, 2, 1, "", "forward_k_vs_all"], [14, 2, 1, "", "forward_triples"]], "dicee.models.clifford.Keci": [[14, 2, 1, "", "apply_coefficients"], [14, 2, 1, "", "clifford_multiplication"], [14, 2, 1, "", "compute_sigma_pp"], [14, 2, 1, "", "compute_sigma_pq"], [14, 2, 1, "", "compute_sigma_qq"], [14, 2, 1, "", "construct_cl_multivector"], [14, 2, 1, "", "forward_k_vs_all"], [14, 2, 1, "", "forward_k_vs_sample"], [14, 2, 1, "", "forward_k_vs_with_explicit"], [14, 2, 1, "", "forward_triples"], [14, 2, 1, "", "k_vs_all_score"], [14, 2, 1, "", "score"]], "dicee.models.complex": [[15, 1, 1, "", "AConEx"], [15, 1, 1, "", "ComplEx"], [15, 1, 1, "", "ConEx"]], "dicee.models.complex.AConEx": [[15, 2, 1, "", "forward_k_vs_all"], [15, 2, 1, "", "forward_k_vs_sample"], [15, 2, 1, "", "forward_triples"], [15, 2, 1, "", "residual_convolution"]], "dicee.models.complex.ComplEx": [[15, 2, 1, "", "forward_k_vs_all"], [15, 2, 1, "", "k_vs_all_score"], [15, 2, 1, "", "score"]], "dicee.models.complex.ConEx": [[15, 2, 1, "", "forward_k_vs_all"], [15, 2, 1, "", "forward_k_vs_sample"], [15, 2, 1, "", "forward_triples"], [15, 2, 1, "", "residual_convolution"]], "dicee.models.dualE": [[16, 1, 1, "", "DualE"]], "dicee.models.dualE.DualE": [[16, 2, 1, "", "T"], [16, 2, 1, "", "forward_k_vs_all"], [16, 2, 1, "", "forward_triples"], [16, 2, 1, "", "kvsall_score"]], "dicee.models.function_space": [[17, 1, 1, "", "FMult"], [17, 1, 1, "", "FMult2"], [17, 1, 1, "", "GFMult"], [17, 1, 1, "", "LFMult"], [17, 1, 1, "", "LFMult1"]], "dicee.models.function_space.FMult": [[17, 2, 1, "", "chain_func"], [17, 2, 1, "", "compute_func"], [17, 2, 1, "", "forward_triples"]], "dicee.models.function_space.FMult2": [[17, 2, 1, "", "build_chain_funcs"], [17, 2, 1, "", "build_func"], [17, 2, 1, "", "compute_func"], [17, 2, 1, "", "forward_triples"], [17, 2, 1, "", "function"], [17, 2, 1, "", "trapezoid"]], "dicee.models.function_space.GFMult": [[17, 2, 1, "", "chain_func"], [17, 2, 1, "", "compute_func"], [17, 2, 1, "", "forward_triples"]], "dicee.models.function_space.LFMult": [[17, 2, 1, "", "comp_func"], [17, 2, 1, "", "construct_multi_coeff"], [17, 2, 1, "", "forward_triples"], [17, 2, 1, "", "linear"], [17, 2, 1, "", "poly_NN"], [17, 2, 1, "", "polynomial"], [17, 2, 1, "", "pop"], [17, 2, 1, "", "scalar_batch_NN"], [17, 2, 1, "", "tri_score"], [17, 2, 1, "", "vtp_score"]], "dicee.models.function_space.LFMult1": [[17, 2, 1, "", "forward_triples"], [17, 2, 1, "", "tri_score"], [17, 2, 1, "", "vtp_score"]], "dicee.models.octonion": [[19, 1, 1, "", "AConvO"], [19, 1, 1, "", "ConvO"], [19, 1, 1, "", "OMult"], [19, 5, 1, "", "octonion_mul"], [19, 5, 1, "", "octonion_mul_norm"]], "dicee.models.octonion.AConvO": [[19, 2, 1, "", "forward_k_vs_all"], [19, 2, 1, "", "forward_triples"], [19, 2, 1, "", "octonion_normalizer"], [19, 2, 1, "", "residual_convolution"]], "dicee.models.octonion.ConvO": [[19, 2, 1, "", "forward_k_vs_all"], [19, 2, 1, "", "forward_triples"], [19, 2, 1, "", "octonion_normalizer"], [19, 2, 1, "", "residual_convolution"]], "dicee.models.octonion.OMult": [[19, 2, 1, "", "forward_k_vs_all"], [19, 2, 1, "", "k_vs_all_score"], [19, 2, 1, "", "octonion_normalizer"], [19, 2, 1, "", "score"]], "dicee.models.pykeen_models": [[20, 1, 1, "", "PykeenKGE"]], "dicee.models.pykeen_models.PykeenKGE": [[20, 2, 1, "", "forward_k_vs_all"], [20, 2, 1, "", "forward_k_vs_sample"], [20, 2, 1, "", "forward_triples"]], "dicee.models.quaternion": [[21, 1, 1, "", "AConvQ"], [21, 1, 1, "", "ConvQ"], [21, 1, 1, "", "QMult"], [21, 5, 1, "", "quaternion_mul_with_unit_norm"]], "dicee.models.quaternion.AConvQ": [[21, 2, 1, "", "forward_k_vs_all"], [21, 2, 1, "", "forward_triples"], [21, 2, 1, "", "residual_convolution"]], "dicee.models.quaternion.ConvQ": [[21, 2, 1, "", "forward_k_vs_all"], [21, 2, 1, "", "forward_triples"], [21, 2, 1, "", "residual_convolution"]], "dicee.models.quaternion.QMult": [[21, 2, 1, "", "forward_k_vs_all"], [21, 2, 1, "", "forward_k_vs_sample"], [21, 2, 1, "", "k_vs_all_score"], [21, 2, 1, "", "quaternion_multiplication_followed_by_inner_product"], [21, 2, 1, "", "quaternion_normalizer"], [21, 2, 1, "", "score"]], "dicee.models.real": [[22, 1, 1, "", "DistMult"], [22, 1, 1, "", "Pyke"], [22, 1, 1, "", "Shallom"], [22, 1, 1, "", "TransE"]], "dicee.models.real.DistMult": [[22, 2, 1, "", "forward_k_vs_all"], [22, 2, 1, "", "forward_k_vs_sample"], [22, 2, 1, "", "k_vs_all_score"], [22, 2, 1, "", "score"]], "dicee.models.real.Pyke": [[22, 2, 1, "", "forward_triples"]], "dicee.models.real.Shallom": [[22, 2, 1, "", "forward_k_vs_all"], [22, 2, 1, "", "forward_triples"], [22, 2, 1, "", "get_embeddings"]], "dicee.models.real.TransE": [[22, 2, 1, "", "forward_k_vs_all"], [22, 2, 1, "", "score"]], "dicee.models.static_funcs": [[23, 5, 1, "", "quaternion_mul"]], "dicee.models.transformers": [[24, 1, 1, "", "Block"], [24, 1, 1, "", "BytE"], [24, 1, 1, "", "CausalSelfAttention"], [24, 1, 1, "", "GPT"], [24, 1, 1, "", "GPTConfig"], [24, 1, 1, "", "LayerNorm"], [24, 1, 1, "", "MLP"]], "dicee.models.transformers.Block": [[24, 2, 1, "", "forward"]], "dicee.models.transformers.BytE": [[24, 2, 1, "", "forward"], [24, 2, 1, "", "generate"], [24, 2, 1, "", "loss_function"], [24, 2, 1, "", "training_step"]], "dicee.models.transformers.CausalSelfAttention": [[24, 2, 1, "", "forward"]], "dicee.models.transformers.GPT": [[24, 2, 1, "", "configure_optimizers"], [24, 2, 1, "", "crop_block_size"], [24, 2, 1, "", "estimate_mfu"], [24, 2, 1, "", "forward"], [24, 2, 1, "", "from_pretrained"], [24, 2, 1, "", "get_num_params"]], "dicee.models.transformers.GPTConfig": [[24, 6, 1, "", "bias"], [24, 6, 1, "", "block_size"], [24, 6, 1, "", "dropout"], [24, 6, 1, "", "n_embd"], [24, 6, 1, "", "n_head"], [24, 6, 1, "", "n_layer"], [24, 6, 1, "", "vocab_size"]], "dicee.models.transformers.LayerNorm": [[24, 2, 1, "", "forward"]], "dicee.models.transformers.MLP": [[24, 2, 1, "", "forward"]], "dicee.query_generator": [[25, 1, 1, "", "QueryGenerator"]], "dicee.query_generator.QueryGenerator": [[25, 2, 1, "", "achieve_answer"], [25, 2, 1, "", "construct_graph"], [25, 2, 1, "", "fill_query"], [25, 2, 1, "", "generate_queries"], [25, 2, 1, "", "get_queries"], [25, 2, 1, "", "ground_queries"], [25, 2, 1, "", "list2tuple"], [25, 2, 1, "", "load_queries"], [25, 2, 1, "", "load_queries_and_answers"], [25, 2, 1, "", "save_queries"], [25, 2, 1, "", "save_queries_and_answers"], [25, 2, 1, "", "set_global_seed"], [25, 2, 1, "", "tuple2list"], [25, 2, 1, "", "unmap"], [25, 2, 1, "", "unmap_query"], [25, 2, 1, "", "write_links"]], "dicee.read_preprocess_save_load_kg": [[26, 1, 1, "", "LoadSaveToDisk"], [26, 1, 1, "", "PreprocessKG"], [26, 1, 1, "", "ReadFromDisk"], [27, 0, 0, "-", "preprocess"], [28, 0, 0, "-", "read_from_disk"], [29, 0, 0, "-", "save_load_disk"], [30, 0, 0, "-", "util"]], "dicee.read_preprocess_save_load_kg.LoadSaveToDisk": [[26, 2, 1, "", "load"], [26, 2, 1, "", "save"]], "dicee.read_preprocess_save_load_kg.PreprocessKG": [[26, 2, 1, "", "preprocess_with_byte_pair_encoding"], [26, 2, 1, "", "preprocess_with_byte_pair_encoding_with_padding"], [26, 2, 1, "", "preprocess_with_pandas"], [26, 2, 1, "", "preprocess_with_polars"], [26, 2, 1, "", "remove_triples_from_train_with_condition"], [26, 2, 1, "", "sequential_vocabulary_construction"], [26, 2, 1, "", "start"]], "dicee.read_preprocess_save_load_kg.ReadFromDisk": [[26, 2, 1, "", "add_noisy_triples_into_training"], [26, 2, 1, "", "start"]], "dicee.read_preprocess_save_load_kg.preprocess": [[27, 1, 1, "", "PreprocessKG"]], "dicee.read_preprocess_save_load_kg.preprocess.PreprocessKG": [[27, 2, 1, "", "preprocess_with_byte_pair_encoding"], [27, 2, 1, "", "preprocess_with_byte_pair_encoding_with_padding"], [27, 2, 1, "", "preprocess_with_pandas"], [27, 2, 1, "", "preprocess_with_polars"], [27, 2, 1, "", "remove_triples_from_train_with_condition"], [27, 2, 1, "", "sequential_vocabulary_construction"], [27, 2, 1, "", "start"]], "dicee.read_preprocess_save_load_kg.read_from_disk": [[28, 1, 1, "", "ReadFromDisk"]], "dicee.read_preprocess_save_load_kg.read_from_disk.ReadFromDisk": [[28, 2, 1, "", "add_noisy_triples_into_training"], [28, 2, 1, "", "start"]], "dicee.read_preprocess_save_load_kg.save_load_disk": [[29, 1, 1, "", "LoadSaveToDisk"]], "dicee.read_preprocess_save_load_kg.save_load_disk.LoadSaveToDisk": [[29, 2, 1, "", "load"], [29, 2, 1, "", "save"]], "dicee.read_preprocess_save_load_kg.util": [[30, 5, 1, "", "apply_reciprical_or_noise"], [30, 5, 1, "", "create_constraints"], [30, 5, 1, "", "create_recipriocal_triples"], [30, 5, 1, "", "dataset_sanity_checking"], [30, 5, 1, "", "get_ee_vocab"], [30, 5, 1, "", "get_er_vocab"], [30, 5, 1, "", "get_re_vocab"], [30, 5, 1, "", "index_triples_with_pandas"], [30, 5, 1, "", "load_numpy_ndarray"], [30, 5, 1, "", "load_pickle"], [30, 5, 1, "", "load_with_pandas"], [30, 5, 1, "", "read_from_disk"], [30, 5, 1, "", "read_from_triple_store"], [30, 5, 1, "", "read_with_pandas"], [30, 5, 1, "", "read_with_polars"], [30, 5, 1, "", "save_numpy_ndarray"], [30, 5, 1, "", "save_pickle"], [30, 5, 1, "", "timeit"]], "dicee.sanity_checkers": [[31, 5, 1, "", "is_sparql_endpoint_alive"], [31, 5, 1, "", "sanity_checking_with_arguments"], [31, 5, 1, "", "validate_knowledge_graph"]], "dicee.scripts": [[33, 0, 0, "-", "index"], [34, 0, 0, "-", "run"], [35, 0, 0, "-", "serve"]], "dicee.scripts.index": [[33, 5, 1, "", "get_default_arguments"], [33, 5, 1, "", "main"]], "dicee.scripts.run": [[34, 5, 1, "", "get_default_arguments"], [34, 5, 1, "", "main"]], "dicee.scripts.serve": [[35, 1, 1, "", "NeuralSearcher"], [35, 3, 1, "", "app"], [35, 5, 1, "", "get_default_arguments"], [35, 5, 1, "", "main"], [35, 3, 1, "", "neural_searcher"], [35, 5, 1, "", "retrieve_embeddings"], [35, 5, 1, "", "root"], [35, 5, 1, "", "search_embeddings"]], "dicee.scripts.serve.NeuralSearcher": [[35, 2, 1, "", "get"], [35, 2, 1, "", "search"]], "dicee.static_funcs": [[36, 5, 1, "", "add_noisy_triples"], [36, 5, 1, "", "continual_training_setup_executor"], [36, 5, 1, "", "create_experiment_folder"], [36, 5, 1, "", "create_recipriocal_triples"], [36, 5, 1, "", "deploy_head_entity_prediction"], [36, 5, 1, "", "deploy_relation_prediction"], [36, 5, 1, "", "deploy_tail_entity_prediction"], [36, 5, 1, "", "deploy_triple_prediction"], [36, 5, 1, "", "download_file"], [36, 5, 1, "", "download_files_from_url"], [36, 5, 1, "", "download_pretrained_model"], [36, 5, 1, "", "evaluate"], [36, 5, 1, "", "exponential_function"], [36, 5, 1, "", "get_ee_vocab"], [36, 5, 1, "", "get_er_vocab"], [36, 5, 1, "", "get_re_vocab"], [36, 5, 1, "", "intialize_model"], [36, 5, 1, "", "load_json"], [36, 5, 1, "", "load_model"], [36, 5, 1, "", "load_model_ensemble"], [36, 5, 1, "", "load_numpy"], [36, 5, 1, "", "load_pickle"], [36, 5, 1, "", "numpy_data_type_changer"], [36, 5, 1, "", "random_prediction"], [36, 5, 1, "", "read_or_load_kg"], [36, 5, 1, "", "save_checkpoint_model"], [36, 5, 1, "", "save_embeddings"], [36, 5, 1, "", "save_numpy_ndarray"], [36, 5, 1, "", "save_pickle"], [36, 5, 1, "", "select_model"], [36, 5, 1, "", "store"], [36, 5, 1, "", "timeit"], [36, 5, 1, "", "vocab_to_parquet"]], "dicee.static_funcs_training": [[37, 5, 1, "", "efficient_zero_grad"], [37, 5, 1, "", "evaluate_bpe_lp"], [37, 5, 1, "", "evaluate_lp"]], "dicee.static_preprocess_funcs": [[38, 5, 1, "", "create_constraints"], [38, 3, 1, "", "enable_log"], [38, 5, 1, "", "get_ee_vocab"], [38, 5, 1, "", "get_er_vocab"], [38, 5, 1, "", "get_re_vocab"], [38, 5, 1, "", "mapping_from_first_two_cols_to_third"], [38, 5, 1, "", "preprocesses_input_args"], [38, 5, 1, "", "timeit"]], "dicee.trainer": [[40, 1, 1, "", "DICE_Trainer"], [39, 0, 0, "-", "dice_trainer"], [41, 0, 0, "-", "torch_trainer"], [42, 0, 0, "-", "torch_trainer_ddp"]], "dicee.trainer.DICE_Trainer": [[40, 2, 1, "", "continual_start"], [40, 2, 1, "", "initialize_dataloader"], [40, 2, 1, "", "initialize_dataset"], [40, 2, 1, "", "initialize_or_load_model"], [40, 2, 1, "", "initialize_trainer"], [40, 2, 1, "", "k_fold_cross_validation"], [40, 2, 1, "", "start"]], "dicee.trainer.dice_trainer": [[39, 1, 1, "", "DICE_Trainer"], [39, 5, 1, "", "get_callbacks"], [39, 5, 1, "", "initialize_trainer"]], "dicee.trainer.dice_trainer.DICE_Trainer": [[39, 2, 1, "", "continual_start"], [39, 2, 1, "", "initialize_dataloader"], [39, 2, 1, "", "initialize_dataset"], [39, 2, 1, "", "initialize_or_load_model"], [39, 2, 1, "", "initialize_trainer"], [39, 2, 1, "", "k_fold_cross_validation"], [39, 2, 1, "", "start"]], "dicee.trainer.torch_trainer": [[41, 1, 1, "", "TorchTrainer"]], "dicee.trainer.torch_trainer.TorchTrainer": [[41, 2, 1, "", "extract_input_outputs_set_device"], [41, 2, 1, "", "fit"], [41, 2, 1, "", "forward_backward_update"]], "dicee.trainer.torch_trainer_ddp": [[42, 1, 1, "", "DDPTrainer"], [42, 1, 1, "", "NodeTrainer"], [42, 1, 1, "", "TorchDDPTrainer"], [42, 5, 1, "", "print_peak_memory"]], "dicee.trainer.torch_trainer_ddp.DDPTrainer": [[42, 2, 1, "", "extract_input_outputs"], [42, 2, 1, "", "train"]], "dicee.trainer.torch_trainer_ddp.NodeTrainer": [[42, 2, 1, "", "extract_input_outputs"], [42, 2, 1, "", "train"]], "dicee.trainer.torch_trainer_ddp.TorchDDPTrainer": [[42, 2, 1, "", "fit"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:data", "4": "py:property", "5": "py:function", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "data", "Python data"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"download": [0, 47], "preprocess": [0, 27], "dbpedia": 0, "2022": 0, "03": 0, "knowledg": [0, 1, 47], "graph": [0, 1, 47], "embed": [0, 1, 43, 47], "file": 0, "filter": 0, "tripl": 0, "remov": 0, "all": 0, "liter": 0, "have": 0, "relat": 0, "start": 0, "http": 0, "org": 0, "ontologi": 0, "wiki": 0, "wikipag": 0, "ues": 0, "templat": 0, "xmln": 0, "properti": 0, "boost": 1, "tabular": 1, "data": 1, "instal": [1, 47], "usag": 1, "benchmark": 1, "10fold": 1, "cv": 1, "result": 1, "california": 1, "hous": 1, "dataset": 1, "regress": 1, "detail": 1, "kge": [1, 48], "todo": 1, "binari": 1, "classif": 1, "dice": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47], "abstract": 2, "modul": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42], "content": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "class": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 35, 39, 40, 41, 42], "paramet": [2, 4, 9, 10, 12, 14, 18, 26, 27, 28, 39, 40], "return": [2, 10, 12], "tupl": [2, 10, 12], "analyse_experi": 3, "function": [3, 4, 6, 7, 10, 18, 19, 21, 23, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42], "callback": 4, "config": 5, "dataset_class": 6, "eval_static_func": 7, "evalu": 8, "execut": 9, "subpackag": 10, "submodul": [10, 18, 26, 32, 40], "packag": [10, 18, 26, 40], "attribut": [10, 35, 38], "input": [10, 16, 18, 48], "output": [10, 16, 18], "knowledge_graph": 11, "knowledge_graph_embed": 12, "model": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 47, 48], "base_model": 13, "clifford": 14, "complex": [15, 47], "dual": 16, "function_spac": 17, "octonion": 19, "pykeen_model": 20, "quaternion": 21, "real": 22, "static_func": [23, 36], "transform": 24, "query_gener": 25, "read_preprocess_save_load_kg": [26, 27, 28, 29, 30], "read_from_disk": 28, "save_load_disk": 29, "util": 30, "sanity_check": 31, "script": [32, 33, 34, 35], "index": 33, "run": 34, "serv": 35, "static_funcs_train": 37, "static_preprocess_func": 38, "trainer": [39, 40, 41, 42], "dice_train": 39, "torch_train": 41, "torch_trainer_ddp": 42, "welcom": 43, "1vsall": 44, "train": [44, 45, 47, 48], "techniqu": [44, 45, 46], "kvsall": 45, "neg": 46, "sampl": 46, "manual": 47, "from": 47, "sourc": 47, "how": 47, "creat": 47, "an": 47, "vector": 47, "databas": 47, "learn": 47, "load": 47, "qdrant": 47, "launch": 47, "webservic": 47, "retriev": 47, "search": 47, "answer": 47, "queri": 47, "predict": 47, "miss": 47, "link": 47, "pretrain": 47, "deploi": 47, "docker": 47, "cite": 47, "kg": 48, "format": 48, "featur": 48, "avail": 48, "exampl": 48, "shard": 48}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Downloading and Preprocessing DBpedia 2022-03 for Knowledge Graph Embeddings": [[0, "downloading-and-preprocessing-dbpedia-2022-03-for-knowledge-graph-embeddings"]], "Download files": [[0, "download-files"]], "Filtering Triples": [[0, "filtering-triples"]], "Remove all literals": [[0, "remove-all-literals"]], "Remove triples having a relation starting with http://dbpedia.org/ontology/wiki": [[0, "remove-triples-having-a-relation-starting-with-http-dbpedia-org-ontology-wiki"]], "Remove Wikipage Uese Template": [[0, "remove-wikipage-uese-template"]], "Remove xmlns": [[0, "remove-xmlns"]], "Remove triples having a relation starting with http://dbpedia.org/property/wiki": [[0, "remove-triples-having-a-relation-starting-with-http-dbpedia-org-property-wiki"]], "Knowledge Graph Embedding Boost on Tabular Data": [[1, "knowledge-graph-embedding-boost-on-tabular-data"]], "Installation": [[1, "installation"], [47, "installation"]], "Usage": [[1, "usage"]], "Benchmarking": [[1, "benchmarking"]], "10FOLD CV results on California housing dataset (regression).": [[1, "fold-cv-results-on-california-housing-dataset-regression"]], "Tabular 10Fold Detailed": [[1, "tabular-10fold-detailed"]], "KGE 10Fold Detailed": [[1, "kge-10fold-detailed"]], "TABULAR & KGE 10Fold Detailed": [[1, "tabular-kge-10fold-detailed"]], "10FOLD CV results on TODO (binary classification).": [[1, "fold-cv-results-on-todo-binary-classification"]], "dicee.abstracts": [[2, "module-dicee.abstracts"]], "Module Contents": [[2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [41, "module-contents"], [42, "module-contents"]], "Classes": [[2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [35, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"]], "Parameter": [[2, "parameter"], [2, "id1"], [2, "id2"], [2, "id3"], [2, "id4"], [2, "id5"], [2, "id6"], [2, "id7"], [2, "id8"], [2, "id9"], [2, "id10"], [2, "id11"], [2, "id12"], [2, "id13"], [2, "id14"], [2, "id15"], [2, "id16"], [2, "id17"], [2, "id18"], [2, "id19"], [2, "id20"], [2, "id21"], [4, "parameter"], [4, "id1"], [4, "id2"], [4, "id3"], [4, "id4"], [4, "id5"], [4, "id6"], [4, "id7"], [4, "id8"], [4, "id9"], [4, "id10"], [4, "id11"], [4, "id12"], [4, "id13"], [4, "id14"], [4, "id15"], [4, "id16"], [4, "id17"], [4, "id18"], [4, "id19"], [4, "id20"], [4, "id21"], [9, "parameter"], [9, "id1"], [9, "id2"], [9, "id3"], [9, "id4"], [9, "id5"], [10, "parameter"], [10, "id1"], [10, "id2"], [10, "id3"], [10, "id4"], [10, "id5"], [10, "id6"], [10, "id11"], [10, "id12"], [10, "id13"], [10, "id15"], [10, "id17"], [10, "id19"], [10, "id21"], [10, "id22"], [10, "id23"], [10, "id24"], [10, "id25"], [10, "id26"], [12, "parameter"], [12, "id1"], [12, "id3"], [12, "id5"], [12, "id7"], [12, "id9"], [14, "parameter"], [14, "id1"], [14, "id2"], [14, "id3"], [14, "id4"], [14, "id5"], [14, "id6"], [18, "parameter"], [18, "id62"], [18, "id63"], [18, "id64"], [18, "id65"], [18, "id66"], [18, "id67"], [26, "parameter"], [26, "id1"], [26, "id2"], [27, "parameter"], [27, "id1"], [28, "parameter"], [39, "parameter"], [40, "parameter"]], "Returns: Tuple": [[2, "returns-tuple"], [10, "returns-tuple"], [10, "id14"], [10, "id16"], [10, "id18"], [10, "id20"], [12, "returns-tuple"], [12, "id2"], [12, "id4"], [12, "id6"], [12, "id8"]], "dicee.analyse_experiments": [[3, "module-dicee.analyse_experiments"]], "Functions": [[3, "functions"], [4, "functions"], [6, "functions"], [7, "functions"], [10, "functions"], [18, "functions"], [19, "functions"], [21, "functions"], [23, "functions"], [30, "functions"], [31, "functions"], [33, "functions"], [34, "functions"], [35, "functions"], [36, "functions"], [37, "functions"], [38, "functions"], [39, "functions"], [42, "functions"]], "dicee.callbacks": [[4, "module-dicee.callbacks"]], "dicee.config": [[5, "module-dicee.config"]], "dicee.dataset_classes": [[6, "module-dicee.dataset_classes"]], "dicee.eval_static_funcs": [[7, "module-dicee.eval_static_funcs"]], "dicee.evaluator": [[8, "module-dicee.evaluator"]], "dicee.executer": [[9, "module-dicee.executer"]], "dicee": [[10, "module-dicee"]], "Subpackages": [[10, "subpackages"]], "Submodules": [[10, "submodules"], [18, "submodules"], [26, "submodules"], [32, "submodules"], [40, "submodules"]], "Package Contents": [[10, "package-contents"], [18, "package-contents"], [26, "package-contents"], [40, "package-contents"]], "Attributes": [[10, "attributes"], [35, "attributes"], [38, "attributes"]], "Input": [[10, "input"], [10, "id7"], [10, "id9"], [16, "input"], [16, "id1"], [16, "id3"], [18, "input"], [18, "id94"], [18, "id96"]], "Output": [[10, "output"], [10, "id8"], [10, "id10"], [16, "output"], [16, "id2"], [16, "id4"], [18, "output"], [18, "id95"], [18, "id97"]], "dicee.knowledge_graph": [[11, "module-dicee.knowledge_graph"]], "dicee.knowledge_graph_embeddings": [[12, "module-dicee.knowledge_graph_embeddings"]], "dicee.models.base_model": [[13, "module-dicee.models.base_model"]], "dicee.models.clifford": [[14, "module-dicee.models.clifford"]], "dicee.models.complex": [[15, "module-dicee.models.complex"]], "dicee.models.dualE": [[16, "module-dicee.models.dualE"]], "dicee.models.function_space": [[17, "module-dicee.models.function_space"]], "dicee.models": [[18, "module-dicee.models"]], "dicee.models.octonion": [[19, "module-dicee.models.octonion"]], "dicee.models.pykeen_models": [[20, "module-dicee.models.pykeen_models"]], "dicee.models.quaternion": [[21, "module-dicee.models.quaternion"]], "dicee.models.real": [[22, "module-dicee.models.real"]], "dicee.models.static_funcs": [[23, "module-dicee.models.static_funcs"]], "dicee.models.transformers": [[24, "module-dicee.models.transformers"]], "dicee.query_generator": [[25, "module-dicee.query_generator"]], "dicee.read_preprocess_save_load_kg": [[26, "module-dicee.read_preprocess_save_load_kg"]], "dicee.read_preprocess_save_load_kg.preprocess": [[27, "module-dicee.read_preprocess_save_load_kg.preprocess"]], "dicee.read_preprocess_save_load_kg.read_from_disk": [[28, "module-dicee.read_preprocess_save_load_kg.read_from_disk"]], "dicee.read_preprocess_save_load_kg.save_load_disk": [[29, "module-dicee.read_preprocess_save_load_kg.save_load_disk"]], "dicee.read_preprocess_save_load_kg.util": [[30, "module-dicee.read_preprocess_save_load_kg.util"]], "dicee.sanity_checkers": [[31, "module-dicee.sanity_checkers"]], "dicee.scripts": [[32, "module-dicee.scripts"]], "dicee.scripts.index": [[33, "module-dicee.scripts.index"]], "dicee.scripts.run": [[34, "module-dicee.scripts.run"]], "dicee.scripts.serve": [[35, "module-dicee.scripts.serve"]], "dicee.static_funcs": [[36, "module-dicee.static_funcs"]], "dicee.static_funcs_training": [[37, "module-dicee.static_funcs_training"]], "dicee.static_preprocess_funcs": [[38, "module-dicee.static_preprocess_funcs"]], "dicee.trainer.dice_trainer": [[39, "module-dicee.trainer.dice_trainer"]], "dicee.trainer": [[40, "module-dicee.trainer"]], "dicee.trainer.torch_trainer": [[41, "module-dicee.trainer.torch_trainer"]], "dicee.trainer.torch_trainer_ddp": [[42, "module-dicee.trainer.torch_trainer_ddp"]], "Welcome to DICE Embeddings!": [[43, "welcome-to-dice-embeddings"]], "Contents:": [[43, null]], "1vsAll Training Technique": [[44, "vsall-training-technique"]], "KvsAll Training Technique": [[45, "kvsall-training-technique"]], "Negative Sampling Technique": [[46, "negative-sampling-technique"]], "Dicee Manual": [[47, "dicee-manual"]], "Installation from Source": [[47, "installation-from-source"]], "Download Knowledge Graphs": [[47, "download-knowledge-graphs"]], "Knowledge Graph Embedding Models": [[47, "knowledge-graph-embedding-models"]], "How to Train": [[47, "how-to-train"]], "Creating an Embedding Vector Database": [[47, "creating-an-embedding-vector-database"]], "Learning Embeddings": [[47, "learning-embeddings"]], "Loading Embeddings into Qdrant Vector Database": [[47, "loading-embeddings-into-qdrant-vector-database"]], "Launching Webservice": [[47, "launching-webservice"]], "Retrieve and Search": [[47, "retrieve-and-search"]], "Answering Complex Queries": [[47, "answering-complex-queries"]], "Predicting Missing Links": [[47, "predicting-missing-links"]], "Downloading Pretrained Models": [[47, "downloading-pretrained-models"]], "How to Deploy": [[47, "how-to-deploy"]], "Docker": [[47, "docker"]], "How to cite": [[47, "how-to-cite"]], "Training": [[48, "training"], [48, "id1"]], "Input KG Format": [[48, "input-kg-format"]], "Training Features:": [[48, "training-features"]], "Available KGE Models": [[48, "available-kge-models"]], "Examples": [[48, "examples"]], "Examples for Sharded Training": [[48, "examples-for-sharded-training"]]}, "indexentries": {"abstractcallback (class in dicee.abstracts)": [[2, "dicee.abstracts.AbstractCallback"]], "abstractppecallback (class in dicee.abstracts)": [[2, "dicee.abstracts.AbstractPPECallback"]], "abstracttrainer (class in dicee.abstracts)": [[2, "dicee.abstracts.AbstractTrainer"]], "baseinteractivekge (class in dicee.abstracts)": [[2, "dicee.abstracts.BaseInteractiveKGE"]], "add_new_entity_embeddings() (dicee.abstracts.baseinteractivekge method)": [[2, "dicee.abstracts.BaseInteractiveKGE.add_new_entity_embeddings"]], "construct_input_and_output() (dicee.abstracts.baseinteractivekge method)": [[2, "dicee.abstracts.BaseInteractiveKGE.construct_input_and_output"]], "dicee.abstracts": [[2, "module-dicee.abstracts"]], "get_bpe_token_representation() (dicee.abstracts.baseinteractivekge method)": [[2, "dicee.abstracts.BaseInteractiveKGE.get_bpe_token_representation"]], "get_domain_of_relation() (dicee.abstracts.baseinteractivekge method)": [[2, "dicee.abstracts.BaseInteractiveKGE.get_domain_of_relation"]], "get_entity_embeddings() (dicee.abstracts.baseinteractivekge method)": [[2, "dicee.abstracts.BaseInteractiveKGE.get_entity_embeddings"]], "get_entity_index() (dicee.abstracts.baseinteractivekge method)": [[2, "dicee.abstracts.BaseInteractiveKGE.get_entity_index"]], "get_eval_report() (dicee.abstracts.baseinteractivekge method)": [[2, "dicee.abstracts.BaseInteractiveKGE.get_eval_report"]], "get_padded_bpe_triple_representation() (dicee.abstracts.baseinteractivekge method)": [[2, "dicee.abstracts.BaseInteractiveKGE.get_padded_bpe_triple_representation"]], "get_range_of_relation() (dicee.abstracts.baseinteractivekge method)": [[2, "dicee.abstracts.BaseInteractiveKGE.get_range_of_relation"]], "get_relation_embeddings() (dicee.abstracts.baseinteractivekge method)": [[2, "dicee.abstracts.BaseInteractiveKGE.get_relation_embeddings"]], "get_relation_index() (dicee.abstracts.baseinteractivekge method)": [[2, "dicee.abstracts.BaseInteractiveKGE.get_relation_index"]], "index_triple() (dicee.abstracts.baseinteractivekge method)": [[2, "dicee.abstracts.BaseInteractiveKGE.index_triple"]], "is_seen() (dicee.abstracts.baseinteractivekge method)": [[2, "dicee.abstracts.BaseInteractiveKGE.is_seen"]], "module": [[2, "module-dicee.abstracts"], [3, "module-dicee.analyse_experiments"], [4, "module-dicee.callbacks"], [5, "module-dicee.config"], [6, "module-dicee.dataset_classes"], [7, "module-dicee.eval_static_funcs"], [8, "module-dicee.evaluator"], [9, "module-dicee.executer"], [10, "module-dicee"], [11, "module-dicee.knowledge_graph"], [12, "module-dicee.knowledge_graph_embeddings"], [13, "module-dicee.models.base_model"], [14, "module-dicee.models.clifford"], [15, "module-dicee.models.complex"], [16, "module-dicee.models.dualE"], [17, "module-dicee.models.function_space"], [18, "module-dicee.models"], [19, "module-dicee.models.octonion"], [20, "module-dicee.models.pykeen_models"], [21, "module-dicee.models.quaternion"], [22, "module-dicee.models.real"], [23, "module-dicee.models.static_funcs"], [24, "module-dicee.models.transformers"], [25, "module-dicee.query_generator"], [26, "module-dicee.read_preprocess_save_load_kg"], [27, "module-dicee.read_preprocess_save_load_kg.preprocess"], [28, "module-dicee.read_preprocess_save_load_kg.read_from_disk"], [29, "module-dicee.read_preprocess_save_load_kg.save_load_disk"], [30, "module-dicee.read_preprocess_save_load_kg.util"], [31, "module-dicee.sanity_checkers"], [32, "module-dicee.scripts"], [33, "module-dicee.scripts.index"], [34, "module-dicee.scripts.run"], [35, "module-dicee.scripts.serve"], [36, "module-dicee.static_funcs"], [37, "module-dicee.static_funcs_training"], [38, "module-dicee.static_preprocess_funcs"], [39, "module-dicee.trainer.dice_trainer"], [40, "module-dicee.trainer"], [41, "module-dicee.trainer.torch_trainer"], [42, "module-dicee.trainer.torch_trainer_ddp"]], "name (dicee.abstracts.baseinteractivekge property)": [[2, "dicee.abstracts.BaseInteractiveKGE.name"]], "on_fit_end() (dicee.abstracts.abstractcallback method)": [[2, "dicee.abstracts.AbstractCallback.on_fit_end"]], "on_fit_end() (dicee.abstracts.abstractppecallback method)": [[2, "dicee.abstracts.AbstractPPECallback.on_fit_end"]], "on_fit_end() (dicee.abstracts.abstracttrainer method)": [[2, "dicee.abstracts.AbstractTrainer.on_fit_end"]], "on_fit_start() (dicee.abstracts.abstractcallback method)": [[2, "dicee.abstracts.AbstractCallback.on_fit_start"]], "on_fit_start() (dicee.abstracts.abstractppecallback method)": [[2, "dicee.abstracts.AbstractPPECallback.on_fit_start"]], "on_fit_start() (dicee.abstracts.abstracttrainer method)": [[2, "dicee.abstracts.AbstractTrainer.on_fit_start"]], "on_init_end() (dicee.abstracts.abstractcallback method)": [[2, "dicee.abstracts.AbstractCallback.on_init_end"]], "on_init_start() (dicee.abstracts.abstractcallback method)": [[2, "dicee.abstracts.AbstractCallback.on_init_start"]], "on_train_batch_end() (dicee.abstracts.abstractcallback method)": [[2, "dicee.abstracts.AbstractCallback.on_train_batch_end"]], "on_train_batch_end() (dicee.abstracts.abstracttrainer method)": [[2, "dicee.abstracts.AbstractTrainer.on_train_batch_end"]], "on_train_epoch_end() (dicee.abstracts.abstractcallback method)": [[2, "dicee.abstracts.AbstractCallback.on_train_epoch_end"]], "on_train_epoch_end() (dicee.abstracts.abstracttrainer method)": [[2, "dicee.abstracts.AbstractTrainer.on_train_epoch_end"]], "parameters() (dicee.abstracts.baseinteractivekge method)": [[2, "dicee.abstracts.BaseInteractiveKGE.parameters"]], "sample_entity() (dicee.abstracts.baseinteractivekge method)": [[2, "dicee.abstracts.BaseInteractiveKGE.sample_entity"]], "sample_relation() (dicee.abstracts.baseinteractivekge method)": [[2, "dicee.abstracts.BaseInteractiveKGE.sample_relation"]], "save() (dicee.abstracts.baseinteractivekge method)": [[2, "dicee.abstracts.BaseInteractiveKGE.save"]], "save_checkpoint() (dicee.abstracts.abstracttrainer static method)": [[2, "dicee.abstracts.AbstractTrainer.save_checkpoint"]], "set_model_eval_mode() (dicee.abstracts.baseinteractivekge method)": [[2, "dicee.abstracts.BaseInteractiveKGE.set_model_eval_mode"]], "set_model_train_mode() (dicee.abstracts.baseinteractivekge method)": [[2, "dicee.abstracts.BaseInteractiveKGE.set_model_train_mode"]], "store_ensemble() (dicee.abstracts.abstractppecallback method)": [[2, "dicee.abstracts.AbstractPPECallback.store_ensemble"]], "experiment (class in dicee.analyse_experiments)": [[3, "dicee.analyse_experiments.Experiment"]], "analyse() (in module dicee.analyse_experiments)": [[3, "dicee.analyse_experiments.analyse"]], "dicee.analyse_experiments": [[3, "module-dicee.analyse_experiments"]], "get_default_arguments() (in module dicee.analyse_experiments)": [[3, "dicee.analyse_experiments.get_default_arguments"]], "save_experiment() (dicee.analyse_experiments.experiment method)": [[3, "dicee.analyse_experiments.Experiment.save_experiment"]], "to_df() (dicee.analyse_experiments.experiment method)": [[3, "dicee.analyse_experiments.Experiment.to_df"]], "aswa (class in dicee.callbacks)": [[4, "dicee.callbacks.ASWA"]], "accumulateepochlosscallback (class in dicee.callbacks)": [[4, "dicee.callbacks.AccumulateEpochLossCallback"]], "eval (class in dicee.callbacks)": [[4, "dicee.callbacks.Eval"]], "kgesavecallback (class in dicee.callbacks)": [[4, "dicee.callbacks.KGESaveCallback"]], "krone (class in dicee.callbacks)": [[4, "dicee.callbacks.KronE"]], "perturb (class in dicee.callbacks)": [[4, "dicee.callbacks.Perturb"]], "printcallback (class in dicee.callbacks)": [[4, "dicee.callbacks.PrintCallback"]], "pseudolabellingcallback (class in dicee.callbacks)": [[4, "dicee.callbacks.PseudoLabellingCallback"]], "batch_kronecker_product() (dicee.callbacks.krone static method)": [[4, "dicee.callbacks.KronE.batch_kronecker_product"]], "compute_convergence() (in module dicee.callbacks)": [[4, "dicee.callbacks.compute_convergence"]], "compute_mrr() (dicee.callbacks.aswa static method)": [[4, "dicee.callbacks.ASWA.compute_mrr"]], "create_random_data() (dicee.callbacks.pseudolabellingcallback method)": [[4, "dicee.callbacks.PseudoLabellingCallback.create_random_data"]], "decide() (dicee.callbacks.aswa method)": [[4, "dicee.callbacks.ASWA.decide"]], "dicee.callbacks": [[4, "module-dicee.callbacks"]], "estimate_q() (in module dicee.callbacks)": [[4, "dicee.callbacks.estimate_q"]], "get_aswa_state_dict() (dicee.callbacks.aswa method)": [[4, "dicee.callbacks.ASWA.get_aswa_state_dict"]], "get_kronecker_triple_representation() (dicee.callbacks.krone method)": [[4, "dicee.callbacks.KronE.get_kronecker_triple_representation"]], "on_epoch_end() (dicee.callbacks.kgesavecallback method)": [[4, "dicee.callbacks.KGESaveCallback.on_epoch_end"]], "on_epoch_end() (dicee.callbacks.pseudolabellingcallback method)": [[4, "dicee.callbacks.PseudoLabellingCallback.on_epoch_end"]], "on_fit_end() (dicee.callbacks.aswa method)": [[4, "dicee.callbacks.ASWA.on_fit_end"]], "on_fit_end() (dicee.callbacks.accumulateepochlosscallback method)": [[4, "dicee.callbacks.AccumulateEpochLossCallback.on_fit_end"]], "on_fit_end() (dicee.callbacks.eval method)": [[4, "dicee.callbacks.Eval.on_fit_end"]], "on_fit_end() (dicee.callbacks.kgesavecallback method)": [[4, "dicee.callbacks.KGESaveCallback.on_fit_end"]], "on_fit_end() (dicee.callbacks.printcallback method)": [[4, "dicee.callbacks.PrintCallback.on_fit_end"]], "on_fit_start() (dicee.callbacks.eval method)": [[4, "dicee.callbacks.Eval.on_fit_start"]], "on_fit_start() (dicee.callbacks.kgesavecallback method)": [[4, "dicee.callbacks.KGESaveCallback.on_fit_start"]], "on_fit_start() (dicee.callbacks.krone method)": [[4, "dicee.callbacks.KronE.on_fit_start"]], "on_fit_start() (dicee.callbacks.printcallback method)": [[4, "dicee.callbacks.PrintCallback.on_fit_start"]], "on_train_batch_end() (dicee.callbacks.eval method)": [[4, "dicee.callbacks.Eval.on_train_batch_end"]], "on_train_batch_end() (dicee.callbacks.kgesavecallback method)": [[4, "dicee.callbacks.KGESaveCallback.on_train_batch_end"]], "on_train_batch_end() (dicee.callbacks.printcallback method)": [[4, "dicee.callbacks.PrintCallback.on_train_batch_end"]], "on_train_batch_start() (dicee.callbacks.perturb method)": [[4, "dicee.callbacks.Perturb.on_train_batch_start"]], "on_train_epoch_end() (dicee.callbacks.aswa method)": [[4, "dicee.callbacks.ASWA.on_train_epoch_end"]], "on_train_epoch_end() (dicee.callbacks.eval method)": [[4, "dicee.callbacks.Eval.on_train_epoch_end"]], "on_train_epoch_end() (dicee.callbacks.kgesavecallback method)": [[4, "dicee.callbacks.KGESaveCallback.on_train_epoch_end"]], "on_train_epoch_end() (dicee.callbacks.printcallback method)": [[4, "dicee.callbacks.PrintCallback.on_train_epoch_end"]], "namespace (class in dicee.config)": [[5, "dicee.config.Namespace"]], "__iter__() (dicee.config.namespace method)": [[5, "dicee.config.Namespace.__iter__"]], "adaptive_swa (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.adaptive_swa"]], "add_noise_rate (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.add_noise_rate"]], "backend (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.backend"]], "batch_size (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.batch_size"]], "block_size (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.block_size"]], "byte_pair_encoding (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.byte_pair_encoding"]], "callbacks (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.callbacks"]], "continual_learning (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.continual_learning"]], "dataset_dir (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.dataset_dir"]], "dicee.config": [[5, "module-dicee.config"]], "embedding_dim (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.embedding_dim"]], "eval_model (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.eval_model"]], "feature_map_dropout_rate (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.feature_map_dropout_rate"]], "gpus (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.gpus"]], "gradient_accumulation_steps (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.gradient_accumulation_steps"]], "hidden_dropout_rate (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.hidden_dropout_rate"]], "init_param (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.init_param"]], "input_dropout_rate (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.input_dropout_rate"]], "kernel_size (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.kernel_size"]], "lr (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.lr"]], "model (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.model"]], "neg_ratio (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.neg_ratio"]], "normalization (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.normalization"]], "num_core (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.num_core"]], "num_epochs (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.num_epochs"]], "num_folds_for_cv (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.num_folds_for_cv"]], "num_of_output_channels (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.num_of_output_channels"]], "optim (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.optim"]], "p (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.p"]], "path_single_kg (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.path_single_kg"]], "path_to_store_single_run (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.path_to_store_single_run"]], "pykeen_model_kwargs (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.pykeen_model_kwargs"]], "q (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.q"]], "random_seed (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.random_seed"]], "read_only_few (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.read_only_few"]], "sample_triples_ratio (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.sample_triples_ratio"]], "save_embeddings_as_csv (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.save_embeddings_as_csv"]], "save_model_at_every_epoch (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.save_model_at_every_epoch"]], "scoring_technique (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.scoring_technique"]], "sparql_endpoint (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.sparql_endpoint"]], "storage_path (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.storage_path"]], "swa (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.swa"]], "trainer (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.trainer"]], "weight_decay (dicee.config.namespace attribute)": [[5, "dicee.config.Namespace.weight_decay"]], "allvsall (class in dicee.dataset_classes)": [[6, "dicee.dataset_classes.AllvsAll"]], "bpe_negativesamplingdataset (class in dicee.dataset_classes)": [[6, "dicee.dataset_classes.BPE_NegativeSamplingDataset"]], "cvdatamodule (class in dicee.dataset_classes)": [[6, "dicee.dataset_classes.CVDataModule"]], "kvsall (class in dicee.dataset_classes)": [[6, "dicee.dataset_classes.KvsAll"]], "kvssampledataset (class in dicee.dataset_classes)": [[6, "dicee.dataset_classes.KvsSampleDataset"]], "multiclassclassificationdataset (class in dicee.dataset_classes)": [[6, "dicee.dataset_classes.MultiClassClassificationDataset"]], "multilabeldataset (class in dicee.dataset_classes)": [[6, "dicee.dataset_classes.MultiLabelDataset"]], "negsampledataset (class in dicee.dataset_classes)": [[6, "dicee.dataset_classes.NegSampleDataset"]], "onevsalldataset (class in dicee.dataset_classes)": [[6, "dicee.dataset_classes.OnevsAllDataset"]], "triplepredictiondataset (class in dicee.dataset_classes)": [[6, "dicee.dataset_classes.TriplePredictionDataset"]], "__getitem__() (dicee.dataset_classes.allvsall method)": [[6, "dicee.dataset_classes.AllvsAll.__getitem__"]], "__getitem__() (dicee.dataset_classes.bpe_negativesamplingdataset method)": [[6, "dicee.dataset_classes.BPE_NegativeSamplingDataset.__getitem__"]], "__getitem__() (dicee.dataset_classes.kvsall method)": [[6, "dicee.dataset_classes.KvsAll.__getitem__"]], "__getitem__() (dicee.dataset_classes.kvssampledataset method)": [[6, "dicee.dataset_classes.KvsSampleDataset.__getitem__"]], "__getitem__() (dicee.dataset_classes.multiclassclassificationdataset method)": [[6, "dicee.dataset_classes.MultiClassClassificationDataset.__getitem__"]], "__getitem__() (dicee.dataset_classes.multilabeldataset method)": [[6, "dicee.dataset_classes.MultiLabelDataset.__getitem__"]], "__getitem__() (dicee.dataset_classes.negsampledataset method)": [[6, "dicee.dataset_classes.NegSampleDataset.__getitem__"]], "__getitem__() (dicee.dataset_classes.onevsalldataset method)": [[6, "dicee.dataset_classes.OnevsAllDataset.__getitem__"]], "__getitem__() (dicee.dataset_classes.triplepredictiondataset method)": [[6, "dicee.dataset_classes.TriplePredictionDataset.__getitem__"]], "__len__() (dicee.dataset_classes.allvsall method)": [[6, "dicee.dataset_classes.AllvsAll.__len__"]], "__len__() (dicee.dataset_classes.bpe_negativesamplingdataset method)": [[6, "dicee.dataset_classes.BPE_NegativeSamplingDataset.__len__"]], "__len__() (dicee.dataset_classes.kvsall method)": [[6, "dicee.dataset_classes.KvsAll.__len__"]], "__len__() (dicee.dataset_classes.kvssampledataset method)": [[6, "dicee.dataset_classes.KvsSampleDataset.__len__"]], "__len__() (dicee.dataset_classes.multiclassclassificationdataset method)": [[6, "dicee.dataset_classes.MultiClassClassificationDataset.__len__"]], "__len__() (dicee.dataset_classes.multilabeldataset method)": [[6, "dicee.dataset_classes.MultiLabelDataset.__len__"]], "__len__() (dicee.dataset_classes.negsampledataset method)": [[6, "dicee.dataset_classes.NegSampleDataset.__len__"]], "__len__() (dicee.dataset_classes.onevsalldataset method)": [[6, "dicee.dataset_classes.OnevsAllDataset.__len__"]], "__len__() (dicee.dataset_classes.triplepredictiondataset method)": [[6, "dicee.dataset_classes.TriplePredictionDataset.__len__"]], "collate_fn() (dicee.dataset_classes.bpe_negativesamplingdataset method)": [[6, "dicee.dataset_classes.BPE_NegativeSamplingDataset.collate_fn"]], "collate_fn() (dicee.dataset_classes.triplepredictiondataset method)": [[6, "dicee.dataset_classes.TriplePredictionDataset.collate_fn"]], "construct_dataset() (in module dicee.dataset_classes)": [[6, "dicee.dataset_classes.construct_dataset"]], "dicee.dataset_classes": [[6, "module-dicee.dataset_classes"]], "prepare_data() (dicee.dataset_classes.cvdatamodule method)": [[6, "dicee.dataset_classes.CVDataModule.prepare_data"]], "reload_dataset() (in module dicee.dataset_classes)": [[6, "dicee.dataset_classes.reload_dataset"]], "setup() (dicee.dataset_classes.cvdatamodule method)": [[6, "dicee.dataset_classes.CVDataModule.setup"]], "train_dataloader() (dicee.dataset_classes.cvdatamodule method)": [[6, "dicee.dataset_classes.CVDataModule.train_dataloader"]], "transfer_batch_to_device() (dicee.dataset_classes.cvdatamodule method)": [[6, "dicee.dataset_classes.CVDataModule.transfer_batch_to_device"]], "dicee.eval_static_funcs": [[7, "module-dicee.eval_static_funcs"]], "evaluate_link_prediction_performance() (in module dicee.eval_static_funcs)": [[7, "dicee.eval_static_funcs.evaluate_link_prediction_performance"]], "evaluate_link_prediction_performance_with_bpe() (in module dicee.eval_static_funcs)": [[7, "dicee.eval_static_funcs.evaluate_link_prediction_performance_with_bpe"]], "evaluate_link_prediction_performance_with_bpe_reciprocals() (in module dicee.eval_static_funcs)": [[7, "dicee.eval_static_funcs.evaluate_link_prediction_performance_with_bpe_reciprocals"]], "evaluate_link_prediction_performance_with_reciprocals() (in module dicee.eval_static_funcs)": [[7, "dicee.eval_static_funcs.evaluate_link_prediction_performance_with_reciprocals"]], "evaluate_lp_bpe_k_vs_all() (in module dicee.eval_static_funcs)": [[7, "dicee.eval_static_funcs.evaluate_lp_bpe_k_vs_all"]], "evaluator (class in dicee.evaluator)": [[8, "dicee.evaluator.Evaluator"]], "dicee.evaluator": [[8, "module-dicee.evaluator"]], "dummy_eval() (dicee.evaluator.evaluator method)": [[8, "dicee.evaluator.Evaluator.dummy_eval"]], "eval() (dicee.evaluator.evaluator method)": [[8, "dicee.evaluator.Evaluator.eval"]], "eval_rank_of_head_and_tail_byte_pair_encoded_entity() (dicee.evaluator.evaluator method)": [[8, "dicee.evaluator.Evaluator.eval_rank_of_head_and_tail_byte_pair_encoded_entity"]], "eval_rank_of_head_and_tail_entity() (dicee.evaluator.evaluator method)": [[8, "dicee.evaluator.Evaluator.eval_rank_of_head_and_tail_entity"]], "eval_with_bpe_vs_all() (dicee.evaluator.evaluator method)": [[8, "dicee.evaluator.Evaluator.eval_with_bpe_vs_all"]], "eval_with_byte() (dicee.evaluator.evaluator method)": [[8, "dicee.evaluator.Evaluator.eval_with_byte"]], "eval_with_data() (dicee.evaluator.evaluator method)": [[8, "dicee.evaluator.Evaluator.eval_with_data"]], "eval_with_vs_all() (dicee.evaluator.evaluator method)": [[8, "dicee.evaluator.Evaluator.eval_with_vs_all"]], "evaluate_lp() (dicee.evaluator.evaluator method)": [[8, "dicee.evaluator.Evaluator.evaluate_lp"]], "evaluate_lp_bpe_k_vs_all() (dicee.evaluator.evaluator method)": [[8, "dicee.evaluator.Evaluator.evaluate_lp_bpe_k_vs_all"]], "evaluate_lp_k_vs_all() (dicee.evaluator.evaluator method)": [[8, "dicee.evaluator.Evaluator.evaluate_lp_k_vs_all"]], "evaluate_lp_with_byte() (dicee.evaluator.evaluator method)": [[8, "dicee.evaluator.Evaluator.evaluate_lp_with_byte"]], "vocab_preparation() (dicee.evaluator.evaluator method)": [[8, "dicee.evaluator.Evaluator.vocab_preparation"]], "continuousexecute (class in dicee.executer)": [[9, "dicee.executer.ContinuousExecute"]], "execute (class in dicee.executer)": [[9, "dicee.executer.Execute"]], "continual_start() (dicee.executer.continuousexecute method)": [[9, "dicee.executer.ContinuousExecute.continual_start"]], "dicee.executer": [[9, "module-dicee.executer"]], "end() (dicee.executer.execute method)": [[9, "dicee.executer.Execute.end"]], "load_indexed_data() (dicee.executer.execute method)": [[9, "dicee.executer.Execute.load_indexed_data"]], "read_or_load_kg() (dicee.executer.execute method)": [[9, "dicee.executer.Execute.read_or_load_kg"]], "read_preprocess_index_serialize_data() (dicee.executer.execute method)": [[9, "dicee.executer.Execute.read_preprocess_index_serialize_data"]], "save_trained_model() (dicee.executer.execute method)": [[9, "dicee.executer.Execute.save_trained_model"]], "start() (dicee.executer.execute method)": [[9, "dicee.executer.Execute.start"]], "write_report() (dicee.executer.execute method)": [[9, "dicee.executer.Execute.write_report"]], "aconex (class in dicee)": [[10, "dicee.AConEx"]], "aconvo (class in dicee)": [[10, "dicee.AConvO"]], "aconvq (class in dicee)": [[10, "dicee.AConvQ"]], "allvsall (class in dicee)": [[10, "dicee.AllvsAll"]], "bpe_negativesamplingdataset (class in dicee)": [[10, "dicee.BPE_NegativeSamplingDataset"]], "basekge (class in dicee)": [[10, "dicee.BaseKGE"]], "byte (class in dicee)": [[10, "dicee.BytE"]], "cmult (class in dicee)": [[10, "dicee.CMult"]], "cvdatamodule (class in dicee)": [[10, "dicee.CVDataModule"]], "complex (class in dicee)": [[10, "dicee.ComplEx"]], "conex (class in dicee)": [[10, "dicee.ConEx"]], "convo (class in dicee)": [[10, "dicee.ConvO"]], "convq (class in dicee)": [[10, "dicee.ConvQ"]], "dice_trainer (class in dicee)": [[10, "dicee.DICE_Trainer"]], "decal (class in dicee)": [[10, "dicee.DeCaL"]], "distmult (class in dicee)": [[10, "dicee.DistMult"]], "duale (class in dicee)": [[10, "dicee.DualE"]], "execute (class in dicee)": [[10, "dicee.Execute"]], "kge (class in dicee)": [[10, "dicee.KGE"]], "keci (class in dicee)": [[10, "dicee.Keci"]], "kecibase (class in dicee)": [[10, "dicee.KeciBase"]], "kvsall (class in dicee)": [[10, "dicee.KvsAll"]], "kvssampledataset (class in dicee)": [[10, "dicee.KvsSampleDataset"]], "lfmult (class in dicee)": [[10, "dicee.LFMult"]], "multiclassclassificationdataset (class in dicee)": [[10, "dicee.MultiClassClassificationDataset"]], "multilabeldataset (class in dicee)": [[10, "dicee.MultiLabelDataset"]], "negsampledataset (class in dicee)": [[10, "dicee.NegSampleDataset"]], "omult (class in dicee)": [[10, "dicee.OMult"]], "onevsalldataset (class in dicee)": [[10, "dicee.OnevsAllDataset"]], "pyke (class in dicee)": [[10, "dicee.Pyke"]], "pykeenkge (class in dicee)": [[10, "dicee.PykeenKGE"]], "qmult (class in dicee)": [[10, "dicee.QMult"]], "querygenerator (class in dicee)": [[10, "dicee.QueryGenerator"]], "shallom (class in dicee)": [[10, "dicee.Shallom"]], "t() (dicee.duale method)": [[10, "dicee.DualE.T"]], "transe (class in dicee)": [[10, "dicee.TransE"]], "triplepredictiondataset (class in dicee)": [[10, "dicee.TriplePredictionDataset"]], "__getitem__() (dicee.allvsall method)": [[10, "dicee.AllvsAll.__getitem__"]], "__getitem__() (dicee.bpe_negativesamplingdataset method)": [[10, "dicee.BPE_NegativeSamplingDataset.__getitem__"]], "__getitem__() (dicee.kvsall method)": [[10, "dicee.KvsAll.__getitem__"]], "__getitem__() (dicee.kvssampledataset method)": [[10, "dicee.KvsSampleDataset.__getitem__"]], "__getitem__() (dicee.multiclassclassificationdataset method)": [[10, "dicee.MultiClassClassificationDataset.__getitem__"]], "__getitem__() (dicee.multilabeldataset method)": [[10, "dicee.MultiLabelDataset.__getitem__"]], "__getitem__() (dicee.negsampledataset method)": [[10, "dicee.NegSampleDataset.__getitem__"]], "__getitem__() (dicee.onevsalldataset method)": [[10, "dicee.OnevsAllDataset.__getitem__"]], "__getitem__() (dicee.triplepredictiondataset method)": [[10, "dicee.TriplePredictionDataset.__getitem__"]], "__len__() (dicee.allvsall method)": [[10, "dicee.AllvsAll.__len__"]], "__len__() (dicee.bpe_negativesamplingdataset method)": [[10, "dicee.BPE_NegativeSamplingDataset.__len__"]], "__len__() (dicee.kvsall method)": [[10, "dicee.KvsAll.__len__"]], "__len__() (dicee.kvssampledataset method)": [[10, "dicee.KvsSampleDataset.__len__"]], "__len__() (dicee.multiclassclassificationdataset method)": [[10, "dicee.MultiClassClassificationDataset.__len__"]], "__len__() (dicee.multilabeldataset method)": [[10, "dicee.MultiLabelDataset.__len__"]], "__len__() (dicee.negsampledataset method)": [[10, "dicee.NegSampleDataset.__len__"]], "__len__() (dicee.onevsalldataset method)": [[10, "dicee.OnevsAllDataset.__len__"]], "__len__() (dicee.triplepredictiondataset method)": [[10, "dicee.TriplePredictionDataset.__len__"]], "__str__() (dicee.kge method)": [[10, "dicee.KGE.__str__"]], "__version__ (in module dicee)": [[10, "dicee.__version__"]], "achieve_answer() (dicee.querygenerator method)": [[10, "dicee.QueryGenerator.achieve_answer"]], "add_noisy_triples() (in module dicee)": [[10, "dicee.add_noisy_triples"]], "answer_multi_hop_query() (dicee.kge method)": [[10, "dicee.KGE.answer_multi_hop_query"]], "apply_coefficients() (dicee.decal method)": [[10, "dicee.DeCaL.apply_coefficients"]], "apply_coefficients() (dicee.keci method)": [[10, "dicee.Keci.apply_coefficients"]], "cl_pqr() (dicee.decal method)": [[10, "dicee.DeCaL.cl_pqr"]], "clifford_mul() (dicee.cmult method)": [[10, "dicee.CMult.clifford_mul"]], "clifford_multiplication() (dicee.keci method)": [[10, "dicee.Keci.clifford_multiplication"]], "collate_fn() (dicee.bpe_negativesamplingdataset method)": [[10, "dicee.BPE_NegativeSamplingDataset.collate_fn"]], "collate_fn() (dicee.triplepredictiondataset method)": [[10, "dicee.TriplePredictionDataset.collate_fn"]], "comp_func() (dicee.lfmult method)": [[10, "dicee.LFMult.comp_func"]], "compute_sigma_pp() (dicee.decal method)": [[10, "dicee.DeCaL.compute_sigma_pp"]], "compute_sigma_pp() (dicee.keci method)": [[10, "dicee.Keci.compute_sigma_pp"]], "compute_sigma_pq() (dicee.decal method)": [[10, "dicee.DeCaL.compute_sigma_pq"]], "compute_sigma_pq() (dicee.keci method)": [[10, "dicee.Keci.compute_sigma_pq"]], "compute_sigma_pr() (dicee.decal method)": [[10, "dicee.DeCaL.compute_sigma_pr"]], "compute_sigma_qq() (dicee.decal method)": [[10, "dicee.DeCaL.compute_sigma_qq"]], "compute_sigma_qq() (dicee.keci method)": [[10, "dicee.Keci.compute_sigma_qq"]], "compute_sigma_qr() (dicee.decal method)": [[10, "dicee.DeCaL.compute_sigma_qr"]], "compute_sigma_rr() (dicee.decal method)": [[10, "dicee.DeCaL.compute_sigma_rr"]], "compute_sigmas_multivect() (dicee.decal method)": [[10, "dicee.DeCaL.compute_sigmas_multivect"]], "compute_sigmas_single() (dicee.decal method)": [[10, "dicee.DeCaL.compute_sigmas_single"]], "construct_cl_multivector() (dicee.decal method)": [[10, "dicee.DeCaL.construct_cl_multivector"]], "construct_cl_multivector() (dicee.keci method)": [[10, "dicee.Keci.construct_cl_multivector"]], "construct_dataset() (in module dicee)": [[10, "dicee.construct_dataset"]], "construct_graph() (dicee.querygenerator method)": [[10, "dicee.QueryGenerator.construct_graph"]], "construct_multi_coeff() (dicee.lfmult method)": [[10, "dicee.LFMult.construct_multi_coeff"]], "continual_start() (dicee.dice_trainer method)": [[10, "dicee.DICE_Trainer.continual_start"]], "continual_training_setup_executor() (in module dicee)": [[10, "dicee.continual_training_setup_executor"]], "create_experiment_folder() (in module dicee)": [[10, "dicee.create_experiment_folder"]], "create_recipriocal_triples() (in module dicee)": [[10, "dicee.create_recipriocal_triples"]], "create_vector_database() (dicee.kge method)": [[10, "dicee.KGE.create_vector_database"]], "deploy() (dicee.kge method)": [[10, "dicee.KGE.deploy"]], "deploy_head_entity_prediction() (in module dicee)": [[10, "dicee.deploy_head_entity_prediction"]], "deploy_relation_prediction() (in module dicee)": [[10, "dicee.deploy_relation_prediction"]], "deploy_tail_entity_prediction() (in module dicee)": [[10, "dicee.deploy_tail_entity_prediction"]], "deploy_triple_prediction() (in module dicee)": [[10, "dicee.deploy_triple_prediction"]], "dicee": [[10, "module-dicee"]], "download_file() (in module dicee)": [[10, "dicee.download_file"]], "download_files_from_url() (in module dicee)": [[10, "dicee.download_files_from_url"]], "download_pretrained_model() (in module dicee)": [[10, "dicee.download_pretrained_model"]], "end() (dicee.execute method)": [[10, "dicee.Execute.end"]], "eval_lp_performance() (dicee.kge method)": [[10, "dicee.KGE.eval_lp_performance"]], "evaluate() (in module dicee)": [[10, "dicee.evaluate"]], "exponential_function() (in module dicee)": [[10, "dicee.exponential_function"]], "fill_query() (dicee.querygenerator method)": [[10, "dicee.QueryGenerator.fill_query"]], "find_missing_triples() (dicee.kge method)": [[10, "dicee.KGE.find_missing_triples"]], "forward() (dicee.basekge method)": [[10, "dicee.BaseKGE.forward"]], "forward() (dicee.byte method)": [[10, "dicee.BytE.forward"]], "forward_byte_pair_encoded_k_vs_all() (dicee.basekge method)": [[10, "dicee.BaseKGE.forward_byte_pair_encoded_k_vs_all"]], "forward_byte_pair_encoded_triple() (dicee.basekge method)": [[10, "dicee.BaseKGE.forward_byte_pair_encoded_triple"]], "forward_k_vs_all() (dicee.aconex method)": [[10, "dicee.AConEx.forward_k_vs_all"]], "forward_k_vs_all() (dicee.aconvo method)": [[10, "dicee.AConvO.forward_k_vs_all"]], "forward_k_vs_all() (dicee.aconvq method)": [[10, "dicee.AConvQ.forward_k_vs_all"]], "forward_k_vs_all() (dicee.basekge method)": [[10, "dicee.BaseKGE.forward_k_vs_all"]], "forward_k_vs_all() (dicee.cmult method)": [[10, "dicee.CMult.forward_k_vs_all"]], "forward_k_vs_all() (dicee.complex method)": [[10, "dicee.ComplEx.forward_k_vs_all"]], "forward_k_vs_all() (dicee.conex method)": [[10, "dicee.ConEx.forward_k_vs_all"]], "forward_k_vs_all() (dicee.convo method)": [[10, "dicee.ConvO.forward_k_vs_all"]], "forward_k_vs_all() (dicee.convq method)": [[10, "dicee.ConvQ.forward_k_vs_all"]], "forward_k_vs_all() (dicee.decal method)": [[10, "dicee.DeCaL.forward_k_vs_all"]], "forward_k_vs_all() (dicee.distmult method)": [[10, "dicee.DistMult.forward_k_vs_all"]], "forward_k_vs_all() (dicee.duale method)": [[10, "dicee.DualE.forward_k_vs_all"]], "forward_k_vs_all() (dicee.keci method)": [[10, "dicee.Keci.forward_k_vs_all"]], "forward_k_vs_all() (dicee.omult method)": [[10, "dicee.OMult.forward_k_vs_all"]], "forward_k_vs_all() (dicee.pykeenkge method)": [[10, "dicee.PykeenKGE.forward_k_vs_all"]], "forward_k_vs_all() (dicee.qmult method)": [[10, "dicee.QMult.forward_k_vs_all"]], "forward_k_vs_all() (dicee.shallom method)": [[10, "dicee.Shallom.forward_k_vs_all"]], "forward_k_vs_all() (dicee.transe method)": [[10, "dicee.TransE.forward_k_vs_all"]], "forward_k_vs_sample() (dicee.aconex method)": [[10, "dicee.AConEx.forward_k_vs_sample"]], "forward_k_vs_sample() (dicee.basekge method)": [[10, "dicee.BaseKGE.forward_k_vs_sample"]], "forward_k_vs_sample() (dicee.conex method)": [[10, "dicee.ConEx.forward_k_vs_sample"]], "forward_k_vs_sample() (dicee.distmult method)": [[10, "dicee.DistMult.forward_k_vs_sample"]], "forward_k_vs_sample() (dicee.keci method)": [[10, "dicee.Keci.forward_k_vs_sample"]], "forward_k_vs_sample() (dicee.pykeenkge method)": [[10, "dicee.PykeenKGE.forward_k_vs_sample"]], "forward_k_vs_sample() (dicee.qmult method)": [[10, "dicee.QMult.forward_k_vs_sample"]], "forward_k_vs_with_explicit() (dicee.keci method)": [[10, "dicee.Keci.forward_k_vs_with_explicit"]], "forward_triples() (dicee.aconex method)": [[10, "dicee.AConEx.forward_triples"]], "forward_triples() (dicee.aconvo method)": [[10, "dicee.AConvO.forward_triples"]], "forward_triples() (dicee.aconvq method)": [[10, "dicee.AConvQ.forward_triples"]], "forward_triples() (dicee.basekge method)": [[10, "dicee.BaseKGE.forward_triples"]], "forward_triples() (dicee.cmult method)": [[10, "dicee.CMult.forward_triples"]], "forward_triples() (dicee.conex method)": [[10, "dicee.ConEx.forward_triples"]], "forward_triples() (dicee.convo method)": [[10, "dicee.ConvO.forward_triples"]], "forward_triples() (dicee.convq method)": [[10, "dicee.ConvQ.forward_triples"]], "forward_triples() (dicee.decal method)": [[10, "dicee.DeCaL.forward_triples"]], "forward_triples() (dicee.duale method)": [[10, "dicee.DualE.forward_triples"]], "forward_triples() (dicee.keci method)": [[10, "dicee.Keci.forward_triples"]], "forward_triples() (dicee.lfmult method)": [[10, "dicee.LFMult.forward_triples"]], "forward_triples() (dicee.pyke method)": [[10, "dicee.Pyke.forward_triples"]], "forward_triples() (dicee.pykeenkge method)": [[10, "dicee.PykeenKGE.forward_triples"]], "forward_triples() (dicee.shallom method)": [[10, "dicee.Shallom.forward_triples"]], "generate() (dicee.byte method)": [[10, "dicee.BytE.generate"]], "generate() (dicee.kge method)": [[10, "dicee.KGE.generate"]], "generate_queries() (dicee.querygenerator method)": [[10, "dicee.QueryGenerator.generate_queries"]], "get_bpe_head_and_relation_representation() (dicee.basekge method)": [[10, "dicee.BaseKGE.get_bpe_head_and_relation_representation"]], "get_ee_vocab() (in module dicee)": [[10, "dicee.get_ee_vocab"]], "get_embeddings() (dicee.basekge method)": [[10, "dicee.BaseKGE.get_embeddings"]], "get_embeddings() (dicee.shallom method)": [[10, "dicee.Shallom.get_embeddings"]], "get_er_vocab() (in module dicee)": [[10, "dicee.get_er_vocab"]], "get_head_relation_representation() (dicee.basekge method)": [[10, "dicee.BaseKGE.get_head_relation_representation"]], "get_queries() (dicee.querygenerator method)": [[10, "dicee.QueryGenerator.get_queries"]], "get_re_vocab() (in module dicee)": [[10, "dicee.get_re_vocab"]], "get_sentence_representation() (dicee.basekge method)": [[10, "dicee.BaseKGE.get_sentence_representation"]], "get_transductive_entity_embeddings() (dicee.kge method)": [[10, "dicee.KGE.get_transductive_entity_embeddings"]], "get_triple_representation() (dicee.basekge method)": [[10, "dicee.BaseKGE.get_triple_representation"]], "ground_queries() (dicee.querygenerator method)": [[10, "dicee.QueryGenerator.ground_queries"]], "init_params_with_sanity_checking() (dicee.basekge method)": [[10, "dicee.BaseKGE.init_params_with_sanity_checking"]], "initialize_dataloader() (dicee.dice_trainer method)": [[10, "dicee.DICE_Trainer.initialize_dataloader"]], "initialize_dataset() (dicee.dice_trainer method)": [[10, "dicee.DICE_Trainer.initialize_dataset"]], "initialize_or_load_model() (dicee.dice_trainer method)": [[10, "dicee.DICE_Trainer.initialize_or_load_model"]], "initialize_trainer() (dicee.dice_trainer method)": [[10, "dicee.DICE_Trainer.initialize_trainer"]], "intialize_model() (in module dicee)": [[10, "dicee.intialize_model"]], "k_fold_cross_validation() (dicee.dice_trainer method)": [[10, "dicee.DICE_Trainer.k_fold_cross_validation"]], "k_vs_all_score() (dicee.complex static method)": [[10, "dicee.ComplEx.k_vs_all_score"]], "k_vs_all_score() (dicee.distmult method)": [[10, "dicee.DistMult.k_vs_all_score"]], "k_vs_all_score() (dicee.keci method)": [[10, "dicee.Keci.k_vs_all_score"]], "k_vs_all_score() (dicee.omult method)": [[10, "dicee.OMult.k_vs_all_score"]], "k_vs_all_score() (dicee.qmult method)": [[10, "dicee.QMult.k_vs_all_score"]], "kvsall_score() (dicee.duale method)": [[10, "dicee.DualE.kvsall_score"]], "linear() (dicee.lfmult method)": [[10, "dicee.LFMult.linear"]], "list2tuple() (dicee.querygenerator method)": [[10, "dicee.QueryGenerator.list2tuple"]], "load_indexed_data() (dicee.execute method)": [[10, "dicee.Execute.load_indexed_data"]], "load_json() (in module dicee)": [[10, "dicee.load_json"]], "load_model() (in module dicee)": [[10, "dicee.load_model"]], "load_model_ensemble() (in module dicee)": [[10, "dicee.load_model_ensemble"]], "load_numpy() (in module dicee)": [[10, "dicee.load_numpy"]], "load_pickle() (in module dicee)": [[10, "dicee.load_pickle"], [10, "id27"]], "load_queries() (dicee.querygenerator method)": [[10, "dicee.QueryGenerator.load_queries"]], "load_queries_and_answers() (dicee.querygenerator static method)": [[10, "dicee.QueryGenerator.load_queries_and_answers"]], "loss_function() (dicee.byte method)": [[10, "dicee.BytE.loss_function"]], "mapping_from_first_two_cols_to_third() (in module dicee)": [[10, "dicee.mapping_from_first_two_cols_to_third"]], "negnorm() (dicee.kge method)": [[10, "dicee.KGE.negnorm"]], "numpy_data_type_changer() (in module dicee)": [[10, "dicee.numpy_data_type_changer"]], "octonion_normalizer() (dicee.aconvo static method)": [[10, "dicee.AConvO.octonion_normalizer"]], "octonion_normalizer() (dicee.convo static method)": [[10, "dicee.ConvO.octonion_normalizer"]], "octonion_normalizer() (dicee.omult static method)": [[10, "dicee.OMult.octonion_normalizer"]], "poly_nn() (dicee.lfmult method)": [[10, "dicee.LFMult.poly_NN"]], "polynomial() (dicee.lfmult method)": [[10, "dicee.LFMult.polynomial"]], "pop() (dicee.lfmult method)": [[10, "dicee.LFMult.pop"]], "predict() (dicee.kge method)": [[10, "dicee.KGE.predict"]], "predict_missing_head_entity() (dicee.kge method)": [[10, "dicee.KGE.predict_missing_head_entity"]], "predict_missing_relations() (dicee.kge method)": [[10, "dicee.KGE.predict_missing_relations"]], "predict_missing_tail_entity() (dicee.kge method)": [[10, "dicee.KGE.predict_missing_tail_entity"]], "predict_topk() (dicee.kge method)": [[10, "dicee.KGE.predict_topk"]], "prepare_data() (dicee.cvdatamodule method)": [[10, "dicee.CVDataModule.prepare_data"]], "quaternion_multiplication_followed_by_inner_product() (dicee.qmult method)": [[10, "dicee.QMult.quaternion_multiplication_followed_by_inner_product"]], "quaternion_normalizer() (dicee.qmult static method)": [[10, "dicee.QMult.quaternion_normalizer"]], "random_prediction() (in module dicee)": [[10, "dicee.random_prediction"]], "read_or_load_kg() (dicee.execute method)": [[10, "dicee.Execute.read_or_load_kg"]], "read_or_load_kg() (in module dicee)": [[10, "dicee.read_or_load_kg"]], "read_preprocess_index_serialize_data() (dicee.execute method)": [[10, "dicee.Execute.read_preprocess_index_serialize_data"]], "reload_dataset() (in module dicee)": [[10, "dicee.reload_dataset"]], "residual_convolution() (dicee.aconex method)": [[10, "dicee.AConEx.residual_convolution"]], "residual_convolution() (dicee.aconvo method)": [[10, "dicee.AConvO.residual_convolution"]], "residual_convolution() (dicee.aconvq method)": [[10, "dicee.AConvQ.residual_convolution"]], "residual_convolution() (dicee.conex method)": [[10, "dicee.ConEx.residual_convolution"]], "residual_convolution() (dicee.convo method)": [[10, "dicee.ConvO.residual_convolution"]], "residual_convolution() (dicee.convq method)": [[10, "dicee.ConvQ.residual_convolution"]], "return_multi_hop_query_results() (dicee.kge method)": [[10, "dicee.KGE.return_multi_hop_query_results"]], "save_checkpoint_model() (in module dicee)": [[10, "dicee.save_checkpoint_model"]], "save_embeddings() (in module dicee)": [[10, "dicee.save_embeddings"]], "save_numpy_ndarray() (in module dicee)": [[10, "dicee.save_numpy_ndarray"]], "save_pickle() (in module dicee)": [[10, "dicee.save_pickle"]], "save_queries() (dicee.querygenerator method)": [[10, "dicee.QueryGenerator.save_queries"]], "save_queries_and_answers() (dicee.querygenerator static method)": [[10, "dicee.QueryGenerator.save_queries_and_answers"]], "save_trained_model() (dicee.execute method)": [[10, "dicee.Execute.save_trained_model"]], "scalar_batch_nn() (dicee.lfmult method)": [[10, "dicee.LFMult.scalar_batch_NN"]], "score() (dicee.cmult method)": [[10, "dicee.CMult.score"]], "score() (dicee.complex static method)": [[10, "dicee.ComplEx.score"]], "score() (dicee.distmult method)": [[10, "dicee.DistMult.score"]], "score() (dicee.keci method)": [[10, "dicee.Keci.score"]], "score() (dicee.omult method)": [[10, "dicee.OMult.score"]], "score() (dicee.qmult method)": [[10, "dicee.QMult.score"]], "score() (dicee.transe method)": [[10, "dicee.TransE.score"]], "select_model() (in module dicee)": [[10, "dicee.select_model"]], "set_global_seed() (dicee.querygenerator method)": [[10, "dicee.QueryGenerator.set_global_seed"]], "setup() (dicee.cvdatamodule method)": [[10, "dicee.CVDataModule.setup"]], "single_hop_query_answering() (dicee.kge method)": [[10, "dicee.KGE.single_hop_query_answering"]], "start() (dicee.dice_trainer method)": [[10, "dicee.DICE_Trainer.start"]], "start() (dicee.execute method)": [[10, "dicee.Execute.start"]], "store() (in module dicee)": [[10, "dicee.store"]], "t_conorm() (dicee.kge method)": [[10, "dicee.KGE.t_conorm"]], "t_norm() (dicee.kge method)": [[10, "dicee.KGE.t_norm"]], "tensor_t_norm() (dicee.kge method)": [[10, "dicee.KGE.tensor_t_norm"]], "timeit() (in module dicee)": [[10, "dicee.timeit"], [10, "id0"]], "train() (dicee.kge method)": [[10, "dicee.KGE.train"]], "train_dataloader() (dicee.cvdatamodule method)": [[10, "dicee.CVDataModule.train_dataloader"]], "train_k_vs_all() (dicee.kge method)": [[10, "dicee.KGE.train_k_vs_all"]], "train_triples() (dicee.kge method)": [[10, "dicee.KGE.train_triples"]], "training_step() (dicee.byte method)": [[10, "dicee.BytE.training_step"]], "transfer_batch_to_device() (dicee.cvdatamodule method)": [[10, "dicee.CVDataModule.transfer_batch_to_device"]], "tri_score() (dicee.lfmult method)": [[10, "dicee.LFMult.tri_score"]], "triple_score() (dicee.kge method)": [[10, "dicee.KGE.triple_score"]], "tuple2list() (dicee.querygenerator method)": [[10, "dicee.QueryGenerator.tuple2list"]], "unmap() (dicee.querygenerator method)": [[10, "dicee.QueryGenerator.unmap"]], "unmap_query() (dicee.querygenerator method)": [[10, "dicee.QueryGenerator.unmap_query"]], "vocab_to_parquet() (in module dicee)": [[10, "dicee.vocab_to_parquet"]], "vtp_score() (dicee.lfmult method)": [[10, "dicee.LFMult.vtp_score"]], "write_links() (dicee.querygenerator method)": [[10, "dicee.QueryGenerator.write_links"]], "write_report() (dicee.execute method)": [[10, "dicee.Execute.write_report"]], "kg (class in dicee.knowledge_graph)": [[11, "dicee.knowledge_graph.KG"]], "dicee.knowledge_graph": [[11, "module-dicee.knowledge_graph"]], "entities_str (dicee.knowledge_graph.kg property)": [[11, "dicee.knowledge_graph.KG.entities_str"]], "func_triple_to_bpe_representation() (dicee.knowledge_graph.kg method)": [[11, "dicee.knowledge_graph.KG.func_triple_to_bpe_representation"]], "relations_str (dicee.knowledge_graph.kg property)": [[11, "dicee.knowledge_graph.KG.relations_str"]], "kge (class in dicee.knowledge_graph_embeddings)": [[12, "dicee.knowledge_graph_embeddings.KGE"]], "__str__() (dicee.knowledge_graph_embeddings.kge method)": [[12, "dicee.knowledge_graph_embeddings.KGE.__str__"]], "answer_multi_hop_query() (dicee.knowledge_graph_embeddings.kge method)": [[12, "dicee.knowledge_graph_embeddings.KGE.answer_multi_hop_query"]], "create_vector_database() (dicee.knowledge_graph_embeddings.kge method)": [[12, "dicee.knowledge_graph_embeddings.KGE.create_vector_database"]], "deploy() (dicee.knowledge_graph_embeddings.kge method)": [[12, "dicee.knowledge_graph_embeddings.KGE.deploy"]], "dicee.knowledge_graph_embeddings": [[12, "module-dicee.knowledge_graph_embeddings"]], "eval_lp_performance() (dicee.knowledge_graph_embeddings.kge method)": [[12, "dicee.knowledge_graph_embeddings.KGE.eval_lp_performance"]], "find_missing_triples() (dicee.knowledge_graph_embeddings.kge method)": [[12, "dicee.knowledge_graph_embeddings.KGE.find_missing_triples"]], "generate() (dicee.knowledge_graph_embeddings.kge method)": [[12, "dicee.knowledge_graph_embeddings.KGE.generate"]], "get_transductive_entity_embeddings() (dicee.knowledge_graph_embeddings.kge method)": [[12, "dicee.knowledge_graph_embeddings.KGE.get_transductive_entity_embeddings"]], "negnorm() (dicee.knowledge_graph_embeddings.kge method)": [[12, "dicee.knowledge_graph_embeddings.KGE.negnorm"]], "predict() (dicee.knowledge_graph_embeddings.kge method)": [[12, "dicee.knowledge_graph_embeddings.KGE.predict"]], "predict_missing_head_entity() (dicee.knowledge_graph_embeddings.kge method)": [[12, "dicee.knowledge_graph_embeddings.KGE.predict_missing_head_entity"]], "predict_missing_relations() (dicee.knowledge_graph_embeddings.kge method)": [[12, "dicee.knowledge_graph_embeddings.KGE.predict_missing_relations"]], "predict_missing_tail_entity() (dicee.knowledge_graph_embeddings.kge method)": [[12, "dicee.knowledge_graph_embeddings.KGE.predict_missing_tail_entity"]], "predict_topk() (dicee.knowledge_graph_embeddings.kge method)": [[12, "dicee.knowledge_graph_embeddings.KGE.predict_topk"]], "return_multi_hop_query_results() (dicee.knowledge_graph_embeddings.kge method)": [[12, "dicee.knowledge_graph_embeddings.KGE.return_multi_hop_query_results"]], "single_hop_query_answering() (dicee.knowledge_graph_embeddings.kge method)": [[12, "dicee.knowledge_graph_embeddings.KGE.single_hop_query_answering"]], "t_conorm() (dicee.knowledge_graph_embeddings.kge method)": [[12, "dicee.knowledge_graph_embeddings.KGE.t_conorm"]], "t_norm() (dicee.knowledge_graph_embeddings.kge method)": [[12, "dicee.knowledge_graph_embeddings.KGE.t_norm"]], "tensor_t_norm() (dicee.knowledge_graph_embeddings.kge method)": [[12, "dicee.knowledge_graph_embeddings.KGE.tensor_t_norm"]], "train() (dicee.knowledge_graph_embeddings.kge method)": [[12, "dicee.knowledge_graph_embeddings.KGE.train"]], "train_k_vs_all() (dicee.knowledge_graph_embeddings.kge method)": [[12, "dicee.knowledge_graph_embeddings.KGE.train_k_vs_all"]], "train_triples() (dicee.knowledge_graph_embeddings.kge method)": [[12, "dicee.knowledge_graph_embeddings.KGE.train_triples"]], "triple_score() (dicee.knowledge_graph_embeddings.kge method)": [[12, "dicee.knowledge_graph_embeddings.KGE.triple_score"]], "basekge (class in dicee.models.base_model)": [[13, "dicee.models.base_model.BaseKGE"]], "basekgelightning (class in dicee.models.base_model)": [[13, "dicee.models.base_model.BaseKGELightning"]], "identityclass (class in dicee.models.base_model)": [[13, "dicee.models.base_model.IdentityClass"]], "__call__() (dicee.models.base_model.identityclass method)": [[13, "dicee.models.base_model.IdentityClass.__call__"]], "configure_optimizers() (dicee.models.base_model.basekgelightning method)": [[13, "dicee.models.base_model.BaseKGELightning.configure_optimizers"]], "dicee.models.base_model": [[13, "module-dicee.models.base_model"]], "forward() (dicee.models.base_model.basekge method)": [[13, "dicee.models.base_model.BaseKGE.forward"]], "forward() (dicee.models.base_model.identityclass static method)": [[13, "dicee.models.base_model.IdentityClass.forward"]], "forward_byte_pair_encoded_k_vs_all() (dicee.models.base_model.basekge method)": [[13, "dicee.models.base_model.BaseKGE.forward_byte_pair_encoded_k_vs_all"]], "forward_byte_pair_encoded_triple() (dicee.models.base_model.basekge method)": [[13, "dicee.models.base_model.BaseKGE.forward_byte_pair_encoded_triple"]], "forward_k_vs_all() (dicee.models.base_model.basekge method)": [[13, "dicee.models.base_model.BaseKGE.forward_k_vs_all"]], "forward_k_vs_sample() (dicee.models.base_model.basekge method)": [[13, "dicee.models.base_model.BaseKGE.forward_k_vs_sample"]], "forward_triples() (dicee.models.base_model.basekge method)": [[13, "dicee.models.base_model.BaseKGE.forward_triples"]], "get_bpe_head_and_relation_representation() (dicee.models.base_model.basekge method)": [[13, "dicee.models.base_model.BaseKGE.get_bpe_head_and_relation_representation"]], "get_embeddings() (dicee.models.base_model.basekge method)": [[13, "dicee.models.base_model.BaseKGE.get_embeddings"]], "get_head_relation_representation() (dicee.models.base_model.basekge method)": [[13, "dicee.models.base_model.BaseKGE.get_head_relation_representation"]], "get_sentence_representation() (dicee.models.base_model.basekge method)": [[13, "dicee.models.base_model.BaseKGE.get_sentence_representation"]], "get_triple_representation() (dicee.models.base_model.basekge method)": [[13, "dicee.models.base_model.BaseKGE.get_triple_representation"]], "init_params_with_sanity_checking() (dicee.models.base_model.basekge method)": [[13, "dicee.models.base_model.BaseKGE.init_params_with_sanity_checking"]], "loss_function() (dicee.models.base_model.basekgelightning method)": [[13, "dicee.models.base_model.BaseKGELightning.loss_function"]], "mem_of_model() (dicee.models.base_model.basekgelightning method)": [[13, "dicee.models.base_model.BaseKGELightning.mem_of_model"]], "on_train_epoch_end() (dicee.models.base_model.basekgelightning method)": [[13, "dicee.models.base_model.BaseKGELightning.on_train_epoch_end"]], "predict_dataloader() (dicee.models.base_model.basekgelightning method)": [[13, "dicee.models.base_model.BaseKGELightning.predict_dataloader"]], "test_dataloader() (dicee.models.base_model.basekgelightning method)": [[13, "dicee.models.base_model.BaseKGELightning.test_dataloader"]], "test_epoch_end() (dicee.models.base_model.basekgelightning method)": [[13, "dicee.models.base_model.BaseKGELightning.test_epoch_end"]], "train_dataloader() (dicee.models.base_model.basekgelightning method)": [[13, "dicee.models.base_model.BaseKGELightning.train_dataloader"]], "training_step() (dicee.models.base_model.basekgelightning method)": [[13, "dicee.models.base_model.BaseKGELightning.training_step"]], "val_dataloader() (dicee.models.base_model.basekgelightning method)": [[13, "dicee.models.base_model.BaseKGELightning.val_dataloader"]], "cmult (class in dicee.models.clifford)": [[14, "dicee.models.clifford.CMult"]], "decal (class in dicee.models.clifford)": [[14, "dicee.models.clifford.DeCaL"]], "keci (class in dicee.models.clifford)": [[14, "dicee.models.clifford.Keci"]], "kecibase (class in dicee.models.clifford)": [[14, "dicee.models.clifford.KeciBase"]], "apply_coefficients() (dicee.models.clifford.decal method)": [[14, "dicee.models.clifford.DeCaL.apply_coefficients"]], "apply_coefficients() (dicee.models.clifford.keci method)": [[14, "dicee.models.clifford.Keci.apply_coefficients"]], "cl_pqr() (dicee.models.clifford.decal method)": [[14, "dicee.models.clifford.DeCaL.cl_pqr"]], "clifford_mul() (dicee.models.clifford.cmult method)": [[14, "dicee.models.clifford.CMult.clifford_mul"]], "clifford_multiplication() (dicee.models.clifford.keci method)": [[14, "dicee.models.clifford.Keci.clifford_multiplication"]], "compute_sigma_pp() (dicee.models.clifford.decal method)": [[14, "dicee.models.clifford.DeCaL.compute_sigma_pp"]], "compute_sigma_pp() (dicee.models.clifford.keci method)": [[14, "dicee.models.clifford.Keci.compute_sigma_pp"]], "compute_sigma_pq() (dicee.models.clifford.decal method)": [[14, "dicee.models.clifford.DeCaL.compute_sigma_pq"]], "compute_sigma_pq() (dicee.models.clifford.keci method)": [[14, "dicee.models.clifford.Keci.compute_sigma_pq"]], "compute_sigma_pr() (dicee.models.clifford.decal method)": [[14, "dicee.models.clifford.DeCaL.compute_sigma_pr"]], "compute_sigma_qq() (dicee.models.clifford.decal method)": [[14, "dicee.models.clifford.DeCaL.compute_sigma_qq"]], "compute_sigma_qq() (dicee.models.clifford.keci method)": [[14, "dicee.models.clifford.Keci.compute_sigma_qq"]], "compute_sigma_qr() (dicee.models.clifford.decal method)": [[14, "dicee.models.clifford.DeCaL.compute_sigma_qr"]], "compute_sigma_rr() (dicee.models.clifford.decal method)": [[14, "dicee.models.clifford.DeCaL.compute_sigma_rr"]], "compute_sigmas_multivect() (dicee.models.clifford.decal method)": [[14, "dicee.models.clifford.DeCaL.compute_sigmas_multivect"]], "compute_sigmas_single() (dicee.models.clifford.decal method)": [[14, "dicee.models.clifford.DeCaL.compute_sigmas_single"]], "construct_cl_multivector() (dicee.models.clifford.decal method)": [[14, "dicee.models.clifford.DeCaL.construct_cl_multivector"]], "construct_cl_multivector() (dicee.models.clifford.keci method)": [[14, "dicee.models.clifford.Keci.construct_cl_multivector"]], "dicee.models.clifford": [[14, "module-dicee.models.clifford"]], "forward_k_vs_all() (dicee.models.clifford.cmult method)": [[14, "dicee.models.clifford.CMult.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.clifford.decal method)": [[14, "dicee.models.clifford.DeCaL.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.clifford.keci method)": [[14, "dicee.models.clifford.Keci.forward_k_vs_all"]], "forward_k_vs_sample() (dicee.models.clifford.keci method)": [[14, "dicee.models.clifford.Keci.forward_k_vs_sample"]], "forward_k_vs_with_explicit() (dicee.models.clifford.keci method)": [[14, "dicee.models.clifford.Keci.forward_k_vs_with_explicit"]], "forward_triples() (dicee.models.clifford.cmult method)": [[14, "dicee.models.clifford.CMult.forward_triples"]], "forward_triples() (dicee.models.clifford.decal method)": [[14, "dicee.models.clifford.DeCaL.forward_triples"]], "forward_triples() (dicee.models.clifford.keci method)": [[14, "dicee.models.clifford.Keci.forward_triples"]], "k_vs_all_score() (dicee.models.clifford.keci method)": [[14, "dicee.models.clifford.Keci.k_vs_all_score"]], "score() (dicee.models.clifford.cmult method)": [[14, "dicee.models.clifford.CMult.score"]], "score() (dicee.models.clifford.keci method)": [[14, "dicee.models.clifford.Keci.score"]], "aconex (class in dicee.models.complex)": [[15, "dicee.models.complex.AConEx"]], "complex (class in dicee.models.complex)": [[15, "dicee.models.complex.ComplEx"]], "conex (class in dicee.models.complex)": [[15, "dicee.models.complex.ConEx"]], "dicee.models.complex": [[15, "module-dicee.models.complex"]], "forward_k_vs_all() (dicee.models.complex.aconex method)": [[15, "dicee.models.complex.AConEx.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.complex.complex method)": [[15, "dicee.models.complex.ComplEx.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.complex.conex method)": [[15, "dicee.models.complex.ConEx.forward_k_vs_all"]], "forward_k_vs_sample() (dicee.models.complex.aconex method)": [[15, "dicee.models.complex.AConEx.forward_k_vs_sample"]], "forward_k_vs_sample() (dicee.models.complex.conex method)": [[15, "dicee.models.complex.ConEx.forward_k_vs_sample"]], "forward_triples() (dicee.models.complex.aconex method)": [[15, "dicee.models.complex.AConEx.forward_triples"]], "forward_triples() (dicee.models.complex.conex method)": [[15, "dicee.models.complex.ConEx.forward_triples"]], "k_vs_all_score() (dicee.models.complex.complex static method)": [[15, "dicee.models.complex.ComplEx.k_vs_all_score"]], "residual_convolution() (dicee.models.complex.aconex method)": [[15, "dicee.models.complex.AConEx.residual_convolution"]], "residual_convolution() (dicee.models.complex.conex method)": [[15, "dicee.models.complex.ConEx.residual_convolution"]], "score() (dicee.models.complex.complex static method)": [[15, "dicee.models.complex.ComplEx.score"]], "duale (class in dicee.models.duale)": [[16, "dicee.models.dualE.DualE"]], "t() (dicee.models.duale.duale method)": [[16, "dicee.models.dualE.DualE.T"]], "dicee.models.duale": [[16, "module-dicee.models.dualE"]], "forward_k_vs_all() (dicee.models.duale.duale method)": [[16, "dicee.models.dualE.DualE.forward_k_vs_all"]], "forward_triples() (dicee.models.duale.duale method)": [[16, "dicee.models.dualE.DualE.forward_triples"]], "kvsall_score() (dicee.models.duale.duale method)": [[16, "dicee.models.dualE.DualE.kvsall_score"]], "fmult (class in dicee.models.function_space)": [[17, "dicee.models.function_space.FMult"]], "fmult2 (class in dicee.models.function_space)": [[17, "dicee.models.function_space.FMult2"]], "gfmult (class in dicee.models.function_space)": [[17, "dicee.models.function_space.GFMult"]], "lfmult (class in dicee.models.function_space)": [[17, "dicee.models.function_space.LFMult"]], "lfmult1 (class in dicee.models.function_space)": [[17, "dicee.models.function_space.LFMult1"]], "build_chain_funcs() (dicee.models.function_space.fmult2 method)": [[17, "dicee.models.function_space.FMult2.build_chain_funcs"]], "build_func() (dicee.models.function_space.fmult2 method)": [[17, "dicee.models.function_space.FMult2.build_func"]], "chain_func() (dicee.models.function_space.fmult method)": [[17, "dicee.models.function_space.FMult.chain_func"]], "chain_func() (dicee.models.function_space.gfmult method)": [[17, "dicee.models.function_space.GFMult.chain_func"]], "comp_func() (dicee.models.function_space.lfmult method)": [[17, "dicee.models.function_space.LFMult.comp_func"]], "compute_func() (dicee.models.function_space.fmult method)": [[17, "dicee.models.function_space.FMult.compute_func"]], "compute_func() (dicee.models.function_space.fmult2 method)": [[17, "dicee.models.function_space.FMult2.compute_func"]], "compute_func() (dicee.models.function_space.gfmult method)": [[17, "dicee.models.function_space.GFMult.compute_func"]], "construct_multi_coeff() (dicee.models.function_space.lfmult method)": [[17, "dicee.models.function_space.LFMult.construct_multi_coeff"]], "dicee.models.function_space": [[17, "module-dicee.models.function_space"]], "forward_triples() (dicee.models.function_space.fmult method)": [[17, "dicee.models.function_space.FMult.forward_triples"]], "forward_triples() (dicee.models.function_space.fmult2 method)": [[17, "dicee.models.function_space.FMult2.forward_triples"]], "forward_triples() (dicee.models.function_space.gfmult method)": [[17, "dicee.models.function_space.GFMult.forward_triples"]], "forward_triples() (dicee.models.function_space.lfmult method)": [[17, "dicee.models.function_space.LFMult.forward_triples"]], "forward_triples() (dicee.models.function_space.lfmult1 method)": [[17, "dicee.models.function_space.LFMult1.forward_triples"]], "function() (dicee.models.function_space.fmult2 method)": [[17, "dicee.models.function_space.FMult2.function"]], "linear() (dicee.models.function_space.lfmult method)": [[17, "dicee.models.function_space.LFMult.linear"]], "poly_nn() (dicee.models.function_space.lfmult method)": [[17, "dicee.models.function_space.LFMult.poly_NN"]], "polynomial() (dicee.models.function_space.lfmult method)": [[17, "dicee.models.function_space.LFMult.polynomial"]], "pop() (dicee.models.function_space.lfmult method)": [[17, "dicee.models.function_space.LFMult.pop"]], "scalar_batch_nn() (dicee.models.function_space.lfmult method)": [[17, "dicee.models.function_space.LFMult.scalar_batch_NN"]], "trapezoid() (dicee.models.function_space.fmult2 method)": [[17, "dicee.models.function_space.FMult2.trapezoid"]], "tri_score() (dicee.models.function_space.lfmult method)": [[17, "dicee.models.function_space.LFMult.tri_score"]], "tri_score() (dicee.models.function_space.lfmult1 method)": [[17, "dicee.models.function_space.LFMult1.tri_score"]], "vtp_score() (dicee.models.function_space.lfmult method)": [[17, "dicee.models.function_space.LFMult.vtp_score"]], "vtp_score() (dicee.models.function_space.lfmult1 method)": [[17, "dicee.models.function_space.LFMult1.vtp_score"]], "aconex (class in dicee.models)": [[18, "dicee.models.AConEx"]], "aconvo (class in dicee.models)": [[18, "dicee.models.AConvO"]], "aconvq (class in dicee.models)": [[18, "dicee.models.AConvQ"]], "basekge (class in dicee.models)": [[18, "dicee.models.BaseKGE"], [18, "id0"], [18, "id17"], [18, "id30"], [18, "id46"], [18, "id68"], [18, "id81"]], "basekgelightning (class in dicee.models)": [[18, "dicee.models.BaseKGELightning"]], "cmult (class in dicee.models)": [[18, "dicee.models.CMult"]], "complex (class in dicee.models)": [[18, "dicee.models.ComplEx"]], "conex (class in dicee.models)": [[18, "dicee.models.ConEx"]], "convo (class in dicee.models)": [[18, "dicee.models.ConvO"]], "convq (class in dicee.models)": [[18, "dicee.models.ConvQ"]], "decal (class in dicee.models)": [[18, "dicee.models.DeCaL"]], "distmult (class in dicee.models)": [[18, "dicee.models.DistMult"]], "duale (class in dicee.models)": [[18, "dicee.models.DualE"]], "fmult (class in dicee.models)": [[18, "dicee.models.FMult"]], "fmult2 (class in dicee.models)": [[18, "dicee.models.FMult2"]], "gfmult (class in dicee.models)": [[18, "dicee.models.GFMult"]], "identityclass (class in dicee.models)": [[18, "dicee.models.IdentityClass"], [18, "id43"], [18, "id59"]], "keci (class in dicee.models)": [[18, "dicee.models.Keci"]], "kecibase (class in dicee.models)": [[18, "dicee.models.KeciBase"]], "lfmult (class in dicee.models)": [[18, "dicee.models.LFMult"]], "lfmult1 (class in dicee.models)": [[18, "dicee.models.LFMult1"]], "omult (class in dicee.models)": [[18, "dicee.models.OMult"]], "pyke (class in dicee.models)": [[18, "dicee.models.Pyke"]], "pykeenkge (class in dicee.models)": [[18, "dicee.models.PykeenKGE"]], "qmult (class in dicee.models)": [[18, "dicee.models.QMult"]], "shallom (class in dicee.models)": [[18, "dicee.models.Shallom"]], "t() (dicee.models.duale method)": [[18, "dicee.models.DualE.T"]], "transe (class in dicee.models)": [[18, "dicee.models.TransE"]], "__call__() (dicee.models.identityclass method)": [[18, "dicee.models.IdentityClass.__call__"], [18, "id44"], [18, "id60"]], "apply_coefficients() (dicee.models.decal method)": [[18, "dicee.models.DeCaL.apply_coefficients"]], "apply_coefficients() (dicee.models.keci method)": [[18, "dicee.models.Keci.apply_coefficients"]], "build_chain_funcs() (dicee.models.fmult2 method)": [[18, "dicee.models.FMult2.build_chain_funcs"]], "build_func() (dicee.models.fmult2 method)": [[18, "dicee.models.FMult2.build_func"]], "chain_func() (dicee.models.fmult method)": [[18, "dicee.models.FMult.chain_func"]], "chain_func() (dicee.models.gfmult method)": [[18, "dicee.models.GFMult.chain_func"]], "cl_pqr() (dicee.models.decal method)": [[18, "dicee.models.DeCaL.cl_pqr"]], "clifford_mul() (dicee.models.cmult method)": [[18, "dicee.models.CMult.clifford_mul"]], "clifford_multiplication() (dicee.models.keci method)": [[18, "dicee.models.Keci.clifford_multiplication"]], "comp_func() (dicee.models.lfmult method)": [[18, "dicee.models.LFMult.comp_func"]], "compute_func() (dicee.models.fmult method)": [[18, "dicee.models.FMult.compute_func"]], "compute_func() (dicee.models.fmult2 method)": [[18, "dicee.models.FMult2.compute_func"]], "compute_func() (dicee.models.gfmult method)": [[18, "dicee.models.GFMult.compute_func"]], "compute_sigma_pp() (dicee.models.decal method)": [[18, "dicee.models.DeCaL.compute_sigma_pp"]], "compute_sigma_pp() (dicee.models.keci method)": [[18, "dicee.models.Keci.compute_sigma_pp"]], "compute_sigma_pq() (dicee.models.decal method)": [[18, "dicee.models.DeCaL.compute_sigma_pq"]], "compute_sigma_pq() (dicee.models.keci method)": [[18, "dicee.models.Keci.compute_sigma_pq"]], "compute_sigma_pr() (dicee.models.decal method)": [[18, "dicee.models.DeCaL.compute_sigma_pr"]], "compute_sigma_qq() (dicee.models.decal method)": [[18, "dicee.models.DeCaL.compute_sigma_qq"]], "compute_sigma_qq() (dicee.models.keci method)": [[18, "dicee.models.Keci.compute_sigma_qq"]], "compute_sigma_qr() (dicee.models.decal method)": [[18, "dicee.models.DeCaL.compute_sigma_qr"]], "compute_sigma_rr() (dicee.models.decal method)": [[18, "dicee.models.DeCaL.compute_sigma_rr"]], "compute_sigmas_multivect() (dicee.models.decal method)": [[18, "dicee.models.DeCaL.compute_sigmas_multivect"]], "compute_sigmas_single() (dicee.models.decal method)": [[18, "dicee.models.DeCaL.compute_sigmas_single"]], "configure_optimizers() (dicee.models.basekgelightning method)": [[18, "dicee.models.BaseKGELightning.configure_optimizers"]], "construct_cl_multivector() (dicee.models.decal method)": [[18, "dicee.models.DeCaL.construct_cl_multivector"]], "construct_cl_multivector() (dicee.models.keci method)": [[18, "dicee.models.Keci.construct_cl_multivector"]], "construct_multi_coeff() (dicee.models.lfmult method)": [[18, "dicee.models.LFMult.construct_multi_coeff"]], "dicee.models": [[18, "module-dicee.models"]], "forward() (dicee.models.basekge method)": [[18, "dicee.models.BaseKGE.forward"], [18, "id21"], [18, "id34"], [18, "id50"], [18, "id72"], [18, "id8"], [18, "id85"]], "forward() (dicee.models.identityclass static method)": [[18, "dicee.models.IdentityClass.forward"], [18, "id45"], [18, "id61"]], "forward_byte_pair_encoded_k_vs_all() (dicee.models.basekge method)": [[18, "dicee.models.BaseKGE.forward_byte_pair_encoded_k_vs_all"], [18, "id18"], [18, "id31"], [18, "id47"], [18, "id5"], [18, "id69"], [18, "id82"]], "forward_byte_pair_encoded_triple() (dicee.models.basekge method)": [[18, "dicee.models.BaseKGE.forward_byte_pair_encoded_triple"], [18, "id19"], [18, "id32"], [18, "id48"], [18, "id6"], [18, "id70"], [18, "id83"]], "forward_k_vs_all() (dicee.models.aconex method)": [[18, "dicee.models.AConEx.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.aconvo method)": [[18, "dicee.models.AConvO.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.aconvq method)": [[18, "dicee.models.AConvQ.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.basekge method)": [[18, "dicee.models.BaseKGE.forward_k_vs_all"], [18, "id10"], [18, "id23"], [18, "id36"], [18, "id52"], [18, "id74"], [18, "id87"]], "forward_k_vs_all() (dicee.models.cmult method)": [[18, "dicee.models.CMult.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.complex method)": [[18, "dicee.models.ComplEx.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.conex method)": [[18, "dicee.models.ConEx.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.convo method)": [[18, "dicee.models.ConvO.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.convq method)": [[18, "dicee.models.ConvQ.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.decal method)": [[18, "dicee.models.DeCaL.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.distmult method)": [[18, "dicee.models.DistMult.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.duale method)": [[18, "dicee.models.DualE.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.keci method)": [[18, "dicee.models.Keci.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.omult method)": [[18, "dicee.models.OMult.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.pykeenkge method)": [[18, "dicee.models.PykeenKGE.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.qmult method)": [[18, "dicee.models.QMult.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.shallom method)": [[18, "dicee.models.Shallom.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.transe method)": [[18, "dicee.models.TransE.forward_k_vs_all"]], "forward_k_vs_sample() (dicee.models.aconex method)": [[18, "dicee.models.AConEx.forward_k_vs_sample"]], "forward_k_vs_sample() (dicee.models.basekge method)": [[18, "dicee.models.BaseKGE.forward_k_vs_sample"], [18, "id11"], [18, "id24"], [18, "id37"], [18, "id53"], [18, "id75"], [18, "id88"]], "forward_k_vs_sample() (dicee.models.conex method)": [[18, "dicee.models.ConEx.forward_k_vs_sample"]], "forward_k_vs_sample() (dicee.models.distmult method)": [[18, "dicee.models.DistMult.forward_k_vs_sample"]], "forward_k_vs_sample() (dicee.models.keci method)": [[18, "dicee.models.Keci.forward_k_vs_sample"]], "forward_k_vs_sample() (dicee.models.pykeenkge method)": [[18, "dicee.models.PykeenKGE.forward_k_vs_sample"]], "forward_k_vs_sample() (dicee.models.qmult method)": [[18, "dicee.models.QMult.forward_k_vs_sample"]], "forward_k_vs_with_explicit() (dicee.models.keci method)": [[18, "dicee.models.Keci.forward_k_vs_with_explicit"]], "forward_triples() (dicee.models.aconex method)": [[18, "dicee.models.AConEx.forward_triples"]], "forward_triples() (dicee.models.aconvo method)": [[18, "dicee.models.AConvO.forward_triples"]], "forward_triples() (dicee.models.aconvq method)": [[18, "dicee.models.AConvQ.forward_triples"]], "forward_triples() (dicee.models.basekge method)": [[18, "dicee.models.BaseKGE.forward_triples"], [18, "id22"], [18, "id35"], [18, "id51"], [18, "id73"], [18, "id86"], [18, "id9"]], "forward_triples() (dicee.models.cmult method)": [[18, "dicee.models.CMult.forward_triples"]], "forward_triples() (dicee.models.conex method)": [[18, "dicee.models.ConEx.forward_triples"]], "forward_triples() (dicee.models.convo method)": [[18, "dicee.models.ConvO.forward_triples"]], "forward_triples() (dicee.models.convq method)": [[18, "dicee.models.ConvQ.forward_triples"]], "forward_triples() (dicee.models.decal method)": [[18, "dicee.models.DeCaL.forward_triples"]], "forward_triples() (dicee.models.duale method)": [[18, "dicee.models.DualE.forward_triples"]], "forward_triples() (dicee.models.fmult method)": [[18, "dicee.models.FMult.forward_triples"]], "forward_triples() (dicee.models.fmult2 method)": [[18, "dicee.models.FMult2.forward_triples"]], "forward_triples() (dicee.models.gfmult method)": [[18, "dicee.models.GFMult.forward_triples"]], "forward_triples() (dicee.models.keci method)": [[18, "dicee.models.Keci.forward_triples"]], "forward_triples() (dicee.models.lfmult method)": [[18, "dicee.models.LFMult.forward_triples"]], "forward_triples() (dicee.models.lfmult1 method)": [[18, "dicee.models.LFMult1.forward_triples"]], "forward_triples() (dicee.models.pyke method)": [[18, "dicee.models.Pyke.forward_triples"]], "forward_triples() (dicee.models.pykeenkge method)": [[18, "dicee.models.PykeenKGE.forward_triples"]], "forward_triples() (dicee.models.shallom method)": [[18, "dicee.models.Shallom.forward_triples"]], "function() (dicee.models.fmult2 method)": [[18, "dicee.models.FMult2.function"]], "get_bpe_head_and_relation_representation() (dicee.models.basekge method)": [[18, "dicee.models.BaseKGE.get_bpe_head_and_relation_representation"], [18, "id15"], [18, "id28"], [18, "id41"], [18, "id57"], [18, "id79"], [18, "id92"]], "get_embeddings() (dicee.models.basekge method)": [[18, "dicee.models.BaseKGE.get_embeddings"], [18, "id16"], [18, "id29"], [18, "id42"], [18, "id58"], [18, "id80"], [18, "id93"]], "get_embeddings() (dicee.models.shallom method)": [[18, "dicee.models.Shallom.get_embeddings"]], "get_head_relation_representation() (dicee.models.basekge method)": [[18, "dicee.models.BaseKGE.get_head_relation_representation"], [18, "id13"], [18, "id26"], [18, "id39"], [18, "id55"], [18, "id77"], [18, "id90"]], "get_sentence_representation() (dicee.models.basekge method)": [[18, "dicee.models.BaseKGE.get_sentence_representation"], [18, "id14"], [18, "id27"], [18, "id40"], [18, "id56"], [18, "id78"], [18, "id91"]], "get_triple_representation() (dicee.models.basekge method)": [[18, "dicee.models.BaseKGE.get_triple_representation"], [18, "id12"], [18, "id25"], [18, "id38"], [18, "id54"], [18, "id76"], [18, "id89"]], "init_params_with_sanity_checking() (dicee.models.basekge method)": [[18, "dicee.models.BaseKGE.init_params_with_sanity_checking"], [18, "id20"], [18, "id33"], [18, "id49"], [18, "id7"], [18, "id71"], [18, "id84"]], "k_vs_all_score() (dicee.models.complex static method)": [[18, "dicee.models.ComplEx.k_vs_all_score"]], "k_vs_all_score() (dicee.models.distmult method)": [[18, "dicee.models.DistMult.k_vs_all_score"]], "k_vs_all_score() (dicee.models.keci method)": [[18, "dicee.models.Keci.k_vs_all_score"]], "k_vs_all_score() (dicee.models.omult method)": [[18, "dicee.models.OMult.k_vs_all_score"]], "k_vs_all_score() (dicee.models.qmult method)": [[18, "dicee.models.QMult.k_vs_all_score"]], "kvsall_score() (dicee.models.duale method)": [[18, "dicee.models.DualE.kvsall_score"]], "linear() (dicee.models.lfmult method)": [[18, "dicee.models.LFMult.linear"]], "loss_function() (dicee.models.basekgelightning method)": [[18, "dicee.models.BaseKGELightning.loss_function"]], "mem_of_model() (dicee.models.basekgelightning method)": [[18, "dicee.models.BaseKGELightning.mem_of_model"]], "octonion_mul() (in module dicee.models)": [[18, "dicee.models.octonion_mul"]], "octonion_mul_norm() (in module dicee.models)": [[18, "dicee.models.octonion_mul_norm"]], "octonion_normalizer() (dicee.models.aconvo static method)": [[18, "dicee.models.AConvO.octonion_normalizer"]], "octonion_normalizer() (dicee.models.convo static method)": [[18, "dicee.models.ConvO.octonion_normalizer"]], "octonion_normalizer() (dicee.models.omult static method)": [[18, "dicee.models.OMult.octonion_normalizer"]], "on_train_epoch_end() (dicee.models.basekgelightning method)": [[18, "dicee.models.BaseKGELightning.on_train_epoch_end"]], "poly_nn() (dicee.models.lfmult method)": [[18, "dicee.models.LFMult.poly_NN"]], "polynomial() (dicee.models.lfmult method)": [[18, "dicee.models.LFMult.polynomial"]], "pop() (dicee.models.lfmult method)": [[18, "dicee.models.LFMult.pop"]], "predict_dataloader() (dicee.models.basekgelightning method)": [[18, "dicee.models.BaseKGELightning.predict_dataloader"]], "quaternion_mul() (in module dicee.models)": [[18, "dicee.models.quaternion_mul"]], "quaternion_mul_with_unit_norm() (in module dicee.models)": [[18, "dicee.models.quaternion_mul_with_unit_norm"]], "quaternion_multiplication_followed_by_inner_product() (dicee.models.qmult method)": [[18, "dicee.models.QMult.quaternion_multiplication_followed_by_inner_product"]], "quaternion_normalizer() (dicee.models.qmult static method)": [[18, "dicee.models.QMult.quaternion_normalizer"]], "residual_convolution() (dicee.models.aconex method)": [[18, "dicee.models.AConEx.residual_convolution"]], "residual_convolution() (dicee.models.aconvo method)": [[18, "dicee.models.AConvO.residual_convolution"]], "residual_convolution() (dicee.models.aconvq method)": [[18, "dicee.models.AConvQ.residual_convolution"]], "residual_convolution() (dicee.models.conex method)": [[18, "dicee.models.ConEx.residual_convolution"]], "residual_convolution() (dicee.models.convo method)": [[18, "dicee.models.ConvO.residual_convolution"]], "residual_convolution() (dicee.models.convq method)": [[18, "dicee.models.ConvQ.residual_convolution"]], "scalar_batch_nn() (dicee.models.lfmult method)": [[18, "dicee.models.LFMult.scalar_batch_NN"]], "score() (dicee.models.cmult method)": [[18, "dicee.models.CMult.score"]], "score() (dicee.models.complex static method)": [[18, "dicee.models.ComplEx.score"]], "score() (dicee.models.distmult method)": [[18, "dicee.models.DistMult.score"]], "score() (dicee.models.keci method)": [[18, "dicee.models.Keci.score"]], "score() (dicee.models.omult method)": [[18, "dicee.models.OMult.score"]], "score() (dicee.models.qmult method)": [[18, "dicee.models.QMult.score"]], "score() (dicee.models.transe method)": [[18, "dicee.models.TransE.score"]], "test_dataloader() (dicee.models.basekgelightning method)": [[18, "dicee.models.BaseKGELightning.test_dataloader"]], "test_epoch_end() (dicee.models.basekgelightning method)": [[18, "dicee.models.BaseKGELightning.test_epoch_end"]], "train_dataloader() (dicee.models.basekgelightning method)": [[18, "dicee.models.BaseKGELightning.train_dataloader"]], "training_step() (dicee.models.basekgelightning method)": [[18, "dicee.models.BaseKGELightning.training_step"]], "trapezoid() (dicee.models.fmult2 method)": [[18, "dicee.models.FMult2.trapezoid"]], "tri_score() (dicee.models.lfmult method)": [[18, "dicee.models.LFMult.tri_score"]], "tri_score() (dicee.models.lfmult1 method)": [[18, "dicee.models.LFMult1.tri_score"]], "val_dataloader() (dicee.models.basekgelightning method)": [[18, "dicee.models.BaseKGELightning.val_dataloader"]], "vtp_score() (dicee.models.lfmult method)": [[18, "dicee.models.LFMult.vtp_score"]], "vtp_score() (dicee.models.lfmult1 method)": [[18, "dicee.models.LFMult1.vtp_score"]], "aconvo (class in dicee.models.octonion)": [[19, "dicee.models.octonion.AConvO"]], "convo (class in dicee.models.octonion)": [[19, "dicee.models.octonion.ConvO"]], "omult (class in dicee.models.octonion)": [[19, "dicee.models.octonion.OMult"]], "dicee.models.octonion": [[19, "module-dicee.models.octonion"]], "forward_k_vs_all() (dicee.models.octonion.aconvo method)": [[19, "dicee.models.octonion.AConvO.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.octonion.convo method)": [[19, "dicee.models.octonion.ConvO.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.octonion.omult method)": [[19, "dicee.models.octonion.OMult.forward_k_vs_all"]], "forward_triples() (dicee.models.octonion.aconvo method)": [[19, "dicee.models.octonion.AConvO.forward_triples"]], "forward_triples() (dicee.models.octonion.convo method)": [[19, "dicee.models.octonion.ConvO.forward_triples"]], "k_vs_all_score() (dicee.models.octonion.omult method)": [[19, "dicee.models.octonion.OMult.k_vs_all_score"]], "octonion_mul() (in module dicee.models.octonion)": [[19, "dicee.models.octonion.octonion_mul"]], "octonion_mul_norm() (in module dicee.models.octonion)": [[19, "dicee.models.octonion.octonion_mul_norm"]], "octonion_normalizer() (dicee.models.octonion.aconvo static method)": [[19, "dicee.models.octonion.AConvO.octonion_normalizer"]], "octonion_normalizer() (dicee.models.octonion.convo static method)": [[19, "dicee.models.octonion.ConvO.octonion_normalizer"]], "octonion_normalizer() (dicee.models.octonion.omult static method)": [[19, "dicee.models.octonion.OMult.octonion_normalizer"]], "residual_convolution() (dicee.models.octonion.aconvo method)": [[19, "dicee.models.octonion.AConvO.residual_convolution"]], "residual_convolution() (dicee.models.octonion.convo method)": [[19, "dicee.models.octonion.ConvO.residual_convolution"]], "score() (dicee.models.octonion.omult method)": [[19, "dicee.models.octonion.OMult.score"]], "pykeenkge (class in dicee.models.pykeen_models)": [[20, "dicee.models.pykeen_models.PykeenKGE"]], "dicee.models.pykeen_models": [[20, "module-dicee.models.pykeen_models"]], "forward_k_vs_all() (dicee.models.pykeen_models.pykeenkge method)": [[20, "dicee.models.pykeen_models.PykeenKGE.forward_k_vs_all"]], "forward_k_vs_sample() (dicee.models.pykeen_models.pykeenkge method)": [[20, "dicee.models.pykeen_models.PykeenKGE.forward_k_vs_sample"]], "forward_triples() (dicee.models.pykeen_models.pykeenkge method)": [[20, "dicee.models.pykeen_models.PykeenKGE.forward_triples"]], "aconvq (class in dicee.models.quaternion)": [[21, "dicee.models.quaternion.AConvQ"]], "convq (class in dicee.models.quaternion)": [[21, "dicee.models.quaternion.ConvQ"]], "qmult (class in dicee.models.quaternion)": [[21, "dicee.models.quaternion.QMult"]], "dicee.models.quaternion": [[21, "module-dicee.models.quaternion"]], "forward_k_vs_all() (dicee.models.quaternion.aconvq method)": [[21, "dicee.models.quaternion.AConvQ.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.quaternion.convq method)": [[21, "dicee.models.quaternion.ConvQ.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.quaternion.qmult method)": [[21, "dicee.models.quaternion.QMult.forward_k_vs_all"]], "forward_k_vs_sample() (dicee.models.quaternion.qmult method)": [[21, "dicee.models.quaternion.QMult.forward_k_vs_sample"]], "forward_triples() (dicee.models.quaternion.aconvq method)": [[21, "dicee.models.quaternion.AConvQ.forward_triples"]], "forward_triples() (dicee.models.quaternion.convq method)": [[21, "dicee.models.quaternion.ConvQ.forward_triples"]], "k_vs_all_score() (dicee.models.quaternion.qmult method)": [[21, "dicee.models.quaternion.QMult.k_vs_all_score"]], "quaternion_mul_with_unit_norm() (in module dicee.models.quaternion)": [[21, "dicee.models.quaternion.quaternion_mul_with_unit_norm"]], "quaternion_multiplication_followed_by_inner_product() (dicee.models.quaternion.qmult method)": [[21, "dicee.models.quaternion.QMult.quaternion_multiplication_followed_by_inner_product"]], "quaternion_normalizer() (dicee.models.quaternion.qmult static method)": [[21, "dicee.models.quaternion.QMult.quaternion_normalizer"]], "residual_convolution() (dicee.models.quaternion.aconvq method)": [[21, "dicee.models.quaternion.AConvQ.residual_convolution"]], "residual_convolution() (dicee.models.quaternion.convq method)": [[21, "dicee.models.quaternion.ConvQ.residual_convolution"]], "score() (dicee.models.quaternion.qmult method)": [[21, "dicee.models.quaternion.QMult.score"]], "distmult (class in dicee.models.real)": [[22, "dicee.models.real.DistMult"]], "pyke (class in dicee.models.real)": [[22, "dicee.models.real.Pyke"]], "shallom (class in dicee.models.real)": [[22, "dicee.models.real.Shallom"]], "transe (class in dicee.models.real)": [[22, "dicee.models.real.TransE"]], "dicee.models.real": [[22, "module-dicee.models.real"]], "forward_k_vs_all() (dicee.models.real.distmult method)": [[22, "dicee.models.real.DistMult.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.real.shallom method)": [[22, "dicee.models.real.Shallom.forward_k_vs_all"]], "forward_k_vs_all() (dicee.models.real.transe method)": [[22, "dicee.models.real.TransE.forward_k_vs_all"]], "forward_k_vs_sample() (dicee.models.real.distmult method)": [[22, "dicee.models.real.DistMult.forward_k_vs_sample"]], "forward_triples() (dicee.models.real.pyke method)": [[22, "dicee.models.real.Pyke.forward_triples"]], "forward_triples() (dicee.models.real.shallom method)": [[22, "dicee.models.real.Shallom.forward_triples"]], "get_embeddings() (dicee.models.real.shallom method)": [[22, "dicee.models.real.Shallom.get_embeddings"]], "k_vs_all_score() (dicee.models.real.distmult method)": [[22, "dicee.models.real.DistMult.k_vs_all_score"]], "score() (dicee.models.real.distmult method)": [[22, "dicee.models.real.DistMult.score"]], "score() (dicee.models.real.transe method)": [[22, "dicee.models.real.TransE.score"]], "dicee.models.static_funcs": [[23, "module-dicee.models.static_funcs"]], "quaternion_mul() (in module dicee.models.static_funcs)": [[23, "dicee.models.static_funcs.quaternion_mul"]], "block (class in dicee.models.transformers)": [[24, "dicee.models.transformers.Block"]], "byte (class in dicee.models.transformers)": [[24, "dicee.models.transformers.BytE"]], "causalselfattention (class in dicee.models.transformers)": [[24, "dicee.models.transformers.CausalSelfAttention"]], "gpt (class in dicee.models.transformers)": [[24, "dicee.models.transformers.GPT"]], "gptconfig (class in dicee.models.transformers)": [[24, "dicee.models.transformers.GPTConfig"]], "layernorm (class in dicee.models.transformers)": [[24, "dicee.models.transformers.LayerNorm"]], "mlp (class in dicee.models.transformers)": [[24, "dicee.models.transformers.MLP"]], "bias (dicee.models.transformers.gptconfig attribute)": [[24, "dicee.models.transformers.GPTConfig.bias"]], "block_size (dicee.models.transformers.gptconfig attribute)": [[24, "dicee.models.transformers.GPTConfig.block_size"]], "configure_optimizers() (dicee.models.transformers.gpt method)": [[24, "dicee.models.transformers.GPT.configure_optimizers"]], "crop_block_size() (dicee.models.transformers.gpt method)": [[24, "dicee.models.transformers.GPT.crop_block_size"]], "dicee.models.transformers": [[24, "module-dicee.models.transformers"]], "dropout (dicee.models.transformers.gptconfig attribute)": [[24, "dicee.models.transformers.GPTConfig.dropout"]], "estimate_mfu() (dicee.models.transformers.gpt method)": [[24, "dicee.models.transformers.GPT.estimate_mfu"]], "forward() (dicee.models.transformers.block method)": [[24, "dicee.models.transformers.Block.forward"]], "forward() (dicee.models.transformers.byte method)": [[24, "dicee.models.transformers.BytE.forward"]], "forward() (dicee.models.transformers.causalselfattention method)": [[24, "dicee.models.transformers.CausalSelfAttention.forward"]], "forward() (dicee.models.transformers.gpt method)": [[24, "dicee.models.transformers.GPT.forward"]], "forward() (dicee.models.transformers.layernorm method)": [[24, "dicee.models.transformers.LayerNorm.forward"]], "forward() (dicee.models.transformers.mlp method)": [[24, "dicee.models.transformers.MLP.forward"]], "from_pretrained() (dicee.models.transformers.gpt class method)": [[24, "dicee.models.transformers.GPT.from_pretrained"]], "generate() (dicee.models.transformers.byte method)": [[24, "dicee.models.transformers.BytE.generate"]], "get_num_params() (dicee.models.transformers.gpt method)": [[24, "dicee.models.transformers.GPT.get_num_params"]], "loss_function() (dicee.models.transformers.byte method)": [[24, "dicee.models.transformers.BytE.loss_function"]], "n_embd (dicee.models.transformers.gptconfig attribute)": [[24, "dicee.models.transformers.GPTConfig.n_embd"]], "n_head (dicee.models.transformers.gptconfig attribute)": [[24, "dicee.models.transformers.GPTConfig.n_head"]], "n_layer (dicee.models.transformers.gptconfig attribute)": [[24, "dicee.models.transformers.GPTConfig.n_layer"]], "training_step() (dicee.models.transformers.byte method)": [[24, "dicee.models.transformers.BytE.training_step"]], "vocab_size (dicee.models.transformers.gptconfig attribute)": [[24, "dicee.models.transformers.GPTConfig.vocab_size"]], "querygenerator (class in dicee.query_generator)": [[25, "dicee.query_generator.QueryGenerator"]], "achieve_answer() (dicee.query_generator.querygenerator method)": [[25, "dicee.query_generator.QueryGenerator.achieve_answer"]], "construct_graph() (dicee.query_generator.querygenerator method)": [[25, "dicee.query_generator.QueryGenerator.construct_graph"]], "dicee.query_generator": [[25, "module-dicee.query_generator"]], "fill_query() (dicee.query_generator.querygenerator method)": [[25, "dicee.query_generator.QueryGenerator.fill_query"]], "generate_queries() (dicee.query_generator.querygenerator method)": [[25, "dicee.query_generator.QueryGenerator.generate_queries"]], "get_queries() (dicee.query_generator.querygenerator method)": [[25, "dicee.query_generator.QueryGenerator.get_queries"]], "ground_queries() (dicee.query_generator.querygenerator method)": [[25, "dicee.query_generator.QueryGenerator.ground_queries"]], "list2tuple() (dicee.query_generator.querygenerator method)": [[25, "dicee.query_generator.QueryGenerator.list2tuple"]], "load_queries() (dicee.query_generator.querygenerator method)": [[25, "dicee.query_generator.QueryGenerator.load_queries"]], "load_queries_and_answers() (dicee.query_generator.querygenerator static method)": [[25, "dicee.query_generator.QueryGenerator.load_queries_and_answers"]], "save_queries() (dicee.query_generator.querygenerator method)": [[25, "dicee.query_generator.QueryGenerator.save_queries"]], "save_queries_and_answers() (dicee.query_generator.querygenerator static method)": [[25, "dicee.query_generator.QueryGenerator.save_queries_and_answers"]], "set_global_seed() (dicee.query_generator.querygenerator method)": [[25, "dicee.query_generator.QueryGenerator.set_global_seed"]], "tuple2list() (dicee.query_generator.querygenerator method)": [[25, "dicee.query_generator.QueryGenerator.tuple2list"]], "unmap() (dicee.query_generator.querygenerator method)": [[25, "dicee.query_generator.QueryGenerator.unmap"]], "unmap_query() (dicee.query_generator.querygenerator method)": [[25, "dicee.query_generator.QueryGenerator.unmap_query"]], "write_links() (dicee.query_generator.querygenerator method)": [[25, "dicee.query_generator.QueryGenerator.write_links"]], "loadsavetodisk (class in dicee.read_preprocess_save_load_kg)": [[26, "dicee.read_preprocess_save_load_kg.LoadSaveToDisk"]], "preprocesskg (class in dicee.read_preprocess_save_load_kg)": [[26, "dicee.read_preprocess_save_load_kg.PreprocessKG"]], "readfromdisk (class in dicee.read_preprocess_save_load_kg)": [[26, "dicee.read_preprocess_save_load_kg.ReadFromDisk"]], "add_noisy_triples_into_training() (dicee.read_preprocess_save_load_kg.readfromdisk method)": [[26, "dicee.read_preprocess_save_load_kg.ReadFromDisk.add_noisy_triples_into_training"]], "dicee.read_preprocess_save_load_kg": [[26, "module-dicee.read_preprocess_save_load_kg"]], "load() (dicee.read_preprocess_save_load_kg.loadsavetodisk method)": [[26, "dicee.read_preprocess_save_load_kg.LoadSaveToDisk.load"]], "preprocess_with_byte_pair_encoding() (dicee.read_preprocess_save_load_kg.preprocesskg method)": [[26, "dicee.read_preprocess_save_load_kg.PreprocessKG.preprocess_with_byte_pair_encoding"]], "preprocess_with_byte_pair_encoding_with_padding() (dicee.read_preprocess_save_load_kg.preprocesskg method)": [[26, "dicee.read_preprocess_save_load_kg.PreprocessKG.preprocess_with_byte_pair_encoding_with_padding"]], "preprocess_with_pandas() (dicee.read_preprocess_save_load_kg.preprocesskg method)": [[26, "dicee.read_preprocess_save_load_kg.PreprocessKG.preprocess_with_pandas"]], "preprocess_with_polars() (dicee.read_preprocess_save_load_kg.preprocesskg method)": [[26, "dicee.read_preprocess_save_load_kg.PreprocessKG.preprocess_with_polars"]], "remove_triples_from_train_with_condition() (dicee.read_preprocess_save_load_kg.preprocesskg method)": [[26, "dicee.read_preprocess_save_load_kg.PreprocessKG.remove_triples_from_train_with_condition"]], "save() (dicee.read_preprocess_save_load_kg.loadsavetodisk method)": [[26, "dicee.read_preprocess_save_load_kg.LoadSaveToDisk.save"]], "sequential_vocabulary_construction() (dicee.read_preprocess_save_load_kg.preprocesskg method)": [[26, "dicee.read_preprocess_save_load_kg.PreprocessKG.sequential_vocabulary_construction"]], "start() (dicee.read_preprocess_save_load_kg.preprocesskg method)": [[26, "dicee.read_preprocess_save_load_kg.PreprocessKG.start"]], "start() (dicee.read_preprocess_save_load_kg.readfromdisk method)": [[26, "dicee.read_preprocess_save_load_kg.ReadFromDisk.start"]], "preprocesskg (class in dicee.read_preprocess_save_load_kg.preprocess)": [[27, "dicee.read_preprocess_save_load_kg.preprocess.PreprocessKG"]], "dicee.read_preprocess_save_load_kg.preprocess": [[27, "module-dicee.read_preprocess_save_load_kg.preprocess"]], "preprocess_with_byte_pair_encoding() (dicee.read_preprocess_save_load_kg.preprocess.preprocesskg method)": [[27, "dicee.read_preprocess_save_load_kg.preprocess.PreprocessKG.preprocess_with_byte_pair_encoding"]], "preprocess_with_byte_pair_encoding_with_padding() (dicee.read_preprocess_save_load_kg.preprocess.preprocesskg method)": [[27, "dicee.read_preprocess_save_load_kg.preprocess.PreprocessKG.preprocess_with_byte_pair_encoding_with_padding"]], "preprocess_with_pandas() (dicee.read_preprocess_save_load_kg.preprocess.preprocesskg method)": [[27, "dicee.read_preprocess_save_load_kg.preprocess.PreprocessKG.preprocess_with_pandas"]], "preprocess_with_polars() (dicee.read_preprocess_save_load_kg.preprocess.preprocesskg method)": [[27, "dicee.read_preprocess_save_load_kg.preprocess.PreprocessKG.preprocess_with_polars"]], "remove_triples_from_train_with_condition() (dicee.read_preprocess_save_load_kg.preprocess.preprocesskg method)": [[27, "dicee.read_preprocess_save_load_kg.preprocess.PreprocessKG.remove_triples_from_train_with_condition"]], "sequential_vocabulary_construction() (dicee.read_preprocess_save_load_kg.preprocess.preprocesskg method)": [[27, "dicee.read_preprocess_save_load_kg.preprocess.PreprocessKG.sequential_vocabulary_construction"]], "start() (dicee.read_preprocess_save_load_kg.preprocess.preprocesskg method)": [[27, "dicee.read_preprocess_save_load_kg.preprocess.PreprocessKG.start"]], "readfromdisk (class in dicee.read_preprocess_save_load_kg.read_from_disk)": [[28, "dicee.read_preprocess_save_load_kg.read_from_disk.ReadFromDisk"]], "add_noisy_triples_into_training() (dicee.read_preprocess_save_load_kg.read_from_disk.readfromdisk method)": [[28, "dicee.read_preprocess_save_load_kg.read_from_disk.ReadFromDisk.add_noisy_triples_into_training"]], "dicee.read_preprocess_save_load_kg.read_from_disk": [[28, "module-dicee.read_preprocess_save_load_kg.read_from_disk"]], "start() (dicee.read_preprocess_save_load_kg.read_from_disk.readfromdisk method)": [[28, "dicee.read_preprocess_save_load_kg.read_from_disk.ReadFromDisk.start"]], "loadsavetodisk (class in dicee.read_preprocess_save_load_kg.save_load_disk)": [[29, "dicee.read_preprocess_save_load_kg.save_load_disk.LoadSaveToDisk"]], "dicee.read_preprocess_save_load_kg.save_load_disk": [[29, "module-dicee.read_preprocess_save_load_kg.save_load_disk"]], "load() (dicee.read_preprocess_save_load_kg.save_load_disk.loadsavetodisk method)": [[29, "dicee.read_preprocess_save_load_kg.save_load_disk.LoadSaveToDisk.load"]], "save() (dicee.read_preprocess_save_load_kg.save_load_disk.loadsavetodisk method)": [[29, "dicee.read_preprocess_save_load_kg.save_load_disk.LoadSaveToDisk.save"]], "apply_reciprical_or_noise() (in module dicee.read_preprocess_save_load_kg.util)": [[30, "dicee.read_preprocess_save_load_kg.util.apply_reciprical_or_noise"]], "create_constraints() (in module dicee.read_preprocess_save_load_kg.util)": [[30, "dicee.read_preprocess_save_load_kg.util.create_constraints"]], "create_recipriocal_triples() (in module dicee.read_preprocess_save_load_kg.util)": [[30, "dicee.read_preprocess_save_load_kg.util.create_recipriocal_triples"]], "dataset_sanity_checking() (in module dicee.read_preprocess_save_load_kg.util)": [[30, "dicee.read_preprocess_save_load_kg.util.dataset_sanity_checking"]], "dicee.read_preprocess_save_load_kg.util": [[30, "module-dicee.read_preprocess_save_load_kg.util"]], "get_ee_vocab() (in module dicee.read_preprocess_save_load_kg.util)": [[30, "dicee.read_preprocess_save_load_kg.util.get_ee_vocab"]], "get_er_vocab() (in module dicee.read_preprocess_save_load_kg.util)": [[30, "dicee.read_preprocess_save_load_kg.util.get_er_vocab"]], "get_re_vocab() (in module dicee.read_preprocess_save_load_kg.util)": [[30, "dicee.read_preprocess_save_load_kg.util.get_re_vocab"]], "index_triples_with_pandas() (in module dicee.read_preprocess_save_load_kg.util)": [[30, "dicee.read_preprocess_save_load_kg.util.index_triples_with_pandas"]], "load_numpy_ndarray() (in module dicee.read_preprocess_save_load_kg.util)": [[30, "dicee.read_preprocess_save_load_kg.util.load_numpy_ndarray"]], "load_pickle() (in module dicee.read_preprocess_save_load_kg.util)": [[30, "dicee.read_preprocess_save_load_kg.util.load_pickle"]], "load_with_pandas() (in module dicee.read_preprocess_save_load_kg.util)": [[30, "dicee.read_preprocess_save_load_kg.util.load_with_pandas"]], "read_from_disk() (in module dicee.read_preprocess_save_load_kg.util)": [[30, "dicee.read_preprocess_save_load_kg.util.read_from_disk"]], "read_from_triple_store() (in module dicee.read_preprocess_save_load_kg.util)": [[30, "dicee.read_preprocess_save_load_kg.util.read_from_triple_store"]], "read_with_pandas() (in module dicee.read_preprocess_save_load_kg.util)": [[30, "dicee.read_preprocess_save_load_kg.util.read_with_pandas"]], "read_with_polars() (in module dicee.read_preprocess_save_load_kg.util)": [[30, "dicee.read_preprocess_save_load_kg.util.read_with_polars"]], "save_numpy_ndarray() (in module dicee.read_preprocess_save_load_kg.util)": [[30, "dicee.read_preprocess_save_load_kg.util.save_numpy_ndarray"]], "save_pickle() (in module dicee.read_preprocess_save_load_kg.util)": [[30, "dicee.read_preprocess_save_load_kg.util.save_pickle"]], "timeit() (in module dicee.read_preprocess_save_load_kg.util)": [[30, "dicee.read_preprocess_save_load_kg.util.timeit"]], "dicee.sanity_checkers": [[31, "module-dicee.sanity_checkers"]], "is_sparql_endpoint_alive() (in module dicee.sanity_checkers)": [[31, "dicee.sanity_checkers.is_sparql_endpoint_alive"]], "sanity_checking_with_arguments() (in module dicee.sanity_checkers)": [[31, "dicee.sanity_checkers.sanity_checking_with_arguments"]], "validate_knowledge_graph() (in module dicee.sanity_checkers)": [[31, "dicee.sanity_checkers.validate_knowledge_graph"]], "dicee.scripts": [[32, "module-dicee.scripts"]], "dicee.scripts.index": [[33, "module-dicee.scripts.index"]], "get_default_arguments() (in module dicee.scripts.index)": [[33, "dicee.scripts.index.get_default_arguments"]], "main() (in module dicee.scripts.index)": [[33, "dicee.scripts.index.main"]], "dicee.scripts.run": [[34, "module-dicee.scripts.run"]], "get_default_arguments() (in module dicee.scripts.run)": [[34, "dicee.scripts.run.get_default_arguments"]], "main() (in module dicee.scripts.run)": [[34, "dicee.scripts.run.main"]], "neuralsearcher (class in dicee.scripts.serve)": [[35, "dicee.scripts.serve.NeuralSearcher"]], "app (in module dicee.scripts.serve)": [[35, "dicee.scripts.serve.app"]], "dicee.scripts.serve": [[35, "module-dicee.scripts.serve"]], "get() (dicee.scripts.serve.neuralsearcher method)": [[35, "dicee.scripts.serve.NeuralSearcher.get"]], "get_default_arguments() (in module dicee.scripts.serve)": [[35, "dicee.scripts.serve.get_default_arguments"]], "main() (in module dicee.scripts.serve)": [[35, "dicee.scripts.serve.main"]], "neural_searcher (in module dicee.scripts.serve)": [[35, "dicee.scripts.serve.neural_searcher"]], "retrieve_embeddings() (in module dicee.scripts.serve)": [[35, "dicee.scripts.serve.retrieve_embeddings"]], "root() (in module dicee.scripts.serve)": [[35, "dicee.scripts.serve.root"]], "search() (dicee.scripts.serve.neuralsearcher method)": [[35, "dicee.scripts.serve.NeuralSearcher.search"]], "search_embeddings() (in module dicee.scripts.serve)": [[35, "dicee.scripts.serve.search_embeddings"]], "add_noisy_triples() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.add_noisy_triples"]], "continual_training_setup_executor() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.continual_training_setup_executor"]], "create_experiment_folder() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.create_experiment_folder"]], "create_recipriocal_triples() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.create_recipriocal_triples"]], "deploy_head_entity_prediction() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.deploy_head_entity_prediction"]], "deploy_relation_prediction() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.deploy_relation_prediction"]], "deploy_tail_entity_prediction() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.deploy_tail_entity_prediction"]], "deploy_triple_prediction() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.deploy_triple_prediction"]], "dicee.static_funcs": [[36, "module-dicee.static_funcs"]], "download_file() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.download_file"]], "download_files_from_url() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.download_files_from_url"]], "download_pretrained_model() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.download_pretrained_model"]], "evaluate() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.evaluate"]], "exponential_function() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.exponential_function"]], "get_ee_vocab() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.get_ee_vocab"]], "get_er_vocab() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.get_er_vocab"]], "get_re_vocab() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.get_re_vocab"]], "intialize_model() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.intialize_model"]], "load_json() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.load_json"]], "load_model() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.load_model"]], "load_model_ensemble() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.load_model_ensemble"]], "load_numpy() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.load_numpy"]], "load_pickle() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.load_pickle"]], "numpy_data_type_changer() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.numpy_data_type_changer"]], "random_prediction() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.random_prediction"]], "read_or_load_kg() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.read_or_load_kg"]], "save_checkpoint_model() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.save_checkpoint_model"]], "save_embeddings() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.save_embeddings"]], "save_numpy_ndarray() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.save_numpy_ndarray"]], "save_pickle() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.save_pickle"]], "select_model() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.select_model"]], "store() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.store"]], "timeit() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.timeit"]], "vocab_to_parquet() (in module dicee.static_funcs)": [[36, "dicee.static_funcs.vocab_to_parquet"]], "dicee.static_funcs_training": [[37, "module-dicee.static_funcs_training"]], "efficient_zero_grad() (in module dicee.static_funcs_training)": [[37, "dicee.static_funcs_training.efficient_zero_grad"]], "evaluate_bpe_lp() (in module dicee.static_funcs_training)": [[37, "dicee.static_funcs_training.evaluate_bpe_lp"]], "evaluate_lp() (in module dicee.static_funcs_training)": [[37, "dicee.static_funcs_training.evaluate_lp"]], "create_constraints() (in module dicee.static_preprocess_funcs)": [[38, "dicee.static_preprocess_funcs.create_constraints"]], "dicee.static_preprocess_funcs": [[38, "module-dicee.static_preprocess_funcs"]], "enable_log (in module dicee.static_preprocess_funcs)": [[38, "dicee.static_preprocess_funcs.enable_log"]], "get_ee_vocab() (in module dicee.static_preprocess_funcs)": [[38, "dicee.static_preprocess_funcs.get_ee_vocab"]], "get_er_vocab() (in module dicee.static_preprocess_funcs)": [[38, "dicee.static_preprocess_funcs.get_er_vocab"]], "get_re_vocab() (in module dicee.static_preprocess_funcs)": [[38, "dicee.static_preprocess_funcs.get_re_vocab"]], "mapping_from_first_two_cols_to_third() (in module dicee.static_preprocess_funcs)": [[38, "dicee.static_preprocess_funcs.mapping_from_first_two_cols_to_third"]], "preprocesses_input_args() (in module dicee.static_preprocess_funcs)": [[38, "dicee.static_preprocess_funcs.preprocesses_input_args"]], "timeit() (in module dicee.static_preprocess_funcs)": [[38, "dicee.static_preprocess_funcs.timeit"]], "dice_trainer (class in dicee.trainer.dice_trainer)": [[39, "dicee.trainer.dice_trainer.DICE_Trainer"]], "continual_start() (dicee.trainer.dice_trainer.dice_trainer method)": [[39, "dicee.trainer.dice_trainer.DICE_Trainer.continual_start"]], "dicee.trainer.dice_trainer": [[39, "module-dicee.trainer.dice_trainer"]], "get_callbacks() (in module dicee.trainer.dice_trainer)": [[39, "dicee.trainer.dice_trainer.get_callbacks"]], "initialize_dataloader() (dicee.trainer.dice_trainer.dice_trainer method)": [[39, "dicee.trainer.dice_trainer.DICE_Trainer.initialize_dataloader"]], "initialize_dataset() (dicee.trainer.dice_trainer.dice_trainer method)": [[39, "dicee.trainer.dice_trainer.DICE_Trainer.initialize_dataset"]], "initialize_or_load_model() (dicee.trainer.dice_trainer.dice_trainer method)": [[39, "dicee.trainer.dice_trainer.DICE_Trainer.initialize_or_load_model"]], "initialize_trainer() (dicee.trainer.dice_trainer.dice_trainer method)": [[39, "dicee.trainer.dice_trainer.DICE_Trainer.initialize_trainer"]], "initialize_trainer() (in module dicee.trainer.dice_trainer)": [[39, "dicee.trainer.dice_trainer.initialize_trainer"]], "k_fold_cross_validation() (dicee.trainer.dice_trainer.dice_trainer method)": [[39, "dicee.trainer.dice_trainer.DICE_Trainer.k_fold_cross_validation"]], "start() (dicee.trainer.dice_trainer.dice_trainer method)": [[39, "dicee.trainer.dice_trainer.DICE_Trainer.start"]], "dice_trainer (class in dicee.trainer)": [[40, "dicee.trainer.DICE_Trainer"]], "continual_start() (dicee.trainer.dice_trainer method)": [[40, "dicee.trainer.DICE_Trainer.continual_start"]], "dicee.trainer": [[40, "module-dicee.trainer"]], "initialize_dataloader() (dicee.trainer.dice_trainer method)": [[40, "dicee.trainer.DICE_Trainer.initialize_dataloader"]], "initialize_dataset() (dicee.trainer.dice_trainer method)": [[40, "dicee.trainer.DICE_Trainer.initialize_dataset"]], "initialize_or_load_model() (dicee.trainer.dice_trainer method)": [[40, "dicee.trainer.DICE_Trainer.initialize_or_load_model"]], "initialize_trainer() (dicee.trainer.dice_trainer method)": [[40, "dicee.trainer.DICE_Trainer.initialize_trainer"]], "k_fold_cross_validation() (dicee.trainer.dice_trainer method)": [[40, "dicee.trainer.DICE_Trainer.k_fold_cross_validation"]], "start() (dicee.trainer.dice_trainer method)": [[40, "dicee.trainer.DICE_Trainer.start"]], "torchtrainer (class in dicee.trainer.torch_trainer)": [[41, "dicee.trainer.torch_trainer.TorchTrainer"]], "dicee.trainer.torch_trainer": [[41, "module-dicee.trainer.torch_trainer"]], "extract_input_outputs_set_device() (dicee.trainer.torch_trainer.torchtrainer method)": [[41, "dicee.trainer.torch_trainer.TorchTrainer.extract_input_outputs_set_device"]], "fit() (dicee.trainer.torch_trainer.torchtrainer method)": [[41, "dicee.trainer.torch_trainer.TorchTrainer.fit"]], "forward_backward_update() (dicee.trainer.torch_trainer.torchtrainer method)": [[41, "dicee.trainer.torch_trainer.TorchTrainer.forward_backward_update"]], "ddptrainer (class in dicee.trainer.torch_trainer_ddp)": [[42, "dicee.trainer.torch_trainer_ddp.DDPTrainer"]], "nodetrainer (class in dicee.trainer.torch_trainer_ddp)": [[42, "dicee.trainer.torch_trainer_ddp.NodeTrainer"]], "torchddptrainer (class in dicee.trainer.torch_trainer_ddp)": [[42, "dicee.trainer.torch_trainer_ddp.TorchDDPTrainer"]], "dicee.trainer.torch_trainer_ddp": [[42, "module-dicee.trainer.torch_trainer_ddp"]], "extract_input_outputs() (dicee.trainer.torch_trainer_ddp.ddptrainer method)": [[42, "dicee.trainer.torch_trainer_ddp.DDPTrainer.extract_input_outputs"]], "extract_input_outputs() (dicee.trainer.torch_trainer_ddp.nodetrainer method)": [[42, "dicee.trainer.torch_trainer_ddp.NodeTrainer.extract_input_outputs"]], "fit() (dicee.trainer.torch_trainer_ddp.torchddptrainer method)": [[42, "dicee.trainer.torch_trainer_ddp.TorchDDPTrainer.fit"]], "print_peak_memory() (in module dicee.trainer.torch_trainer_ddp)": [[42, "dicee.trainer.torch_trainer_ddp.print_peak_memory"]], "train() (dicee.trainer.torch_trainer_ddp.ddptrainer method)": [[42, "dicee.trainer.torch_trainer_ddp.DDPTrainer.train"]], "train() (dicee.trainer.torch_trainer_ddp.nodetrainer method)": [[42, "dicee.trainer.torch_trainer_ddp.NodeTrainer.train"]]}})