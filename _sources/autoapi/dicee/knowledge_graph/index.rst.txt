dicee.knowledge_graph
=====================

.. py:module:: dicee.knowledge_graph


Classes
-------

.. autoapisummary::

   dicee.knowledge_graph.KG


Module Contents
---------------

.. py:class:: KG(dataset_dir: str = None, byte_pair_encoding: bool = False, padding: bool = False, add_noise_rate: float = None, sparql_endpoint: str = None, path_single_kg: str = None, path_for_deserialization: str = None, add_reciprical: bool = None, eval_model: str = None, read_only_few: int = None, sample_triples_ratio: float = None, path_for_serialization: str = None, entity_to_idx=None, relation_to_idx=None, backend=None, training_technique: str = None)

   Knowledge Graph


   .. py:attribute:: dataset_dir


   .. py:attribute:: byte_pair_encoding


   .. py:attribute:: ordered_shaped_bpe_tokens
      :value: None



   .. py:attribute:: sparql_endpoint


   .. py:attribute:: add_noise_rate


   .. py:attribute:: num_entities
      :value: None



   .. py:attribute:: num_relations
      :value: None



   .. py:attribute:: path_single_kg


   .. py:attribute:: path_for_deserialization


   .. py:attribute:: add_reciprical


   .. py:attribute:: eval_model


   .. py:attribute:: read_only_few


   .. py:attribute:: sample_triples_ratio


   .. py:attribute:: path_for_serialization


   .. py:attribute:: entity_to_idx


   .. py:attribute:: relation_to_idx


   .. py:attribute:: backend


   .. py:attribute:: training_technique


   .. py:attribute:: idx_entity_to_bpe_shaped


   .. py:attribute:: enc


   .. py:attribute:: num_tokens


   .. py:attribute:: num_bpe_entities
      :value: None



   .. py:attribute:: padding


   .. py:attribute:: dummy_id


   .. py:attribute:: max_length_subword_tokens
      :value: None



   .. py:attribute:: train_set_target
      :value: None



   .. py:attribute:: target_dim
      :value: None



   .. py:attribute:: train_target_indices
      :value: None



   .. py:attribute:: ordered_bpe_entities
      :value: None



   .. py:property:: entities_str
      :type: List



   .. py:property:: relations_str
      :type: List



   .. py:method:: func_triple_to_bpe_representation(triple: List[str])


